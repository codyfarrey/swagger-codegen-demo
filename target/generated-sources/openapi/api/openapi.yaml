openapi: 3.0.0
info:
  contact:
    email: api@interactivebrokers.com
    name: API support
  description: The IB REST API reference documentation
  title: IB REST API
  version: 2.13.0
externalDocs:
  description: Find out more about IB's public API offerings.
  url: https://ibkrcampus.com/ibkr-api-page/ibkr-api-home/
servers:
- description: Production
  url: https://api.ibkr.com
- description: Sandbox
  url: https://qa.interactivebrokers.com
tags:
- name: Account Management Accounts
  x-displayName: Accounts
  x-ib-tag-group-name: Account Management
- name: Account Management Banking
  x-displayName: Banking
  x-ib-tag-group-name: Account Management
- name: Account Management Reports
  x-displayName: Reports
  x-ib-tag-group-name: Account Management
- name: Account Management Utilities
  x-displayName: Utilities
  x-ib-tag-group-name: Account Management
- name: Authorization SSO Sessions
  x-displayName: SSO Sessions
  x-ib-tag-group-name: Authorization
- name: Authorization Token
  x-displayName: Token
  x-ib-tag-group-name: Authorization
- name: Trading Accounts
  x-displayName: Accounts
  x-ib-tag-group-name: Trading
- name: Trading Alerts
  x-displayName: Alerts
  x-ib-tag-group-name: Trading
- name: Trading Contracts
  x-displayName: Contracts
  x-ib-tag-group-name: Trading
- name: Trading FA Allocation Management
  x-displayName: FA Allocation Management
  x-ib-tag-group-name: Trading
- name: Trading FYIs and Notifications
  x-displayName: FYIs and Notifications
  x-ib-tag-group-name: Trading
- name: Trading Market Data
  x-displayName: Market Data
  x-ib-tag-group-name: Trading
- name: Trading OAuth 1.0a
  x-displayName: OAuth 1.0a
  x-ib-tag-group-name: Trading
- name: Trading Orders
  x-displayName: Orders
  x-ib-tag-group-name: Trading
- name: Trading Portfolio
  x-displayName: Portfolio
  x-ib-tag-group-name: Trading
- name: Trading Portfolio Analyst
  x-displayName: Portfolio Analyst
  x-ib-tag-group-name: Trading
- name: Trading Scanner
  x-displayName: Scanner
  x-ib-tag-group-name: Trading
- name: Trading Session
  x-displayName: Session
  x-ib-tag-group-name: Trading
- name: Trading Watchlists
  x-displayName: Watchlists
  x-ib-tag-group-name: Trading
- name: Trading Websocket
  x-displayName: Websocket
  x-ib-tag-group-name: Trading
- name: Utilities Echo
  x-displayName: Echo
  x-ib-tag-group-name: Utilities
paths:
  /acesws/{accountId}/signatures-and-owners:
    get:
      description: Receive a list of all applicant names on the account and for which
        account and entity is represented.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: The account identifier to receive information for
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    accountId: U1234567
                    users:
                    - roleId: OWNER
                      hasRightCodeInd: true
                      entity:
                        entityType: INDIVIDUAL
                        entityName: John Smith
                        firstName: John
                        lastName: Smith
                    applicant:
                      signatures:
                      - John Smith
              schema:
                $ref: '#/components/schemas/signatureAndOwners'
          description: An object containing valid accounts and the account properties
            regarding trading access. This endpoint is also used to confirm account
            validation.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                accountId-is-empty:
                  value:
                    error: "Bad Request: accountId needed"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; accountId is empty
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Signatures And Owners
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/deliveryoptions:
    get:
      description: Options for sending fyis to email and other devices.
      responses:
        "200":
          content:
            application/json:
              examples:
                delivery-options:
                  value:
                    E:
                    - NM: iPhone
                      I: apn://mtws@SDFSDFDSFS123123DSFSDF
                      UI: apn://mtws@SDFSDFDSFS123123DSFSDF
                      A: 1
                    M: 1
              schema:
                $ref: '#/components/schemas/deliveryOptions'
          description: Successfully retrieve preset details
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Get Delivery OptionsCopy Location
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/deliveryoptions/device:
    post:
      description: Choose whether a particular device is enabled or disabled.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fyiEnableDeviceOption'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'
          description: Successfully retrieve preset details
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Enable/Disable Device Option
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/deliveryoptions/email:
    put:
      description: Enable or disable your account’s primary email to receive notifications.
      parameters:
      - explode: false
        in: query
        name: enabled
        required: true
        schema:
          description: |
            Enable or disable your email. Value format: true: Enable; false: Disable
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                successEdited:
                  value:
                    V: 1
                    T: 10
              schema:
                $ref: '#/components/schemas/fyiVT'
          description: Successfully enabled or disabled your email notifications.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Enable/Disable Email Option
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/deliveryoptions/{deviceId}:
    delete:
      description: Delete a specific device from our saved list of notification devices.
      parameters:
      - explode: false
        in: path
        name: deviceId
        required: true
        schema:
          description: |
            Display the device identifier to delete from IB’s saved list. Can be retrieved from /fyi/deliveryoptions.
        style: simple
      responses:
        "200":
          description: "No response message is returned. Instead, you will only receive\
            \ an empty string with a 200 OK status code indicating a successfully\
            \ deleted account."
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Delete A Device
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
  /fyi/disclaimer/{typecode}:
    get:
      description: Receive additional disclaimers based on the specified typecode.
      parameters:
      - explode: false
        in: path
        name: typecode
        required: true
        schema:
          $ref: '#/components/schemas/typecodes'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ba-disclaimer:
                  value:
                    DT: "This communication is provided for information purposes only\
                      \ and is not a recommendation or a solicitation to buy, sell\
                      \ or hold any investment product. Selling securities short involves\
                      \ significant risk and you may lose more than you invest."
                    FC: BA
              schema:
                $ref: '#/components/schemas/disclaimerInfo'
          description: Successfully disclaimer details
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Disclaimer For A Certain Kind Of Fyi
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    put:
      description: Mark a specific disclaimer message as read.
      parameters:
      - explode: false
        in: path
        name: typecode
        required: true
        schema:
          $ref: '#/components/schemas/typecodes'
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                marked:
                  value:
                    V: 1
                    T: 10
              schema:
                $ref: '#/components/schemas/fyiVT'
          description: Successfully marked as read
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Mark Disclaimer Read
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/notifications:
    get:
      description: Get a list of available notifications.
      parameters:
      - explode: false
        in: query
        name: max
        required: true
        schema:
          description: |
            Specify the maximum number of notifications to receive. Can request a maximum of 10 notifications.
          example: "10"
          format: int32
          type: string
        style: form
      - explode: false
        in: query
        name: include
        required: false
        schema:
          description: include
        style: form
      - explode: false
        in: query
        name: exclude
        required: false
        schema:
          description: exclude
        style: form
      - explode: false
        in: query
        name: id
        required: false
        schema:
          description: "if more required, notifcationId of last notification should\
            \ be used to define next batch border"
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                all-notifications:
                  value:
                  - R: 0
                    D: "1710847062.0"
                    MS: "FYI: Changes in Analyst Ratings"
                    MD: "<html>Some investors use analysts ratings to stay informed\
                      \ about their investments. Analysts have changed their ratings\
                      \ for one or more companies in which you hold positions.   \
                      \ <br />The following summary displays the affected companies,\
                      \ the current number of analysts by rating category and, in\
                      \ parentheses, the recent change in the number of analysts rating\
                      \ the company within each rating category.  <br /> - JWN@NYSE:\
                      \ Buy: 1(0), Outperform: 1(0), Hold: 12(-1), Underperform: 5(0),\
                      \ Sell: 0(0). Held in: D****000 <br /> - RF@NYSE: Buy: 4(+1),\
                      \ Outperform: 5(0), Hold: 17(-1), Underperform: 1(0), Sell:\
                      \ 0(0). Held in: D****000 <br /> <br />   Note: Current ratings\
                      \ are from Reuters and may not reflect all rating changes from\
                      \ other sources such as Street Insider and Briefing.</html>"
                    ID: "2024031947509444"
                    HT: 0
                    FC: PF
                  - R: 1
                    D: "1710761985.0"
                    MS: "FYI: Changes in Analyst Ratings"
                    MD: "<html>Some investors use analysts ratings to stay informed\
                      \ about their investments. Analysts have changed their ratings\
                      \ for one or more companies in which you hold positions.   \
                      \ <br />The following summary displays the affected companies,\
                      \ the current number of analysts by rating category and, in\
                      \ parentheses, the recent change in the number of analysts rating\
                      \ the company within each rating category.  <br /> - F@NYSE:\
                      \ Buy: 4(0), Outperform: 4(0), Hold: 15(+1), Underperform: 3(-1),\
                      \ Sell: 1(0). Held in: D****000 <br /> - RF@NYSE: Buy: 4(+1),\
                      \ Outperform: 5(0), Hold: 17(-1), Underperform: 1(0), Sell:\
                      \ 0(0). Held in: D****000 <br /> - TSLA@NASDAQ: Buy: 5(0), Outperform:\
                      \ 12(0), Hold: 21(0), Underperform: 7(+1), Sell: 4(0). Held\
                      \ in: D****000 <br /> - UAA@NYSE: Buy: 6(0), Outperform: 2(-1),\
                      \ Hold: 17(+1), Underperform: 2(0), Sell: 0(0). Held in: D****000\
                      \ <br /> <br />   Note: Current ratings are from Reuters and\
                      \ may not reflect all rating changes from other sources such\
                      \ as Street Insider and Briefing.</html>"
                    ID: "2024031843829868"
                    HT: 0
                    FC: PF
                  - R: 1
                    D: "1710501829.0"
                    MS: "FYI: Changes in Analyst Ratings"
                    MD: "<html>Some investors use analysts ratings to stay informed\
                      \ about their investments. Analysts have changed their ratings\
                      \ for one or more companies in which you hold positions.   \
                      \ <br />The following summary displays the affected companies,\
                      \ the current number of analysts by rating category and, in\
                      \ parentheses, the recent change in the number of analysts rating\
                      \ the company within each rating category.  <br /> - F@NYSE:\
                      \ Buy: 4(0), Outperform: 4(0), Hold: 14(+1), Underperform: 4(0),\
                      \ Sell: 1(0). Held in: D****000 <br /> - UAA@NYSE: Buy: 6(0),\
                      \ Outperform: 3(-1), Hold: 16(-1), Underperform: 2(+1), Sell:\
                      \ 0(0). Held in: D****000 <br /> <br />   Note: Current ratings\
                      \ are from Reuters and may not reflect all rating changes from\
                      \ other sources such as Street Insider and Briefing.</html>"
                    ID: "2024031537589663"
                    HT: 0
                    FC: PF
              schema:
                $ref: '#/components/schemas/notifications'
          description: Successfully enabled or disabled your email notifications.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get A List Of Notifications
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/notifications/{notificationID}:
    put:
      description: Mark a particular notification message as read or unread.
      parameters:
      - explode: false
        in: path
        name: notificationId
        required: true
        schema:
          description: Code used to signify a specific notification to mark. Value
            received from /fyi/notifications
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                acknowledged:
                  value:
                    V: 1
                    T: 5
                    P:
                      R: 1
                      ID: "2024031947509444"
              schema:
                $ref: '#/components/schemas/notificationReadAcknowledge'
          description: Successfully enabled or disabled your email notifications.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Mark Notification Read
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/settings:
    get:
      description: Return the current choices of subscriptions for notifications.
      responses:
        "200":
          content:
            application/json:
              examples:
                settings:
                  value:
                  - FC: PF
                    H: 0
                    A: 1
                    FD: Notify me of recent activity affecting my portfolio holdings.
                    FN: Portfolio FYIs
                  - FC: PT
                    H: 0
                    A: 1
                    FD: Notify me of potential account configuration changes needed
                      and useful features based on my position transfers.
                    FN: Position Transfer
              schema:
                $ref: '#/components/schemas/fyiSettings'
          description: Indicates data is being returned successfully.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Get Notification Settings
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/settings/{typecode}:
    post:
      description: Enable or disable group of notifications by the specific typecode.
      parameters:
      - explode: false
        in: path
        name: typecode
        required: true
        schema:
          $ref: '#/components/schemas/typecodes'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_fyi_settings__typecode__post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                successEdited:
                  value:
                    V: 1
                    T: 10
              schema:
                $ref: '#/components/schemas/fyiVT'
          description: Successfully retrieve preset details
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Modify FYI Notifications
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /fyi/unreadnumber:
    get:
      description: Returns the total number of unread notifications
      responses:
        "200":
          content:
            application/json:
              examples:
                unreadnumber:
                  value:
                    BN: 4
              schema:
                $ref: '#/components/schemas/_fyi_unreadnumber_get_200_response'
          description: Indicates data is being returned successfully.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_fyi_unreadnumber_get_423_response'
          description: Return if called too frequently. Should not be called more
            than 1 time in 5 minutes
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Unread Bulletins
      tags:
      - Trading FYIs and Notifications
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /gw/api/v1/accounts:
    get:
      description: "Retrieve the application request and IBKR response data based\
        \ on IBKR accountId or externalId. Only available for accounts that originate\
        \ via API<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: query
        name: accountId
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: externalId
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_gw_api_v1_accounts_get_200_response'
          description: Retrieve the application request and IBKR response data based
            on IBKR accountId or externalId. Only available for accounts that originate
            via API
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Retrieve Processed Application
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
    patch:
      description: "Update information for an existing accountId<br><br>**Scope**:\
        \ `accounts.write`<br>**Security Policy**: `Signed JWT`"
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/AccountManagementRequestsPayload'
        required: true
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Update information for an existing accountId
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestInfoResponse'
          description: Initiate update information for an existing accountId.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Update Account
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - accounts.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
    post:
      description: "Submit account application. This will create brokerage account\
        \ for the end user.<br><br>**Scope**: `accounts.write`<br>**Security Policy**:\
        \ `Signed JWT`"
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/ApplicationPayload'
        required: true
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Submit account application. This will create brokerage account
            for the end user.
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestInfoResponse'
          description: Submit account application. This will initiate creation of
            brokerage account for the end user.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Create Account
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - accounts.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/close:
    post:
      description: "Submit request to close account that is opened.<br><br>**Scope**:\
        \ `accounts.write`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Close Account - with withdrawal Information:
                value:
                  instructionType: ACCOUNT_CLOSE
                  instruction:
                    clientInstructionId: "1012983"
                    accountId: U46377
                    closeReason: Input your reason of closure here
                    withdrawalInfo:
                      bankInstructionName: test instruction
                      bankInstructionMethod: WIRE
              Close Account - without withdrawal Information:
                value:
                  instructionType: ACCOUNT_CLOSE
                  instruction:
                    clientInstructionId: "1012983"
                    accountId: U46377
                    closeReason: Input your reason of closure here
            schema:
              $ref: '#/components/schemas/_gw_api_v1_accounts_close_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 1013031
                  instructionType: ACCOUNT_CLOSE
                  instructionStatus: PENDING
                  instructionId: 43091814
                instructionSetId: 1703
                status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: bankInstructionName
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2847"
                instructionResult:
                  clientInstructionId: 12001117
                  instructionType: ACCOUNT_CLOSE
                  instructionStatus: REJECTED
                  instructionId: 43092765
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.AccountClose
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "1701"
                instructionResult:
                  clientInstructionId: 1013030
                  instructionType: ACCOUNT_CLOSE
                  instructionStatus: REJECTED
                  instructionId: 43092465
                  error:
                    errorCode: CORRUPT_DATA_INVALID_ACCT
                    errorMessage: Account L46377 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Close Account
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - accounts.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/documents:
    post:
      description: "Provides mechanism to submit Agreements and Disclosures to IBKR\
        \ once a day instead of with each application. We store these documents on\
        \ the servers and will use them for new application requests submitted that\
        \ day.<ul><li>Documents will need to be submitted once a day (before the Applications\
        \ are submitted). PDFs will be displayed and submitted as is- no changes/edits\
        \ will be made to the actual PDF files.</li><li>This end-point will not process\
        \ any Tax Form Documents. Tax Form document should be submitted with every\
        \ application</li><li>If submitted in the morning, you only need to include\
        \ the Tax Form attachment for each applicant. Otherwise, you will need to\
        \ include PDFs with each application (Create Account).</li></ul><br><br>**Scope**:\
        \ `accounts.write`<br>**Security Policy**: `Signed JWT`"
      requestBody:
        content:
          application/jwt:
            schema:
              $ref: '#/components/schemas/ProcessDocuments'
        required: true
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Submit standard agreements and disclosures
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Submit General Agreements And Disclosures
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - accounts.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/login-messages:
    get:
      description: "Query all accounts associated with ‘Client ID’ that have incomplete\
        \ login message<br><br>**Scope**: `accounts.read`<br>**Security Policy**:\
        \ `HTTPS`"
      parameters:
      - explode: false
        in: query
        name: loginMessageRequest
        required: true
        schema:
          $ref: '#/components/schemas/LoginMessageRequest'
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginMessageResponse'
          description: Query all accounts associated with ‘Client ID’ that have incomplete
            login message
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Login Messages
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/status:
    get:
      description: "Query status of all accounts associated with ‘Client ID'<br><br>**Scope**:\
        \ `accounts.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: query
        name: accountStatusRequest
        required: true
        schema:
          $ref: '#/components/schemas/AccountStatusRequest'
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusBulkResponse'
          description: Query status of all accounts associated with ‘Client ID'
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Status Of Accounts
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/{accountId}/details:
    get:
      description: "<br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailsResponse'
          description: "View information associated with account including contact\
            \ data, financial information and trading configuration."
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Account Information
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/{accountId}/kyc:
    get:
      description: "Generate URL address to complete real-time KYC verification using\
        \ Au10Tix<br><br>**Scope**: `accounts.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Au10TixDetailResponse'
          description: Generate URL address to complete real-time KYC verification
            using Au10Tix
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Retrieve Au10Tix URL
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/{accountId}/login-messages:
    get:
      description: "Query login messages assigned by accountId<br><br>**Scope**: `accounts.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginMessageResponse'
          description: Query login messages assigned by accountId
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Login Message By Account
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/{accountId}/status:
    get:
      description: "Query status of account by accountId<br><br>**Scope**: `accounts.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusResponse'
          description: Query status of account by accountId.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Status By Account
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/accounts/{accountId}/tasks:
    get:
      description: "Query registration tasks assigned to account and pending tasks\
        \ that are required for account approval<br><br>**Scope**: `accounts.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: type
        required: false
        schema:
          default: registration
          enum:
          - pending
          - registration
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_gw_api_v1_accounts__accountId__tasks_get_200_response'
          description: Query registration tasks assigned to account and pending tasks
            that are required for account approval
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Registration Tasks
      tags:
      - Account Management Accounts
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/bank-instructions:
    post:
      description: "Create or delete bank instructions by accountId. Only ACH and\
        \ EDDA are supported for 'Create'.<br><br>**Scope**: `bank-instructions.write`<br>**Security\
        \ Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ACH Instruction:
                value:
                  instructionType: ACH_INSTRUCTION
                  instruction:
                    clientInstructionId: "1012983"
                    bankInstructionCode: USACH
                    achType: DEBIT_CREDIT
                    bankInstructionName: TestInstr
                    currency: USD
                    accountId: U223454
                    clientAccountInfo:
                      bankRoutingNumber: "202012983"
                      bankAccountNumber: "101267576983"
                      bankName: JPM Chase
                      bankAccountTypeCode: 0
              Traditional Bank Instruction Verification:
                value:
                  instructionType: TRADITIONAL_BANK_INSTRUCTION_VERIFICATION
                  instruction:
                    clientInstructionId: 7013057
                    bankInstructionCode: USACH
                    bankInstructionName: ACH-Tst1Random172
                    accountId: U117717
                    pendingInstructionId: 43086786
                    creditAmount1: 0.32
                    creditAmount2: 0.46
              Delete Bank Instruction:
                value:
                  instructionType: DELETE_BANK_INSTRUCTION
                  instruction:
                    clientInstructionId: 7013055
                    accountId: U46377
                    bankInstructionName: Test Delete
                    bankInstructionMethod: WIRE
                    currency: USD
              Predefined Destination Instruction:
                value:
                  instructionType: PREDEFINED_DESTINATION_INSTRUCTION
                  instruction:
                    clientInstructionId: 7013053
                    bankInstructionName: Test-ACH-Instr
                    bankInstructionMethod: ACH
                    accountId: U399192
                    currency: USD
                    financialInstitution:
                      name: SBI Bank
                      branchCode: ""
                      branchCodeType: BSB_AUD
                      identifier: SBIN001000
                      identifierType: IFSC
                      clientAccountId: "132456789"
              eDDA Instruction:
                value:
                  instructionType: EDDA_INSTRUCTION
                  instruction:
                    clientInstructionId: 7012743
                    bankInstructionName: "{instrution-name}"
                    currency: CNH
                    accountId: U8072517
                    bankBranchCode: "003"
                    bankAccountNumber: "132456"
                    bankClearingCode: "003"
                    debtorIdentificationDocumentType: hkId
            schema:
              $ref: '#/components/schemas/_gw_api_v1_bank_instructions_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                ACH Instruction:
                  value:
                    instructionResult:
                      clientInstructionId: 80009
                      instructionType: ACH_INSTRUCTION
                      instructionStatus: PENDING
                      instructionId: 43092478
                    instructionSetId: 2487
                    status: 202
                Traditional Bank Instruction Verification:
                  value:
                    instructionResult:
                      clientInstructionId: 7008152
                      instructionType: TRADITIONAL_BANK_INSTRUCTION_VERIFICATION
                      instructionStatus: PENDING
                      instructionId: 43092590
                    instructionSetId: 2614
                    status: 202
                Delete Bank Instruction:
                  value:
                    instructionResult:
                      clientInstructionId: 80009
                      instructionType: delete_bank_instruction
                      instructionStatus: PENDING
                      instructionId: 43092478
                    instructionSetId: 2487
                    status: 202
                Predefined Destination Instruction:
                  value:
                    instructionResult:
                      clientInstructionId: 7008152
                      instructionType: PREDEFINED_DESTINATION_INSTRUCTION
                      instructionStatus: PENDING
                      instructionId: 43092590
                    instructionSetId: 2614
                    status: 202
                eDDA Instruction:
                  value:
                    status: 202
                    instructionSetId: 6401
                    instructionResult:
                      clientInstructionId: 7012743
                      instructionType: EDDA_INSTRUCTION
                      instructionStatus: PENDING
                      instructionId: 43098698
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: accountId
                  description: Missing required parameter
                - field: instructionCode
                  description: Missing required parameter
                - field: achType
                  description: Missing required parameter
                - field: bankInstructionName
                  description: Missing required parameter
                - field: clientAccountInfo
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2603"
                instructionResult:
                  clientInstructionId: 80140
                  instructionType: ACH_INSTRUCTION
                  status: REJECTED
                  instructionId: 43092579
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.AchInstruction
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2602"
                instructionResult:
                  clientInstructionId: 80139
                  instructionType: ACH_INSTRUCTION
                  status: REJECTED
                  instructionId: 43092578
                  error:
                    errorCode: ERROR_ACCOUNT_CP_NOT_RELATED
                    errorMessage: Account U223454 not related to counterparty qatester
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Manage Bank Instructions
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - bank-instructions.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/bank-instructions/query:
    post:
      description: "View active bank instructions for an accountId.<br><br>**Scope**:\
        \ `bank-instructions.read`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Query Bank Instruction - Wire:
                value:
                  instructionType: QUERY_BANK_INSTRUCTION
                  instruction:
                    clientInstructionId: "1012983"
                    accountId: U46377
                    bankInstructionMethod: WIRE
              Query Bank Instruction - ACH Instruction:
                value:
                  instructionType: QUERY_BANK_INSTRUCTION
                  instruction:
                    clientInstructionId: "1012983"
                    accountId: U46377
                    bankInstructionMethod: ACH
              Query Recent Recurring Event:
                value:
                  instructionType: QUERY_RECENT_RECURRING_EVENTS
                  instruction:
                    clientInstructionId: "1012983"
                    ibReferenceId: 206603050
                    numberOfTransactions: 100
              Query Recurring Instructions - using Account ID:
                value:
                  instructionType: QUERY_RECURRING_INSTRUCTIONS
                  instruction:
                    clientInstructionId: "1012983"
                    accountId: U399192
            schema:
              $ref: '#/components/schemas/_gw_api_v1_bank_instructions_query_post_request'
        description: Create get instruction name request body
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Query Bank Instruction - WIRE:
                  value:
                    instructionResult:
                      accountId: U46377
                      bankInstructionMethod: WIRE
                      instructionDetails:
                      - bankInstructionName: testCitadele
                        type: FOREIGN_BANK
                        currency: USD
                      - bankInstructionName: testChase1
                        type: LOCAL_BANK
                        currency: USD
                      - bankInstructionName: testee
                        type: FOREIGN_BANK
                        currency: USD
                      - bankInstructionName: test multiple
                        type: FOREIGN_BANK
                        currency: CHF
                      - bankInstructionName: farawayBroker
                        type: FOREIGN_BROKER
                        currency: CHF
                      ibReferenceId: 0
                      clientInstructionId: 12001819
                      instructionType: QUERY_BANK_INSTRUCTION
                      instructionStatus: PROCESSED
                      instructionId: 43094187
                    instructionSetId: 3771
                    status: 201
                Query Bank Instruction - ACH:
                  value:
                    instructionResult:
                      accountId: U46377
                      bankInstructionMethod: ACH
                      instructionDetails:
                      - bankInstructionName: testCitadele
                        type: FOREIGN_BANK
                        currency: USD
                      - bankInstructionName: testChase1
                        type: LOCAL_BANK
                        currency: USD
                      - bankInstructionName: testee
                        type: FOREIGN_BANK
                        currency: USD
                      - bankInstructionName: test multiple
                        type: FOREIGN_BANK
                        currency: CHF
                      - bankInstructionName: farawayBroker
                        type: FOREIGN_BROKER
                        currency: CHF
                      ibReferenceId: 0
                      clientInstructionId: 12001819
                      instructionType: QUERY_BANK_INSTRUCTION
                      instructionStatus: PROCESSED
                      instructionId: 43094187
                    instructionSetId: 3771
                    status: 201
                Query Recent Recurring Events:
                  value:
                    status: 201
                    instructionSetId: 14132
                    instructionResult:
                      recurringInstructionName: test
                      recurringTransactionType: DEPOSIT
                      recurringTransactionStatus: NOTACTIVATED
                      amount: 1
                      currency: CNH
                      method: "206603051"
                      transactionHistory:
                        maxNumberOfTransactions: 100
                        result:
                        - ibRequestId: 206586288
                          status: ACKNOWLEDGED
                        - ibRequestId: 206582418
                          status: CANCELED
                      ibReferenceId: 0
                      clientInstructionId: 12007909
                      instructionType: QUERY_RECENT_RECURRING_EVENTS
                      instructionStatus: PROCESSED
                      instructionId: 43104464
                Query Recurring Instructions - using Account ID:
                  value:
                    status: 201
                    instructionSetId: 14258
                    instructionResult:
                      accountId: U399192
                      recurringInstructions:
                      - requestId: 206611807
                        bankInstructionName: Recurring Test- cpereira
                        transactionType: DEPOSIT
                        bankInstructionMethod: ACH
                        amount: 1.0
                        currency: USD
                        frequency: MONTHLY
                        startDate: 2024-06-12 00:00:00.0
                        endDate: 2024-12-12 00:00:00.0
                      ibReferenceId: 0
                      clientInstructionId: 12008027
                      instructionType: QUERY_RECENT_INSTRUCTIONS
                      instructionStatus: PROCESSED
                      instructionId: 43104628
              schema:
                $ref: '#/components/schemas/_gw_api_v1_bank_instructions_query_post_201_response'
          description: Instruction successfully created and processed synchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: ibReferenceId
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2445"
                instructionResult:
                  clientInstructionId: 12000610
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092429
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092592
                  error:
                    errorCode: CORRUPT_DATA_INVALID_ACCT
                    errorMessage: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: View Bank Instructions
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - bank-instructions.read
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/client-instructions/{clientInstructionId}:
    get:
      description: "Retrieve status of request by clientInstructionId.<br><br>**Scope**:\
        \ `instructions.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      - description: The target instruction id.
        explode: false
        in: path
        name: clientInstructionId
        required: true
        schema:
          example: -1988905739
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Polling Status Pending:
                  value:
                    status: 200
                    instructionResult:
                      clientInstructionId: 7008156
                      instructionType: INTERNAL_CASH_TRANSFER
                      status: PENDING
                      instructionId: 43092595
                    instructionSetId: 2650
                Polling Status Processed:
                  value:
                    status: 200
                    instructionResult:
                      clientInstructionId: 7008157
                      instructionType: INTERNAL_CASH_TRANSFER
                      status: PROCESSED
                      instructionId: 43092596
                    instructionSetId: 2651
                Polling Status Query Recent Instruction:
                  value:
                    status: 200
                    instructionSetId: 4206
                    instructionResult:
                      instructionHistory:
                        historyMaxDepthNumberOfDays: 30
                        historyMaxDepthNumberOfInstruction: 100000
                        result:
                        - clientInstructionId: 0
                          ibInstructionId: 11383366
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T07:35:36-05
                          status: PENDING_VERIFICATION
                          instructionSetId: 0
                        - clientInstructionId: 0
                          ibInstructionId: 11383356
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T07:00:34-05
                          status: REJECTED
                          instructionSetId: 0
                        - clientInstructionId: 0
                          ibInstructionId: 11383355
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T06:58:22-05
                          status: PENDING
                          instructionSetId: 0
                      ibReferenceId: 0
                      clientInstructionId: 12003152
                      instructionType: QUERY_RECENT_INSTRUCTIONS
                      instructionStatus: PROCESSED
                      instructionId: 11383402
                Polling Status - Deposit Instruction:
                  value:
                    status: 200
                    instructionSetId: 3673
                    instructionResult:
                      ibReferenceId: 166903389
                      clientInstructionId: 1091115677
                      instructionType: DEPOSIT
                      instructionStatus: PROCESSED
                      instructionId: 11177823
                Polling Status - Query IRA Contributions:
                  value:
                    status: 200
                    instructionSetId: 18642
                    instructionResult:
                      accountId: U68903
                      year: "2003"
                      iraType: ROTH NEW
                      contributions:
                      - maximumContributionLimit: 4000
                        yearToDateContribution: 3500
                        allowedContributionLimit: 500
                      ibReferenceId: 0
                      clientInstructionId: 7013308
                      instructionType: QUERY_IRA_CONTRIBUTIONS
                      instructionStatus: PROCESSED
                      instructionId: 43134476
                Polling Status - Query IRA Contributions (SEP Accounts):
                  value:
                    status: 200
                    instructionSetId: 18640
                    instructionResult:
                      accountId: U1032333
                      year: "2022"
                      iraType: SEP
                      contributions:
                      - type: EMPLOYEE
                        maximumContributionLimit: 7000
                        yearToDateContribution: 0
                      - type: EMPLOYER
                        maximumContributionLimit: 58000
                        yearToDateContribution: 0
                      ibReferenceId: 0
                      clientInstructionId: 7013306
                      instructionType: QUERY_IRA_CONTRIBUTIONS
                      instructionStatus: PROCESSED
                      instructionId: 43134474
              schema:
                $ref: '#/components/schemas/_gw_api_v1_client_instructions__clientInstructionId__get_200_response'
          description: Returns the status of an instruction.
        "208":
          content:
            application/json:
              example:
                status: 208
                instructionResult:
                  clientInstructionId: 1013025
                  instructionType: INTERNAL_CASH_TRANSFER
                  status: REJECTED
                  instructionId: 43091799
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U345 does not exist
                instructionSetId: 1686
              schema:
                $ref: '#/components/schemas/InstructionResponse'
          description: Client tried to reuse the same instructionId for more than
            one transaction. Returning the status for the first registered transaction
            under given instructionId (when there were no duplicates yet). Reconsile
            based on instructionSetId
        "404":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Not found
                status: 404
                detail: "Funds & Banking: Could not get status for clientId: qatester,\
                  \ transactionId : 72308156"
              schema:
                $ref: '#/components/schemas/NoSuchInstructionResponse'
          description: Returns a Problem detail instance representing a not found
            request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Unable to process request due to an Internal Error. Please
            try again later.
      summary: Get Status For ClientInstructionId
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - instructions.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/echo/https:
    get:
      description: "<br>**Scope**: `echo.read`<br>**Security Policy**: `HTTPS`"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponse'
          description: Returns a JSON object containing the request parameters.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Echo A Request With HTTPS Security Policy Back After Validation.
      tags:
      - Utilities Echo
      x-ib-gateway-provider-name: self
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - echo.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/echo/signed-jwt:
    post:
      description: "<br>**Scope**: `echo.write`<br>**Security Policy**: `Signed JWT`"
      requestBody:
        $ref: '#/components/requestBodies/SignedJwtEchoRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EchoResponse'
          description: Returns a JSON object containing the request parameters.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Echo A Request With Signed JWT Security Policy Back After Validation.
      tags:
      - Utilities Echo
      x-ib-gateway-provider-name: self
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - echo.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/enumerations/complex-asset-transfer:
    get:
      description: "Get list of brokers supported for given asset transfer type<br><br>**Scope**:\
        \ `enumerations.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      - description: Asset transfer type to get the list of supported brokers
        example: COMPLEX_ASSET_TRANSFER
        explode: false
        in: query
        name: instructionType
        required: true
        schema: {}
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                instructionType: COMPLEX_ASSET_TRANSFER
                brokers:
                - DONNER & REUSCHEL
                - "IBROKER GLOBAL MARKETS SOCIEDAD DE VALORES, S.A"
                - EQUATEX 4500
                - IMAGI  BROKERAGE LIMITED
                - V-BANK
                - ADMIRAL MARKETS UK LTD
                - ALFA BANK
                - YICKO SECURITIES LIMITED
                - BLACKWELL GLOBAL SECURITIES LIMITED
                - EQUINITI
                - KAISA FINANCIAL GROUP COMPANY LIMITED
              schema:
                $ref: '#/components/schemas/GetBrokerListResponse'
          description: Returns list of brokers supported for given asset type
        "400":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Bad Request
                status: 400
                detail: "Request path does not contain all expected fields, please\
                  \ consult provided documentation, escalate to IB contact if issue\
                  \ persists"
              schema:
                $ref: '#/components/schemas/NoSuchInstructionResponse'
          description: Returns a Problem detail instance representing a not found
            request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Unable to process request due to an Internal Error. Please
            try again later.
      summary: Get A List Of Participating Brokers For The Given Asset Type
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - enumerations.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/enumerations/{enumerationType}:
    get:
      description: "Get enumerations<br><br>**Scope**: `accounts.read` OR `enumerations.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: query
        name: currency
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: ibEntity
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: mdStatusNonPro
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: form-number
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: language
        required: false
        schema:
          enum:
          - en
          - ar
          - de
          - es
          - fr
          - he
          - hu
          - it
          - ja
          - nl
          - pt
          - ru
          - zh_CN
          - zh_TW
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerationResponse'
          description: Get enumerations
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: "Get Enumerations For Trading Permission, Employment Detail, Affiliation\
        \ Detail, Financial Range Information, ACATS And So On"
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      - enumerations.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/external-asset-transfers:
    post:
      description: "Initiate request to submit external position transfer. Methods-\
        \ ACATS, ATON, Basic FOP, FOP, DWAC. More information on transfer methods\
        \ can be found here - https://www.interactivebrokers.com/campus/trading-lessons/cash-and-position-transfers/<br><br>**Scope**:\
        \ `transfers.write`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              FOP - transfer using contractID (conid):
                value:
                  instructionType: FOP
                  instruction:
                    clientInstructionId: 7013038
                    direction: IN
                    accountId: U46377
                    contraBrokerAccountId: 12345678A
                    contraBrokerDtcCode: "534"
                    quantity: 1000
                    tradingInstrument:
                      conid: 12123
                      currency: USD
              FOP - transfer using tradingInstrument.detail:
                value:
                  instructionType: FOP
                  instruction:
                    clientInstructionId: 7013039
                    direction: IN
                    accountId: U46377
                    contraBrokerAccountId: 12345678A
                    contraBrokerDtcCode: "534"
                    quantity: 1000
                    tradingInstrument:
                      tradingInstrumentDescription:
                        securityIdType: ISIN
                        securityId: "459200101"
                        assetType: STK
                      currency: USD
              DWAC - transfer using contractID (conid):
                value:
                  instructionType: DWAC
                  instruction:
                    clientInstructionId: 7013036
                    direction: IN
                    accountId: U1001095
                    contraBrokerAccountId: 12345678A
                    contraBrokerTaxId: "123456789"
                    quantity: 1000
                    accountTitle: Special Company Holding LLC
                    referenceId: refId
                    tradingInstrument:
                      conid: 12123
                      currency: USD
              DWAC - transfer using tradingInstrument.detail:
                value:
                  instructionType: DWAC
                  instruction:
                    clientInstructionId: 7013037
                    direction: IN
                    accountId: U1001095
                    contraBrokerAccountId: 12345678A
                    contraBrokerTaxId: "123456789"
                    quantity: 1000
                    accountTitle: Special Company Holding LLC
                    referenceId: refId
                    tradingInstrument:
                      tradingInstrumentDescription:
                        securityIdType: ISIN
                        securityId: "459200101"
                        assetType: STK
                      currency: USD
              Complex Asset Transfer - using contractID (conid):
                value:
                  instructionType: COMPLEX_ASSET_TRANSFER
                  instruction:
                    clientInstructionId: 7013040
                    direction: IN
                    accountId: U399192
                    quantity: 10
                    contraBrokerInfo:
                      accountType: ORG
                      brokerName: JP MORGAN
                      depositoryId: "1234"
                      brokerAccountId: as3456567678578N
                      country: United States
                      contactName: as
                      contactEmail: a@gmail.com
                      contactPhone: "2039126155"
                    tradingInstrument:
                      conid: 12123
                      currency: USD
              Complex Asset Transfer - using tradingInstrument.detail:
                value:
                  instructionType: COMPLEX_ASSET_TRANSFER
                  instruction:
                    clientInstructionId: 7013042
                    direction: IN
                    accountId: U399192
                    quantity: 10
                    contraBrokerInfo:
                      accountType: ORG
                      brokerName: JP MORGAN
                      depositoryId: "1234"
                      brokerAccountId: as3456567678578N
                      country: United States
                      contactName: as
                      contactEmail: a@gmail.com
                      contactPhone: "2039126155"
                    tradingInstrument:
                      tradingInstrumentDescription:
                        securityIdType: ISIN
                        securityId: "459200101"
                        assetType: STK
                      currency: USD
              Complex Asset Transfer - where user is nonDisclosed type:
                value:
                  instructionType: COMPLEX_ASSET_TRANSFER
                  instruction:
                    clientInstructionId: 7013041
                    direction: IN
                    accountId: U399192
                    quantity: 10
                    contraBrokerInfo:
                      accountType: ORG
                      brokerName: JP MORGAN
                      depositoryId: "1234"
                      brokerAccountId: as3456567678578N
                      country: United States
                      contactName: as
                      contactEmail: a@gmail.com
                      contactPhone: "2039126155"
                    tradingInstrument:
                      tradingInstrumentDescription:
                        securityIdType: ISIN
                        securityId: "459200101"
                        assetType: STK
                      currency: USD
                    nonDisclosedDetail:
                      tradeDate: 2018-03-20T09:12:13Z
                      settleDate: 2018-03-20T09:12:13Z
                      psetBic: ""
                      reagDeagBic: ""
                      buyerSellBic: ""
                      memberAccountId: ""
                      safeKeepingAccountId: ""
              External Position Transfer - ACATS:
                value:
                  instructionType: EXTERNAL_POSITION_TRANSFER
                  instruction:
                    clientInstructionId: 7013060
                    type: FULL
                    subType: ACATS
                    brokerId: "0226"
                    brokerName: Wall Street Financial Group
                    accountAtBroker: SOL12345
                    sourceIRAType: RO
                    accountId: U1225448
                    signature: sample signature
              External Position Transfer - ATON:
                value:
                  instructionType: EXTERNAL_POSITION_TRANSFER
                  instruction:
                    clientInstructionId: 7013060
                    type: FULL
                    subType: ATON
                    brokerId: "3265"
                    brokerName: Wall Street Financial Group
                    accountAtBroker: SOL12345
                    accountId: U1225448
                    signature: Marko Barr
            schema:
              $ref: '#/components/schemas/_gw_api_v1_external_asset_transfers_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                FOP:
                  value:
                    instructionResult:
                      clientInstructionId: 1013031
                      instructionType: FOP
                      instructionStatus: PENDING
                      instructionId: 43091814
                    instructionSetId: 1703
                    status: 202
                DWAC:
                  value:
                    instructionResult:
                      clientInstructionId: 1013031
                      instructionType: DWAC
                      instructionStatus: PENDING
                      instructionId: 43091814
                    instructionSetId: 1703
                    status: 202
                Complex Asset Transfer:
                  value:
                    instructionResult:
                      clientInstructionId: 80188
                      instructionType: COMPLEX_ASSET_TRANSFER
                      instructionStatus: PENDING
                      instructionId: 43093833
                    instructionSetId: 3549
                    status: 202
                External Position Transfer:
                  value:
                    instructionResult:
                      clientInstructionId: 7008998
                      instructionType: EXTERNAL_POSITION_TRANSFER
                      instructionStatus: PENDING
                      instructionId: 43094000
                      code: ""
                      description: ""
                    instructionSetId: 3700
                    status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: assetType
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2615"
                instructionResult:
                  clientInstructionId: 2611
                  instructionType: FOP
                  instructionStatus: REJECTED
                  instructionId: 12000763
                  code: ERROR_PERMISSION_DENIED
                  description: Permission denied for ibgroup.ibcust.fbfb.instructions.FOP
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: FOP
                  instructionStatus: REJECTED
                  instructionId: 43092592
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: "Transfer Positions Externally (ACATS, ATON, FOP, DWAC, Complex Asset\
        \ Transfer)"
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - transfers.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/external-cash-transfers:
    post:
      description: "Initiate request to deposit or withdrawal between IBKR account\
        \ and bank account. More information on transfer methods can be found here\
        \ - https://www.interactivebrokers.com/campus/trading-lessons/cash-and-position-transfers<br><br>**Scope**:\
        \ `transfers.write`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Deposit Funds:
                value:
                  instructionType: DEPOSIT
                  instruction:
                    clientInstructionId: 7013045
                    accountId: U46377
                    currency: USD
                    amount: 100
                    bankInstructionMethod: WIRE
                    sendingInstitution: Sending Institution name
                    identifier: indentifier
                    specialInstruction: U46377
                    bankInstructionName: Instruction
                    fromAccountNumber: U46377
                    senderInstitutionName: Senders Institution name
              Deposit Funds - IRA:
                value:
                  instructionType: DEPOSIT
                  instruction:
                    clientInstructionId: 7013046
                    accountId: U399192
                    currency: USD
                    amount: 1
                    bankInstructionMethod: WIRE
                    sendingInstitution: Sending Institution name
                    identifier: indentifier
                    specialInstruction: U399192
                    bankInstructionName: Instruction
                    fromAccountNumber: U399192
                    senderInstitutionName: Senders Institution name
                    iraDepositDetail:
                      iraContributionType: ROLLOVER
                      iraTaxYearType: CURRENT
                      fromIraType: TRADITIONAL
              Deposit Funds - Recurring:
                value:
                  instructionType: DEPOSIT
                  instruction:
                    clientInstructionId: 7013047
                    accountId: U46377
                    currency: USD
                    amount: 100
                    bankInstructionMethod: WIRE
                    isIRA: "false"
                    sendingInstitution: Sending Institution name
                    identifier: indentifier
                    specialInstruction: U46377
                    bankInstructionName: Instruction
                    initiatedByIb: "true"
                    fromAccountNumber: U46377
                    senderInstitutionName: Senders Institution name
                    recurringInstructionDetail:
                      instructionName: Arkansas-Test-Instr
                      startDate: 2023-10-16
                      frequency: MONTHLY
              Withdraw Funds:
                value:
                  instructionType: WITHDRAWAL
                  instruction:
                    clientInstructionId: 7013048
                    accountId: U46377
                    bankInstructionName: Test Withdrawal
                    bankInstructionMethod: WIRE
                    amount: "123.45"
                    currency: GBP
                    dateTimeToOccur: 2023-11-20T09:12:13Z
              Withdraw Funds - IRA:
                value:
                  instructionType: WITHDRAWAL
                  instruction:
                    clientInstructionId: 7013049
                    accountId: U399192
                    bankInstructionName: Test Withdrawal
                    bankInstructionMethod: WIRE
                    amount: "123.45"
                    currency: GBP
                    dateTimeToOccur: 2023-11-20T09:12:13Z
                    iraWithdrawalDetail:
                      fedIncomeTaxPercentage: 10
                      stateIncomeTaxPercentage: 12
                      stateCd: TE
                      iraWithholdType: NORMAL
              Withdraw Funds - Recurring:
                value:
                  instructionType: WITHDRAWAL
                  instruction:
                    clientInstructionId: 7013050
                    accountId: U46377
                    bankInstructionName: Test Withdrawal
                    bankInstructionMethod: WIRE
                    amount: "123.45"
                    currency: GBP
                    dateTimeToOccur: 2023-11-20T09:12:13Z
                    iraWithdrawalDetail:
                      fedIncomeTaxPercentage: 10
                      stateIncomeTaxPercentage: 12
                      stateCd: TE
                      iraWithholdType: NORMAL
                    recurringInstructionDetail:
                      instructionName: Arkansas-Test-Instr
                      startDate: 2023-10-16
                      frequency: MONTHLY
            schema:
              $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                Deposit Funds:
                  value:
                    instructionResult:
                      clientInstructionId: 7008143
                      instructionType: DEPOSIT
                      instructionStatus: PENDING
                      instructionId: 43092468
                    instructionSetId: 2480
                    status: 202
                Withdraw Funds:
                  value:
                    instructionResult:
                      clientInstructionId: 12000862
                      instructionType: WITHDRAWAL
                      instructionStatus: PROCESSED
                      instructionId: 43092641
                      ibReferenceId: 132123
                    instructionSetId: 2719
                    status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: iraContributionType
                  description: Invalid or Missing required parameter
                - field: iraTaxYearType
                  description: Invalid or Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2452"
                instructionResult:
                  clientInstructionId: 7008120
                  instructionType: DEPOSIT
                  instructionStatus: REJECTED
                  instructionId: 43092438
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.DepositFunds
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2591"
                instructionResult:
                  clientInstructionId: 7008150
                  instructionType: DEPOSIT
                  instructionStatus: REJECTED
                  instructionId: 43092565
                  error:
                    errorCode: NOT_IRA_ACCOUNT
                    errorMessage: Account U46377 is not IRA
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Transfer Cash Externally
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - transfers.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/external-cash-transfers/query:
    post:
      description: "View available cash for withdrawal with and without margin loan\
        \ by accountId<br><br>**Scope**: `transfers.read`<br>**Security Policy**:\
        \ `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Query Withdrawable Funds:
                value:
                  instructionType: QUERY_WITHDAWABLE_FUNDS
                  instruction:
                    clientInstructionId: "7009005"
                    accountId: U87440
                    currency: USD
              Query Withdrawable Funds Without Origination Hold:
                value:
                  instructionType: QUERY_WITHDAWABLE_FUNDS
                  instruction:
                    clientInstructionId: "7009006"
                    accountId: U139838
                    currency: USD
                    bankRoutingNumber: "122199983"
                    bankAccountNumber: "9876543210"
              Query IRA Contributions:
                value:
                  instructionType: QUERY_IRA_CONTRIBUTIONS
                  instruction:
                    clientInstructionId: "7009007"
                    accountId: U68903
                    year: "2003"
            schema:
              $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_query_post_request'
        description: Create an external cash transfer query request body
        required: true
      responses:
        "201":
          content:
            application/json:
              examples:
                Query Withdrawable Funds:
                  value:
                    status: 201
                    instructionSetId: 17791
                    instructionResult:
                      accountId: U46377
                      currency: EUR
                      withdrawableAmount: 0
                      withdrawableAmountNoBorrow: 0
                      allowedTransferAmountToMaster: 0
                      withdrawableAmountWithoutOriginationHoldNoBorrow: 0
                      ibReferenceId: 0
                      clientInstructionId: 7013230
                      instructionType: QUERY_WITHDRAWABLE_FUNDS
                      instructionStatus: PROCESSED
                      instructionId: 43133309
                Query Withdrawable Funds Without Origination Hold:
                  value:
                    status: 201
                    instructionSetId: 17791
                    instructionResult:
                      accountId: U46377
                      currency: EUR
                      withdrawableAmountWithoutOriginationHold: 0
                      withdrawableAmountWithoutOriginationHoldNoBorrow: 0
                      ibReferenceId: 0
                      clientInstructionId: 7013230
                      instructionType: QUERY_WITHDRAWABLE_FUNDS
                      instructionStatus: PROCESSED
                      instructionId: 43133309
              schema:
                $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_query_post_201_response'
          description: Instruction successfully created and processed synchronously
        "202":
          content:
            application/json:
              examples:
                Query IRA Contributions:
                  value:
                    status: 202
                    instructionSetId: 18640
                    instructionResult:
                      accountId: U1032333
                      year: "2022"
                      ibReferenceId: 0
                      clientInstructionId: 7013306
                      instructionType: QUERY_IRA_CONTRIBUTIONS
                      instructionStatus: PENDING
                      instructionId: 43134474
                      description: 'Query is being processed. Please poll for status
                        1 minutes later using FB status endpoint. No new queries will
                        be allowed before this one is processed '
              schema:
                $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_query_post_202_response'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: templateName
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2445"
                instructionResult:
                  clientInstructionId: 12000610
                  instructionType: APPLY_FEE_TEMPLATE
                  status: REJECTED
                  instructionId: 43092429
                  code: ERROR_PERMISSION_DENIED
                  description: Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: APPLY_FEE_TEMPLATE
                  status: REJECTED
                  instructionId: 43092592
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: View Cash Balances
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - transfers.read
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/fee-templates:
    post:
      description: "Apply predefined fee template to existing account.<br><br>**Scope**:\
        \ `fee-templates.write`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instructionType: APPLY_FEE_TEMPLATE
              instruction:
                clientInstructionId: "1012983"
                accountId: U46377
                templateName: Test template
            schema:
              $ref: '#/components/schemas/_gw_api_v1_fee_templates_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 1013031
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: PENDING
                  instructionId: 43091814
                instructionSetId: 1703
                status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: templateName
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2445"
                instructionResult:
                  clientInstructionId: 12000610
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092429
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092592
                  error:
                    errorCode: CORRUPT_DATA_INVALID_ACCT
                    errorMessage: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Set Fees For Account
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - fee-templates.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/fee-templates/query:
    post:
      description: "View fee template applied to an existing account.<br><br>**Scope**:\
        \ `fee-templates.read`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              instructionType: QUERY_FEE_TEMPLATE
              instruction:
                clientInstructionId: "1012983"
                accountId: U46377
            schema:
              $ref: '#/components/schemas/_gw_api_v1_fee_templates_query_post_request'
        description: Create fee template request body
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                instructionResult:
                  templateDetails:
                    accountId: U46377
                    templateName: ""
                  ibReferenceId: 0
                  clientInstructionId: 12001818
                  instructionType: QUERY_FEE_TEMPLATE
                  instructionStatus: PROCESSED
                  instructionId: 43094186
                  error:
                    errorCode: FEE_TEMPLATE_NOT_FOUND
                    errorMessage: Fee template not found for client account U46377
                instructionSetId: 3770
                status: 201
              schema:
                $ref: '#/components/schemas/QueryFeeTemplateResult'
          description: Instruction successfully created and processed synchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: templateName
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2445"
                instructionResult:
                  clientInstructionId: 12000610
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092429
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: APPLY_FEE_TEMPLATE
                  instructionStatus: REJECTED
                  instructionId: 43092592
                  error:
                    errorCode: CORRUPT_DATA_INVALID_ACCT
                    errorMessage: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: View Fee Template For Account
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - fee-templates.read
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/forms:
    get:
      description: "Get forms<br><br>**Scope**: `accounts.read` OR `forms.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: query
        name: formNo
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      - explode: false
        in: query
        name: getDocs
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: fromDate
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: toDate
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: language
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: projection
        required: false
        schema:
          default: NONE
          enum:
          - PAYLOAD
          - DOCS
          - NONE
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormFileResponse'
          description: Get forms
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Forms
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      - forms.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/instruction-sets/{instructionSetId}:
    get:
      description: "Retrieve status of all requests associated with instructionSetId.<br><br>**Scope**:\
        \ `instructions.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      - description: The target instruction set id.
        explode: false
        in: path
        name: instructionSetId
        required: true
        schema:
          example: -1988905739
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInstructionSetResponse'
          description: Returns the status multiple instructions.
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NoSuchInstructionSetResponse'
          description: Returns a Problem detail instance representing a not found
            request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Unable to process request due to an Internal Error. Please
            try again later.
      summary: Get Status For InstructionSetId
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - instructions.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/instructions/cancel:
    post:
      description: "Cancel request by instructionId.<br><br>**Scope**: `instructions.read`<br>**Security\
        \ Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              intructionType: CANCEL_INSTRUCTION
              instruction:
                clientInstructionId: "12001810"
                instructionId: 43085477
                reason: Testing
            schema:
              $ref: '#/components/schemas/_gw_api_v1_instructions_cancel_post_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 12001810
                  instructionType: CANCEL_INSTRUCTION
                  instructionStatus: PROCESSED
                  instructionId: 43094179
                instructionSetId: 3763
                status: 201
              schema:
                $ref: '#/components/schemas/SynchronousInstructionResponse'
          description: Instruction successfully created and processed synchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: instructionId
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "3766"
                instructionResult:
                  clientInstructionId: 12001813
                  instructionType: CANCEL_INSTRUCTION
                  instructionStatus: REJECTED
                  instructionId: 43094182
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for ibgroup.ibcust.fbfb.instructions.CancelTransaction
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "3765"
                instructionResult:
                  clientInstructionId: 12001812
                  instructionType: CANCEL_INSTRUCTION
                  instructionStatus: REJECTED
                  instructionId: 43092592
                  error:
                    errorCode: ERROR_INSTR_ID_AND_CP_NOT_RELATED
                    errorMessage: "Instruction Id: 43092775 not related to counterparty\
                      \ qatester"
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Cancel Request
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - instructions.read
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/instructions/query:
    post:
      description: "Query list of recent transactions (up to 30 days) based on accountId.<br><br>**Scope**:\
        \ `instructions.read`<br>**Security Policy**: `Signed JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Query Recent Instructions:
                value:
                  instructionType: QUERY_RECENT_INSTRUCTIONS
                  instruction:
                    clientInstructionId: "7009001"
                    accountId: U139838
                    transactionHistory:
                      daysToGoBack: 3
                      transactionType: ACH_INSTRUCTION
              Query Recent Instructions - Transaction Type not specified:
                value:
                  instructionType: QUERY_RECENT_INSTRUCTIONS
                  instruction:
                    clientInstructionId: "7009001"
                    accountId: U139838
                    transactionHistory:
                      daysToGoBack: 3
            schema:
              $ref: '#/components/schemas/_gw_api_v1_instructions_query_post_request'
        description: Create recent instructions request body
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                Query Recent Instructions:
                  value:
                    instructionResult:
                      ibReferenceId: 0
                      clientInstructionId: 7009001
                      instructionType: QUERY_RECENT_INSTRUCTIONS
                      status: PENDING
                      instructionId: 43094002
                      code: PENDING
                      description: Query is being processed. Please poll for status
                        1 minutes later using FB status endpoint. No new queries will
                        be allowed before this one is processed
                    instructionSetId: 3702
                    status: 202
                Query Recent Instructions - Transaction Type not specified:
                  value:
                    instructionResult:
                      ibReferenceId: 0
                      clientInstructionId: 7009001
                      instructionType: QUERY_RECENT_INSTRUCTIONS
                      status: PENDING
                      instructionId: 43094002
                      code: PENDING
                      description: Query is being processed. Please poll for status
                        1 minutes later using FB status endpoint. No new queries will
                        be allowed before this one is processed
                    instructionSetId: 3702
                    status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: templateName
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2445"
                instructionResult:
                  clientInstructionId: 12000610
                  instructionType: APPLY_FEE_TEMPLATE
                  status: REJECTED
                  instructionId: 43092429
                  code: ERROR_PERMISSION_DENIED
                  description: Permission denied for ibgroup.ibcust.fbfb.instructions.SetFeeTemplate
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: APPLY_FEE_TEMPLATE
                  status: REJECTED
                  instructionId: 43092592
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Get Transaction History
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - instructions.read
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/instructions/{instructionId}:
    get:
      description: "Retrieve status of request by instructionId<br><br>**Scope**:\
        \ `instructions.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      - description: The target instruction id.
        explode: false
        in: path
        name: instructionId
        required: true
        schema:
          example: -1988905739
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Polling Status Pending:
                  value:
                    status: 200
                    instructionResult:
                      clientInstructionId: 7008156
                      instructionType: INTERNAL_CASH_TRANSFER
                      status: PENDING
                      instructionId: 43092595
                    instructionSetId: 2650
                Polling Status Processed:
                  value:
                    status: 200
                    instructionResult:
                      clientInstructionId: 7008157
                      instructionType: INTERNAL_CASH_TRANSFER
                      status: PROCESSED
                      instructionId: 43092596
                    instructionSetId: 2651
                Polling Status Query Recent Instruction:
                  value:
                    status: 200
                    instructionSetId: 4206
                    instructionResult:
                      instructionHistory:
                        historyMaxDepthNumberOfDays: 30
                        historyMaxDepthNumberOfInstruction: 100000
                        result:
                        - clientInstructionId: 0
                          ibInstructionId: 11383366
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T07:35:36-05
                          status: PENDING_VERIFICATION
                          instructionSetId: 0
                        - clientInstructionId: 0
                          ibInstructionId: 11383356
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T07:00:34-05
                          status: REJECTED
                          instructionSetId: 0
                        - clientInstructionId: 0
                          ibInstructionId: 11383355
                          instructionType: ACH_INSTRUCTION
                          requestDate: 2024-02-06T06:58:22-05
                          status: PENDING
                          instructionSetId: 0
                      ibReferenceId: 0
                      clientInstructionId: 12003152
                      instructionType: QUERY_RECENT_INSTRUCTIONS
                      instructionStatus: PROCESSED
                      instructionId: 11383402
                Polling Status - Deposit Instruction:
                  value:
                    status: 200
                    instructionSetId: 3673
                    instructionResult:
                      ibReferenceId: 166903389
                      clientInstructionId: 1091115677
                      instructionType: DEPOSIT
                      instructionStatus: PROCESSED
                      instructionId: 11177823
                Polling Status - Query IRA Contributions:
                  value:
                    status: 200
                    instructionSetId: 18642
                    instructionResult:
                      accountId: U68903
                      year: "2003"
                      iraType: ROTH NEW
                      contributions:
                      - maximumContributionLimit: 4000
                        yearToDateContribution: 3500
                        allowedContributionLimit: 500
                      ibReferenceId: 0
                      clientInstructionId: 7013308
                      instructionType: QUERY_IRA_CONTRIBUTIONS
                      instructionStatus: PROCESSED
                      instructionId: 43134476
                Polling Status - Query IRA Contributions (SEP Accounts):
                  value:
                    status: 200
                    instructionSetId: 18640
                    instructionResult:
                      accountId: U1032333
                      year: "2022"
                      iraType: SEP
                      contributions:
                      - type: EMPLOYEE
                        maximumContributionLimit: 7000
                        yearToDateContribution: 0
                      - type: EMPLOYER
                        maximumContributionLimit: 58000
                        yearToDateContribution: 0
                      ibReferenceId: 0
                      clientInstructionId: 7013306
                      instructionType: QUERY_IRA_CONTRIBUTIONS
                      instructionStatus: PROCESSED
                      instructionId: 43134474
              schema:
                $ref: '#/components/schemas/_gw_api_v1_client_instructions__clientInstructionId__get_200_response'
          description: Returns the status of an instruction.
        "208":
          content:
            application/json:
              example:
                status: 208
                instructionResult:
                  clientInstructionId: 1013025
                  instructionType: INTERNAL_CASH_TRANSFER
                  status: REJECTED
                  instructionId: 43091799
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U345 does not exist
                instructionSetId: 1686
              schema:
                $ref: '#/components/schemas/InstructionResponse'
          description: Client tried to reuse the same instructionId for more than
            one transaction. Returning the status for the first registered transaction
            under given instructionId (when there were no duplicates yet). Reconsile
            based on instructionSetId
        "404":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Not found
                status: 404
                detail: "Funds & Banking: Could not get status for clientId: qatester,\
                  \ transactionId : 72308156"
              schema:
                $ref: '#/components/schemas/NoSuchInstructionResponse'
          description: Returns a Problem detail instance representing a not found
            request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Unable to process request due to an Internal Error. Please
            try again later.
      summary: Get Status For InstructionId
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - instructions.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/internal-asset-transfers:
    post:
      description: "Transfer positions internally between two accounts with Interactive\
        \ Brokers<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed\
        \ JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Internal Position Transfer - using Trading Instrument:
                value:
                  instructionType: INTERNAL_POSITION_TRANSFER
                  instruction:
                    clientInstructionId: 7013044
                    sourceAccountId: U399192
                    targetAccountId: U87440
                    transferQuantity: 6
                    tradingInstrument:
                      tradingInstrumentDescription:
                        securityIdType: ISIN
                        securityId: "459200101"
                        assetType: STK
                      currency: USD
              Internal Position Transfer - using contractID (conid):
                value:
                  instructionType: INTERNAL_POSITION_TRANSFER
                  instruction:
                    clientInstructionId: 7013043
                    sourceAccountId: U399192
                    targetAccountId: U87440
                    transferQuantity: 6
                    tradingInstrument:
                      conid: 21323
                      currency: USD
            schema:
              $ref: '#/components/schemas/_gw_api_v1_internal_asset_transfers_post_request'
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 7008152
                  instructionType: INTERNAL_POSITION_TRANSFER
                  status: PENDING
                  instructionId: 43092590
                instructionSetId: 2614
                status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: conid/tradingInstrumentDescription
                  description: For internal position transfer either con_id or trading_product
                    must be present
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "2615"
                instructionResult:
                  clientInstructionId: 7008154
                  instructionType: INTERNAL_POSITION_TRANSFER
                  status: REJECTED
                  instructionId: 43092591
                  code: ERROR_PERMISSION_DENIED
                  description: Permission denied for ibgroup.ibcust.fbfb.instructions.IntPositionTransfer
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "2616"
                instructionResult:
                  clientInstructionId: 7008155
                  instructionType: INTERNAL_POSITION_TRANSFER
                  status: REJECTED
                  instructionId: 43092592
                  code: CORRUPT_DATA_INVALID_ACCT
                  description: Account U463756 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Transfer Positions Internally
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - transfers.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/internal-cash-transfers:
    post:
      description: "Transfer cash internally between two accounts with Interactive\
        \ Brokers.<br><br>**Scope**: `transfers.write`<br>**Security Policy**: `Signed\
        \ JWT`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Internal Cash Transfer:
                value:
                  intructionType: INTERNAL_CASH_TRANSFER
                  instruction:
                    clientInstructionId: "1012983"
                    sourceAccountId: U46377
                    targetAccountId: U15667
                    amount: 123.45
                    currency: GBP
                    dateTimeToOccur: 2018-03-20T09:12:13Z
              Internal Cash Transfer (2):
                value:
                  intructionType: INTERNAL_CASH_TRANSFER
                  instruction:
                    clientInstructionId: "1012983"
                    sourceAccountId: U46377
                    targetAccountId: U15667
                    amount: 123.45
                    currency: GBP
            schema:
              $ref: '#/components/schemas/_gw_api_v1_internal_cash_transfers_post_request'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 1013032
                  instructionType: INTERNAL_CASH_TRANSFER
                  instructionStatus: PROCESSED
                  instructionId: 43091814
                  ibReferenceId: 132123
                instructionSetId: 1703
                status: 201
              schema:
                $ref: '#/components/schemas/SynchronousInstructionResponse'
          description: "Creates a new instruction synchronously, e.g., for Internal\
            \ Cash Transfer w/o dateTimeToOccur"
        "202":
          content:
            application/json:
              example:
                instructionResult:
                  clientInstructionId: 1013031
                  instructionType: INTERNAL_CASH_TRANSFER
                  instructionStatus: PENDING
                  instructionId: 43091814
                instructionSetId: 1703
                status: 202
              schema:
                $ref: '#/components/schemas/AsynchronousInstructionResponse'
          description: Accepts request to create a new instruction asynchronously
        "400":
          content:
            application/problem+json:
              example:
                type: /invalid-argument
                title: Bad Request
                status: 400
                detail: Input is not a JSON Object or doesn't contain all expected
                  fields
                invalidArguments:
                - field: sourceAccountId
                  description: Missing required parameter
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "403":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Forbidden
                status: 403
                detail: Permission denied- Insufficient rights for using resource
                instructionSetId: "1401"
                instructionResult:
                  clientInstructionId: 1013326
                  instructionType: INTERNAL_CASH_TRANSFER
                  instructionStatus: REJECTED
                  instructionId: 11132096
                  error:
                    errorCode: ERROR_PERMISSION_DENIED
                    errorMessage: Permission denied for InternalCashTransfer Instruction
              schema:
                $ref: '#/components/schemas/ForbiddenInstructionResponse'
          description: Returns a Problem detail instance representing a forbidden
            request
        "422":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Business Error
                status: 422
                detail: Funds and Banking server cannot process your request because
                  it contains invalid data
                instructionSetId: "1402"
                instructionResult:
                  clientInstructionId: 1013328
                  instructionType: INTERNAL_CASH_TRANSFER
                  instructionStatus: REJECTED
                  instructionId: 11132098
                  error:
                    errorCode: CORRUPT_DATA_INVALID_ACCT
                    errorMessage: Account U39 does not exist
              schema:
                $ref: '#/components/schemas/BusinessRejectResponse'
          description: Returns a Problem detail instance representing a business error.
        "500":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Internal Server Error
                status: 500
                detail: Internal Server Error
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Transfer Cash Internally
      tags:
      - Account Management Banking
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - transfers.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/participating-banks:
    get:
      description: "Get list of banks which support banking connection with Interactive\
        \ Brokers.<br><br>**Scope**: `enumerations.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - description: The client's clientId
        explode: false
        in: path
        name: client-id
        required: true
        schema:
          example: abc123
          type: string
        style: simple
      - description: Parameter for which the list of participating banks is fetched
        example: eDDA
        explode: false
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                type: eDDA
                participatingBanks:
                - institutionName: WELAB BANK LIMITED
                  clearingCode: "390"
                  BIC: WEDIHKHHXXX
                - institutionName: INDUSTRIAL AND COMMERCIAL BANK OF CHINA (ASIA)
                    LIMITED
                  clearingCode: "072"
                  BIC: UBHKHKHHXXX
                - institutionName: FUSION BANK LIMITED
                  clearingCode: "391"
                  BIC: IFFUHKHHXXX
                - institutionName: CITIBANK (HONG KONG) LIMITED
                  clearingCode: "250"
                  BIC: CITIHKAXXXX
              schema:
                $ref: '#/components/schemas/GetParticipatingListResponse'
          description: Returns the list of participating banks.
        "400":
          content:
            application/problem+json:
              example:
                type: /simple
                title: Bad Request
                status: 400
                detail: "Request path does not contain all expected fields, please\
                  \ consult provided documentation, escalate to IB contact if issue\
                  \ persists"
              schema:
                $ref: '#/components/schemas/NoSuchInstructionResponse'
          description: Returns a Problem detail instance representing a not found
            request.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Unable to process request due to an Internal Error. Please
            try again later.
      summary: Get Participating Banks
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: fb
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - enumerations.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/requests:
    get:
      description: "Fetch Requests' Details By Timeframe<br><br>**Scope**: `accounts.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: query
        name: requestDetails
        required: true
        schema:
          $ref: '#/components/schemas/RequestDetailsRequest'
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDetailsResponse'
          description: Fetch Requests' Details By Timeframe
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Requests' Details By Timeframe
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/requests/{requestId}/status:
    get:
      description: "Returns status for account management request<br><br>**Scope**:\
        \ `accounts.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: requestId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: query
        name: type
        required: true
        schema:
          enum:
          - response
          - update
          type: string
        style: form
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_gw_api_v1_requests__requestId__status_get_200_response'
          description: Returns status for account management request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Get Status Of A Request
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/sso-browser-sessions:
    post:
      description: "<br>**Scope**: `sso-browser-sessions.write`<br>**Security Policy**:\
        \ `Signed JWT`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateBrowserSessionRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBrowserSessionResponse'
          description: Create a Single Sign On (SSO) to access the IBKR hosted portal
            (White Branded).
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Create SSO Browser Session.
      tags:
      - Authorization SSO Sessions
      x-ib-gateway-provider-name: sso
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - sso-browser-sessions.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/sso-sessions:
    post:
      description: "<br>**Scope**: `sso-sessions.write`<br>**Security Policy**: `Signed\
        \ JWT`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateSessionRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionResponse'
          description: Returns a JSON object containing a reference to the newly created
            SSO session.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Create A New SSO Session On Behalf Of An End-user.
      tags:
      - Authorization SSO Sessions
      x-ib-gateway-provider-name: sso
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - sso-sessions.write
      x-content-type: application/jwt
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/statements:
    post:
      description: "<br>**Scope**: `statements.read` OR `statements.write` OR `reports.write`<br>**Security\
        \ Policy**: `Signed JWT`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Daily html:
                $ref: '#/components/examples/DailyHTML'
              Monthly pdf:
                $ref: '#/components/examples/MonthlyPDF'
              Daily html gzip:
                $ref: '#/components/examples/DailyHTMLGZip'
            schema:
              $ref: '#/components/schemas/StmtRequest'
        description: Report request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatementsResponse'
            application/pdf:
              schema:
                format: binary
                type: string
          description: Returns a JSON object containing the relevant statement.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Generates Statements In Supported Formats Based On Request Parameters.
      tags:
      - Account Management Reports
      x-ib-gateway-provider-name: statements
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - statements.read
      - statements.write
      - reports.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/pdf
      - application/problem+json
  /gw/api/v1/statements/available:
    get:
      description: "<br>**Scope**: `statements.read` OR `reports.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      - description: Specifies the account id to retrieve information
        explode: false
        in: query
        name: accountId
        required: true
        schema:
          example: UXXXX
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableStmtDatesResponse'
          description: Returns a JSON object containing the available report dates.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: "Fetch Available Daily, Monthly, And Annual Report Dates For An Account\
        \ Id"
      tags:
      - Account Management Reports
      x-ib-gateway-provider-name: statements
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - statements.read
      - reports.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/tax-documents:
    post:
      description: "<br>**Scope**: `statements.write` OR `reports.write`<br>**Security\
        \ Policy**: `Signed JWT`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxFormRequest'
        description: Tax Form request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxFormResponse'
            application/pdf:
              schema:
                format: binary
                type: string
          description: Returns a JSON object containing the relevant Tax Form.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Fetch Tax Forms In Supported Formats Based On Request Parameters.
      tags:
      - Account Management Reports
      x-ib-gateway-provider-name: statements
      x-ib-gateway-security-policy: SIGNED_JWT
      x-ib-gateway-allowed-scopes:
      - statements.write
      - reports.write
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/pdf
      - application/problem+json
  /gw/api/v1/tax-documents/available:
    get:
      description: "<br>**Scope**: `statements.read` OR `reports.read`<br>**Security\
        \ Policy**: `HTTPS`"
      parameters:
      - description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
        explode: false
        in: header
        name: authorization
        required: true
        schema:
          example: Bearer eyJ0eXAiOiJKV1...
          type: string
        style: simple
      - description: Specifies the account id to retrieve information
        explode: false
        in: query
        name: accountId
        required: true
        schema:
          example: UXXXX
          type: string
        style: form
      - description: Specifies the tax year to retrieve information
        explode: false
        in: query
        name: year
        required: true
        schema:
          example: 2024
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableTaxFormsResponse'
          description: Returns a JSON object containing the available report dates.
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MissingRequiredParameterResponse'
          description: Returns a Problem detail instance representing a bad request.
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InvalidAccessTokenResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "402":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedAccessResponse'
          description: Returns a Problem detail instance representing an unauthorized
            request.
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsufficientScopeResponse'
          description: Returns a Problem detail instance representing a forbidden
            request.
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
          description: Returns a Problem detail instance representing an internal
            server error.
      summary: Fetch List Of Available Tax Reports/forms/documents For A Specified
        Account And Tax Year
      tags:
      - Account Management Reports
      x-ib-gateway-provider-name: statements
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - statements.read
      - reports.read
      x-accepts:
      - application/json
      - application/problem+json
  /gw/api/v1/validations/usernames/{username}:
    get:
      description: "Verify whether user is valid and available<br><br>**Scope**: `accounts.read`\
        \ OR `validations.read`<br>**Security Policy**: `HTTPS`"
      parameters:
      - explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing internal server error
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing bad request
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNameAvailableResponse'
          description: Verify whether user is valid and available
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: Returns error description representing access issue
      summary: Verify User Availability
      tags:
      - Account Management Utilities
      x-ib-gateway-provider-name: eca
      x-ib-gateway-security-policy: HTTPS
      x-ib-gateway-allowed-scopes:
      - accounts.read
      - validations.read
      x-accepts:
      - application/json
      - application/problem+json
  /hmds/history:
    get:
      description: Request historical data for an instrument in the form of OHLC bars.
      parameters:
      - description: IB contract ID of the requested instrument.
        explode: false
        in: query
        name: conid
        required: true
        schema:
          example: "265598"
          format: int32
          type: string
        style: form
      - description: "The requested historical data type. If omitted, Last Trade data\
          \ is queried."
        explode: false
        in: query
        name: barType
        required: false
        schema:
          enum:
          - Last
          - Bid
          - Ask
          - Midpoint
          - FeeRate
          - Inventory
          example: Bid
          type: string
        style: form
      - description: "A fixed UTC date-time reference point for the historical data\
          \ request, from which the specified period extends, as governed by the direction\
          \ parameter. Format is YYYYMMDD-hh:mm:ss. If omitted, the current time is\
          \ used, and direction must be omitted or 1."
        explode: false
        in: query
        name: startTime
        required: false
        schema:
          $ref: '#/components/schemas/utcDateTime'
        style: form
      - description: "A time duration away from startTime, as governed by the direction\
          \ parameter, to be divided into bars of the specified width."
        explode: false
        in: query
        name: period
        required: true
        schema:
          example: 6d
          type: string
        style: form
      - description: "The requested period's direction in time away from the startTime.\
          \ -1 queries bars from startTime forward into the future for the span of\
          \ the requested period, 1 queries bars from startTime backward into the\
          \ past for the span of the request period. Default behavior is 1, from startTime\
          \ backward."
        explode: false
        in: query
        name: direction
        required: false
        schema:
          example: "-1"
          format: int32
          type: string
        style: form
      - description: The width of the bars into which the interval determined by period
          and startTime will be divided. It is not required that bar evenly divide
          period; partial bars can be returned.
        explode: false
        in: query
        name: bar
        required: true
        schema:
          example: 5mins
          type: string
        style: form
      - description: Indicates whether data outside of regular trading hours should
          be included in response.
        explode: false
        in: query
        name: outsideRth
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                hmdsHistorySuccessExample:
                  value:
                    startTime: 20231211-04:00:00
                    startTimeVal: 1702285200000
                    endTime: 20231211-17:51:20
                    endTimeVal: 1702335080000
                    data:
                    - t: 1702285200000
                      o: 195.01
                      c: 194.8
                      h: 195.01
                      l: 194.8
                      v: 1723.0
                    points: 1
                    mktDataDelay: 0
              schema:
                $ref: '#/components/schemas/hmdsHistoryResponse'
          description: Historical data query successfully returned data.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Request Historical Data For An Instrument In The Form Of OHLC Bars.
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /hmds/scanner/params:
    get:
      description: Query the parameter list for the HMDS market scanner.
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    instrument_list:
                    - display_name: display_name
                      type: type
                      filters: []
                    scan_type_list:
                    - display_name: display_name
                      code: code
                      instruments: []
                    location_tree:
                    - display_name: display_name
                      type: type
                      locations:
                      - display_name: display_name
                        locationCode: locationCode
                        locations: []
              schema:
                $ref: '#/components/schemas/hmdsScannerParams'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: HMDS Scanner Parameters
      tags:
      - Trading Scanner
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /hmds/scanner/run:
    post:
      description: Request a market scanner from our HMDS service. Can return a maximum
        of 250 contracts.
      requestBody:
        content:
          application/json:
            example:
              value:
                instrument: BOND
                locations: BOND.US
                scanCode: HIGH_BOND_ASK_YIELD_ALL
                secType: BOND
                delayedLocations: SMART
                maxItems: 25
                filters:
                - bondAskYieldBelow: 15.819
            schema:
              $ref: '#/components/schemas/hmdsScannerRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success_bond:
                  value:
                    total: 17616
                    size: 250
                    offset: 0
                    scanTime: 20240403-20:31:48
                    id: scanner20
                    position: v1:AAAAAQABG3gAAAAAAAAA+g==
                    Contracts:
                      Contract:
                      - inScanTime: 20240403-20:31:48
                        contractID: 403154854
                      - inScanTime: 20240403-20:31:48
                        contractID: 460655952
                success_stock:
                  value:
                    scanTime: 20240403-20:31:23
                    id: scanner19
                    warningText: 250 out of 6111 items retrieved
                    Contracts:
                      Contract:
                      - inScanTime: 20240403-20:31:23
                        contractID: 536918667
                      - inScanTime: 20240403-20:31:23
                        contractID: 359788451
              schema:
                $ref: '#/components/schemas/_hmds_scanner_run_post_200_response'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "404":
          content:
            text/html:
              example:
                success: <html><body><h1>Resource not found</h1></body></html>
          description: Returned on the first successful request. Used as a preflight
            message.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: HMDS Market Scanner
      tags:
      - Trading Scanner
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/html
      - text/plain; charset=utf-8
  /iserver/account:
    post:
      description: |
        Switch the active account for how you request data. Only available for financial advisors and multi-account structures.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_account_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                successfully-set-account:
                  value:
                    set: true
                    acctId: U2234567
              schema:
                $ref: '#/components/schemas/setAccountResponse'
          description: Validates the account swapped to.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              examples:
                invalid-account-id:
                  value:
                    error: Invalid account ID
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            Internal Server Error. Unable to process request if incoming values are not valid. For example accountId is not correct
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Switch Account
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/alert/{alertId}:
    get:
      description: Request details of a specific alert by providing the assigned alertId
        Id.
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          description: "alert identifier, internally referenced as order id"
          format: int64
          type: string
        style: simple
      - explode: false
        in: query
        name: type
        required: true
        schema:
          description: queryType
          enum:
          - Q
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                found-alert:
                  value:
                    account: U1234567
                    order_id: 833967258
                    alert_name: IBM
                    tif: GTC
                    expire_time: null
                    alert_active: 1
                    alert_repeatable: 0
                    alert_email: john.smith@example.com
                    alert_send_message: 1
                    alert_message: alert message
                    alert_show_popup: 1
                    alert_play_audio: null
                    order_status: Submitted
                    alert_triggered: false
                    fg_color: '#FFFFFF'
                    bg_color: '#0000CC'
                    order_not_editable: false
                    itws_orders_only: 0
                    alert_mta_currency: null
                    alert_mta_defaults: null
                    tool_id: null
                    time_zone: null
                    alert_default_type: null
                    condition_size: 1
                    condition_outside_rth: 1
                    conditions:
                    - condition_type: 1
                      conidex: 8314@NYSE
                      contract_description_1: IBM
                      condition_operator: '>='
                      condition_trigger_method: "0"
                      condition_value: "500.00"
                      condition_logic_bind: "n"
                      condition_time_zone: null
              schema:
                $ref: '#/components/schemas/alertDetails'
          description: An object containing all unique details of the specified alert.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                bad-request:
                  value:
                    error: "Bad Request: orderId and type are required"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request if orderId is empty or type is invalid
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: orderId is not parsable; unable to process request
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Details Of A Specific Alert
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/allocation/accounts:
    get:
      description: Retrieves a list of all sub-accounts and returns their net liquidity
        and available equity for advisors to make decisions on what accounts should
        be allocated and how.
      responses:
        "200":
          content:
            application/json:
              examples:
                "2-sub-accounts":
                  value:
                    accounts:
                    - data:
                      - value: "230013224.04"
                        key: NetLiquidation
                      - value: "229617260.41"
                        key: AvailableEquity
                      name: U1234567
                    - data:
                      - value: "229453917.57"
                        key: NetLiquidation
                      - value: "229153196.12"
                        key: AvailableEquity
                      name: U1234568
              schema:
                $ref: '#/components/schemas/subAccounts'
          description: Indicates data is being returned successfully.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Allocatable Sub-Accounts
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/allocation/group:
    get:
      description: "Retrieves a list of all of the advisor’s allocation groups. This\
        \ describes the name of the allocation group, number of subaccounts within\
        \ the group, and the method in use for the group."
      responses:
        "200":
          content:
            application/json:
              examples:
                groups:
                  value:
                    data:
                    - allocation_method: E
                      size: 16
                      name: group_1
                    - allocation_method: "N"
                      size: 3
                      name: group_2
              schema:
                $ref: '#/components/schemas/allocationGroups'
          description: "Returns the \"data\" array, which contains all allocation\
            \ groups under the advisor account."
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: List All Allocation Groups
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    post:
      description: "Add a new allocation group. This group can be used to trade in\
        \ place of the {accountId} for the /iserver/account/{accountId}/orders endpoint."
      requestBody:
        content:
          application/json:
            examples:
              Shares:
                value:
                  name: Group_1_Shares
                  default_method: S
                  accounts:
                  - name: U456789
                    amount: 4
                  - name: U123456
                    amount: 1
              NetLiq:
                value:
                  name: Group_1_NetLiq
                  default_method: "N"
                  accounts:
                  - name: U456789
                  - name: U123456
              EqualQty:
                value:
                  name: Group_1_Equal
                  default_method: E
                  accounts:
                  - name: U456789
                  - name: U123456
            schema:
              $ref: '#/components/schemas/_iserver_account_allocation_group_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_iserver_account_allocation_group_put_200_response'
          description: Returns a confirmation that the modification was successful.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Add Allocation Group
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    put:
      description: Modify an existing allocation group.
      requestBody:
        content:
          application/json:
            examples:
              Shares:
                value:
                  name: Group_1_Shares
                  previous_name: Group_0_Shares
                  amount: 15
                  default_method: S
                  accounts:
                    name: U456789
                    amount: 3
              NetLiq:
                value:
                  name: Group_1_NetLiq
                  default_method: "N"
              EqualQty:
                value:
                  name: Group_1_Equal
                  default_method: E
            schema:
              $ref: '#/components/schemas/_iserver_account_allocation_group_put_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_iserver_account_allocation_group_put_200_response'
          description: Returns a confirmation that the modification was successful.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Modify Allocation Group
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/allocation/group/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_account_allocation_group_delete_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    success: true
              schema:
                $ref: '#/components/schemas/_iserver_account_allocation_group_put_200_response'
          description: Returns a confirmation that the modification was successful.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Remove Allocation Group
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/allocation/group/single:
    post:
      description: "Retrieves the configuration of a single account group. This describes\
        \ the name of the allocation group, the specific accounts contained in the\
        \ group, and the allocation method in use along with any relevant quantities."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_account_allocation_group_delete_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                single-group:
                  value:
                    name: group1
                    accounts:
                    - name: U1234567
                    - name: U1234568
                    default_method: E
              schema:
                $ref: '#/components/schemas/allocationGroup'
          description: Returns details of the allocation group.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Retrieve Single Allocation Group
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/allocation/presets:
    get:
      description: Retrieve the preset behavior for allocation groups for specific
        events.
      responses:
        "200":
          content:
            application/json:
              examples:
                presents:
                  value:
                    group_auto_close_positions: false
                    default_method_for_all: AvailableEquity
                    profiles_auto_close_positions: false
                    strict_credit_check: false
                    group_proportional_allocation: false
              schema:
                $ref: '#/components/schemas/presets'
          description: Successfully retrieve preset details
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Retrieve Allocation Presets
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    post:
      description: Set the preset behavior for new allocation groups for specific
        events.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/presets'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_iserver_account_allocation_presets_post_200_response'
          description: Successfully retrieve preset details
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Set The Allocation Presets
      tags:
      - Trading FA Allocation Management
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/mta:
    get:
      description: |
        Retrieve information about your MTA alert. Each login user only has one mobile trading assistant (MTA) alert with it’s own unique tool id that cannot be changed. MTA alerts can not be created or deleted, only modified. When modified a new order Id is generated.
      externalDocs:
        description: See our here for more information on MTA alerts
        url: https://www.ibkrguides.com/iphone/alerts.htm
      responses:
        "200":
          content:
            application/json:
              examples:
                mta-details:
                  value:
                    account: U1234567
                    order_id: 167426254
                    alert_name: MTA (AutoAlert)
                    tif: GTC
                    expire_time: null
                    alert_active: 1
                    alert_repeatable: 1
                    alert_email: jonh.smith@example.com
                    alert_send_message: 1
                    alert_message: null
                    alert_show_popup: 0
                    alert_play_audio: null
                    order_status: Submitted
                    alert_triggered: false
                    fg_color: '#FFFFFF'
                    bg_color: '#0000CC'
                    order_not_editable: false
                    itws_orders_only: 0
                    alert_mta_currency: USD
                    alert_mta_defaults: "9:STATE=1,MIN=-260000,MAX=260000,STEP=500,DEF_MIN=-26000,DEF_MAX=26000|8:STATE=0,MIN=-15,MAX=15,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|7:STATE=1,MIN=-5,MAX=5,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|4:STATE=1,MIN=1,MAX=50,STEP=1,DEF_VAL=10|5:STATE=0"
                    tool_id: 55834574848
                    time_zone: all timezones can be here
                    alert_default_type: null
                    condition_size: 1
                    condition_outside_rth: 0
                    conditions:
                    - condition_type: 5
                      conidex: '*@*'
                      contract_description_1: Unknown
                      condition_operator: null
                      condition_trigger_method: null
                      condition_value: '*'
                      condition_logic_bind: "n"
                      condition_time_zone: null
              schema:
                $ref: '#/components/schemas/alertDetails'
          description: The alert description for the unique MTA alert on the account.
      summary: Get MTA Alert
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-accepts:
      - application/json
  /iserver/account/order/status/{orderId}:
    get:
      description: Retrieve the status of a single order.
      parameters:
      - explode: false
        in: path
        name: orderId
        required: true
        schema:
          description: The IB-assigned order ID of the desired order ticket.
          example: "1799796559"
          format: int32
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                orderStatusExample:
                  value:
                    sub_type: null
                    request_id: "209"
                    server_id: "0"
                    order_id: 1799796559
                    conidex: "265598"
                    conid: 265598
                    symbol: AAPL
                    side: S
                    contract_description_1: AAPL
                    listing_exchange: NASDAQ.NMS
                    option_acct: c
                    company_name: APPLE INC
                    size: "0.0"
                    total_size: "5.0"
                    currency: USD
                    account: U1234567
                    order_type: MARKET
                    cum_fill: "5.0"
                    order_status: Filled
                    order_ccp_status: "2"
                    order_status_description: Order Filled
                    tif: DAY
                    fg_color: '#FFFFFF'
                    bg_color: '#000000'
                    order_not_editable: true
                    editable_fields: ""
                    cannot_cancel_order: true
                    deactivate_order: false
                    sec_type: STK
                    available_chart_periods: '#R|1'
                    order_description: "Sold 5 Market, Day"
                    order_description_with_contract: "Sold 5 AAPL Market, Day"
                    alert_active: 1
                    child_order_type: "0"
                    order_clearing_account: U1234567
                    size_and_fills: "5"
                    exit_strategy_display_price: "193.12"
                    exit_strategy_chart_description: Sold 5 @ 192.26
                    average_price: "192.26"
                    exit_strategy_tool_availability: "1"
                    allowed_duplicate_opposite: true
                    order_time: "231211180049"
              schema:
                $ref: '#/components/schemas/_iserver_account_order_status__orderId__get_200_response'
          description: order status
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Retrieve The Status Of A Single Order.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/orders:
    get:
      description: Retrieves open orders and filled or cancelled orders submitted
        during the current brokerage session.
      parameters:
      - description: Filter results using a comma-separated list of Order Status values.
          Also accepts a value to sort results by time.
        explode: false
        in: query
        name: filters
        required: false
        schema:
          enum:
          - Inactive
          - PendingSubmit
          - PreSubmitted
          - Submitted
          - Filled
          - PendingCancel
          - Cancelled
          - WarnState
          - SortByTime
          example: "Filled,SortByTime"
          type: string
        style: form
      - description: Instructs IB to clear cache of orders and obtain updated view
          from brokerage backend. Response will be an empty array.
        explode: false
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: Retrieve orders for a specific account in the structure.
        explode: false
        in: query
        name: accountId
        required: false
        schema:
          example: DU123456
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                orders:
                  value:
                    orders:
                    - acct: U1234567
                      exchange: IDEALPRO
                      conidex: 15016138@IDEALPRO
                      conid: 15016138
                      account: DU4355398
                      orderId: 1370093238
                      cashCcy: CAD
                      sizeAndFills: 2.4K CAD
                      orderDesc: "Bought 2806.46 Limit 0.90000, Day"
                      description1: AUD.CAD
                      ticker: AUD
                      secType: CASH
                      listingExchange: FXCONV
                      remainingQuantity: 0.0
                      filledQuantity: 2499.99
                      totalSize: 2806.46
                      totalCashSize: 2500.0
                      companyName: Australian dollar
                      status: Filled
                      order_ccp_status: Filled
                      origOrderType: LIMIT
                      supportsTaxOpt: "0"
                      lastExecutionTime: "240425160326"
                      orderType: Limit
                      bgColor: '#FFFFFF'
                      fgColor: '#000000'
                      isEventTrading: "0"
                      price: "0.90000"
                      timeInForce: CLOSE
                      lastExecutionTime_r: 1714061006000
                      side: BUY
                      avgPrice: "0.8908"
                    snapshot: true
              schema:
                $ref: '#/components/schemas/liveOrdersResponse'
          description: Orders for a specific account
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Retrieves Open Orders And Filled Or Cancelled Orders Submitted During
        The Current Brokerage Session.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/pnl/partitioned:
    get:
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    upnl:
                      U1234567.Core:
                        rowType: 1
                        dpl: -12510.0
                        nl: 1290000.0
                        upl: 256000.0
                        el: 824600.0
                        mv: 1700000.0
                can-be-empty-for-initial-reques:
                  value:
                    upnl: {}
              schema:
                $ref: '#/components/schemas/pnlPartitionedResponse'
          description: Refers to “updated PnL”. Holds a json object of key-value paired
            pnl details.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Account Profit And Loss
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/search/{searchPattern}:
    get:
      description: |
        Returns a list of accounts matching a query pattern set in the request. Broker accounts configured with the DYNACCT property will not receive account information at login. Instead, they must dynamically query then set their account number. Customers without the DYNACCT property will receive a 503 error.
      parameters:
      - explode: false
        in: path
        name: searchPattern
        required: true
        schema:
          description: The pattern used to describe credentials to search for. Including
            part of part of an account ID will return the full value.
          example: U123
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                successfully-found:
                  value:
                    matchedAccounts:
                    - accountId: U1234567
                      alias: U1234567
                      allocationId: U1234567
                    pattern: U1
                not-found:
                  value:
                    matchedAccounts: []
                    pattern: "123"
              schema:
                $ref: '#/components/schemas/dynAccountSearchResponse'
          description: Returns all accounts that match the searchPattern string.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Search Dynamic Account
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/trades:
    get:
      description: "Retrieve a list of trades, up to a maximum of 7 days prior."
      parameters:
      - description: "The number of prior days prior to include in response, up to\
          \ a maximum of 7. If omitted, only the current day's executions will be\
          \ returned."
        explode: false
        in: query
        name: days
        required: false
        schema:
          example: "3"
          format: int32
          type: string
        style: form
      - description: Filter trades by account ID or allocation group.
        explode: false
        in: query
        name: accountId
        required: false
        schema:
          example: DU123456
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                tradesResponseExample:
                  value:
                  - execution_id: 0000e0d5.6576fd38.01.01
                    symbol: AAPL
                    supports_tax_opt: "1"
                    side: S
                    order_description: Sold 5 @ 192.26 on ISLAND
                    trade_time: 20231211-18:00:49
                    trade_time_r: 1702317649000
                    size: 5.0
                    price: "192.26"
                    order_ref: Order123
                    submitter: user1234
                    exchange: ISLAND
                    commission: "1.01"
                    net_amount: 961.3
                    account: U1234567
                    accountCode: U1234567
                    account_allocation_name: U1234567
                    company_name: APPLE INC
                    contract_description_1: AAPL
                    sec_type: STK
                    listing_exchange: NASDAQ.NMS
                    conid: 265598
                    conidEx: "265598"
                    clearing_id: IB
                    clearing_name: IB
                    liquidation_trade: "0"
                    is_event_trading: "0"
              schema:
                $ref: '#/components/schemas/tradesResponse'
          description: trades
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Retrieve A List Of Trades.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/alert:
    post:
      description: "Endpoint used to create a new alert, or modify an existing alert."
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: U1234567
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              alert-creation-request:
                value:
                  alertName: AAPL_Price
                  alertMessage: AAPL Price Drop!
                  alertRepeatable: 0
                  email: jonh.smith@example.com
                  expireTime: 20231231-12:00:00
                  iTWSOrdersOnly: 0
                  outsideRth: 0
                  sendMessage: 1
                  showPopup: 1
                  tif: GTC
                  conditions:
                  - conidex: 265598@NYSE
                    logicBind: a
                    operator: '>='
                    timeZone: US/Eastern
                    triggerMethod: "0"
                    type: 1
                    value: "500"
              alert-modification-request:
                value:
                  orderId: "1408549184"
                  alertName: AAPL_Price
                  alertMessage: AAPL Price Drop! Modified message
                  alertRepeatable: 0
                  email: jonh.smith@example.com
                  expireTime: 20231231-12:00:00
                  iTWSOrdersOnly: 0
                  outsideRth: 0
                  sendMessage: 1
                  showPopup: 1
                  tif: GTC
                  conditions:
                  - conidex: 265598@NYSE
                    logicBind: a
                    operator: '>='
                    timeZone: US/Eastern
                    triggerMethod: "0"
                    type: 1
                    value: "500"
            schema:
              $ref: '#/components/schemas/alertCreationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                successfully-created:
                  value:
                    request_id: null
                    order_id: 1408549184
                    success: true
                    text: Submitted
                    order_status: null
                    warning_message: null
                successfully-modified:
                  value:
                    request_id: null
                    order_id: 1408549184
                    success: true
                    text: Submitted
                    order_status: null
                    warning_message: null
              schema:
                $ref: '#/components/schemas/alertCreationResponse'
          description: An object containing valid accounts and the account properties
            regarding trading access. This endpoint is also used to confirm account
            validation.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                empty-body:
                  value:
                    error: "Bad Request: body can't be empty"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; body is empty
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              examples:
                invalid-creation-request:
                  value:
                    error: "Condition #1:can't recognize fix [abc]"
                incorect-modification-request:
                  value:
                    error: Alert name cannot be modified
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            Internal Server Error. Unable to process request if incoming values are not valid. For example operator is "abc" Or if modification request contains unmodified fields
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Create Or Modify Alert
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/alert/activate:
    post:
      description: "Activate or Deactivate existing alerts created for this account.\
        \ This does not delete alerts, but disables notifications until reactivated."
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: U1234567
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              activate-request:
                value:
                  alertId: 9876543210
                  alertActive: 1
              deactivate-request:
                value:
                  alertId: 9876543210
                  alertActive: 0
            schema:
              $ref: '#/components/schemas/alertActivationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                activated-deactivated-successfully:
                  value:
                    request_id: null
                    order_id: 833967258
                    success: true
                    text: Request was submitted
                    failure_list: null
              schema:
                $ref: '#/components/schemas/alertActivationResponse'
          description: An object containing details about the activated/deactivated
            alert.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              examples:
                request-with-non-existent-alertId:
                  value:
                    error: failed to activate/deactivate alert
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: Internal Server Error; unable to process incoming request due
            to invalid data in it
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Activate Or Deactivate An Alert
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/alert/{alertId}:
    delete:
      description: Permanently delete an existing alert. Deleting an MTA alert will
        reset it to the default state.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: U1234567
          type: string
        style: simple
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          description: "order_id returned from the original alert creation, or from\
            \ the list of available alerts."
          example: "9876543210"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                successfully-deleted:
                  value:
                    request_id: null
                    order_id: 833967258
                    success: true
                    text: Request was submitted
                    failure_list: null
              schema:
                $ref: '#/components/schemas/alertDeletionResponse'
          description: An object containing details on the deleted endpoint.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              examples:
                alert-id-doesnt-exist:
                  value:
                    error: "failed to delete alert: Alert 83396732432423258 doesn't\
                      \ exist"
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: Internal Server Error; Unable to delete alert in case when
            provided alert id doesn't exist
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Delete An Alert
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/alerts:
    get:
      description: Retrieve a list of all alerts attached to the provided account.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Identifier for the unique account to retrieve information from.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                not-found:
                  value: []
                found-alerts:
                  value:
                    order_id: 9876543210
                    account: U1234567
                    alert_name: AAPL
                    alert_active: 1
                    order_time: 20240308-17:08:38
                    alert_triggered: false
                    alert_repeatable: 0
              schema:
                $ref: '#/components/schemas/alerts'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get A List Of Available Alerts
      tags:
      - Trading Alerts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/order/{orderId}:
    delete:
      description: "Cancel an existing, unfilled order."
      parameters:
      - description: The account to which the order will clear.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: DU123456
          type: string
        style: simple
      - description: The IB-assigned order ID of the desired order ticket.
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          example: "1799796559"
          format: int32
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                orderCancelSuccessExample:
                  value:
                  - msg: Request was submitted
                    order_id: "1370093239"
                    order_status: PreSubmitted
                    encrypt_message: "1"
                orderCancelErrorExample:
                  value:
                    error: OrderID 123456 doesn't exist
              schema:
                $ref: '#/components/schemas/_iserver_account__accountId__order__orderId__delete_200_response'
          description: Status of submission
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: "Cancel An Existing, Unfilled Order."
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    post:
      description: "Modify an existing, unfilled order."
      parameters:
      - description: The account to which the order will clear.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: DU123456
          type: string
        style: simple
      - description: The IB-assigned order ID of the desired order ticket.
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          example: "1799796559"
          format: int32
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/singleOrderSubmissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                orderModifySuccessExample:
                  value:
                  - order_id: "1370093239"
                    order_status: PreSubmitted
                    encrypt_message: "1"
                orderReplyMessageExample:
                  value:
                  - id: 99097238-9824-4830-84ef-46979aa22593
                    isSuppressed: false
                    message:
                    - |-
                      You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.
                      Are you sure you want to submit this order?
                    messageIds:
                    - o354
                orderModifyErrorExample:
                  value:
                    error: OrderID 123456 doesn't exist
                advancedOrderRejectPromptExample:
                  value:
                    orderId: 123456789
                    reqId: "22170"
                    dismissable: []
                    text: |-
                      If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.
                      Use the Price Management Algo?
                    options:
                    - Use on this order
                    - Always use
                    - Do not use
                    type: M
                    messageId: p12
                    prompt: true
              schema:
                $ref: '#/components/schemas/_iserver_account__accountId__order__orderId__post_200_response'
          description: Status of submission
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: "Modify An Existing, Unfilled Order."
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/orders:
    post:
      description: "Submit a new order(s) ticket, bracket, or OCA group."
      parameters:
      - description: The account to which the order will clear.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: DU123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSubmissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                orderSubmitSuccessExample:
                  value:
                  - order_id: "1370093239"
                    order_status: PreSubmitted
                    encrypt_message: "1"
                orderReplyMessageExample:
                  value:
                  - id: 99097238-9824-4830-84ef-46979aa22593
                    isSuppressed: false
                    message:
                    - |-
                      You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.
                      Are you sure you want to submit this order?
                    messageIds:
                    - o354
                orderSubmitErrorExample:
                  value:
                    error: 'Order not confirmed '
                advancedOrderRejectPromptExample:
                  value:
                    orderId: 123456789
                    reqId: "22170"
                    dismissable: []
                    text: |-
                      If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.
                      Use the Price Management Algo?
                    options:
                    - Use on this order
                    - Always use
                    - Do not use
                    type: M
                    messageId: p12
                    prompt: true
              schema:
                $ref: '#/components/schemas/_iserver_account__accountId__order__orderId__post_200_response'
          description: "Order submission response (success, error, reply is required\
            \ or order reject)"
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: "Submit A New Order(s) Ticket, Bracket, Or OCA Group."
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/orders/whatif:
    post:
      description: "Preview the projected effects of an order ticket or bracket of\
        \ orders, including cost and changes to margin and account equity."
      parameters:
      - description: The account to which the order will clear.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          example: DU123456
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ordersSubmissionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                orderPreview:
                  value:
                    amount:
                      amount: "1,977.60 USD (10 Shares)"
                      commission: 1 USD
                      total: "1,978.60 USD"
                    equity:
                      current: "123,456"
                      change: "-1"
                      after: "123,455"
                    initial:
                      current: "1000"
                      change: "652"
                      after: "1652"
                    maintenance:
                      current: "900"
                      change: 590""
                      after: "1490"
                    position:
                      current: "20"
                      change: "10"
                      after: "30"
                    warn: "21/You are trying to submit an order without having market\
                      \ data for this instrument. \nIB strongly recommends against\
                      \ this kind of blind trading which may result in \nerroreous\
                      \ or unexpected trades."
                    error: null
              schema:
                $ref: '#/components/schemas/orderPreview'
          description: Order Preview
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: "Preview The Projected Effects Of An Order Ticket Or Bracket Of Orders,\
        \ Including Cost And Changes To Margin And Account Equity."
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/summary:
    get:
      description: Provides a general overview of the account details such as balance
        values.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Pass the account identifier to receive information for.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    accountType: ""
                    status: ""
                    balance: 825903.0
                    SMA: 368538.0
                    buyingPower: 3307124.0
                    availableFunds: 825903.0
                    excessLiquidity: 826781.0
                    netLiquidationValue: 1290490.0
                    equityWithLoanValue: 1281714.0
                    regTLoan: 0.0
                    securitiesGVP: 1793178.0
                    totalCashValue: -401846.0
                    accruedInterest: 0.0
                    regTMargin: 0.0
                    initialMargin: 464586.0
                    maintenanceMargin: 463709.0
                    cashBalances:
                    - currency: EUR
                      balance: 194.0
                      settledCash: 194.0
                    - currency: HKD
                      balance: 0.0
                      settledCash: 0.0
                    - currency: JPY
                      balance: 14781.0
                      settledCash: 14781.0
                    - currency: USD
                      balance: -402158.0
                      settledCash: -402158.0
                    - currency: Total (in USD)
                      balance: -401846.0
                      settledCash: -401846.0
              schema:
                $ref: '#/components/schemas/accountSummaryResponse'
          description: Provides a general overview of the account details such as
            balance values.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: General Account Summary
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/summary/available_funds:
    get:
      description: Provides a summary specific for avilable funds giving more depth
        than the standard /summary endpoint.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Pass the account identifier to receive information for.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    total:
                      current_available: "825,208 USD"
                      current_excess: "826,089 USD"
                      Prdctd Pst-xpry Excss: 0 USD
                      SMA: "368,538 USD"
                      Lk Ahd Avlbl Fnds: "821,067 USD"
                      Lk Ahd Excss Lqdty: "822,324 USD"
                      overnight_available: "821,067 USD"
                      overnight_excess: "822,324 USD"
                      buying_power: "3,304,346 USD"
                      leverage: n/a
                      Lk Ahd Nxt Chng: '@ 16:00:00'
                      day_trades_left: Unlimited
                    Crypto at Paxos:
                      current_available: 0 USD
                      current_excess: 0 USD
                      Prdctd Pst-xpry Excss: 0 USD
                      Lk Ahd Avlbl Fnds: 0 USD
                      Lk Ahd Excss Lqdty: 0 USD
                      overnight_available: 0 USD
                      overnight_excess: 0 USD
                    commodities:
                      current_available: "22,483 USD"
                      current_excess: "23,361 USD"
                      Prdctd Pst-xpry Excss: 0 USD
                      Lk Ahd Avlbl Fnds: "18,342 USD"
                      Lk Ahd Excss Lqdty: "19,597 USD"
                      overnight_available: "18,342 USD"
                      overnight_excess: "19,597 USD"
                    securities:
                      current_available: "802,725 USD"
                      current_excess: "802,727 USD"
                      Prdctd Pst-xpry Excss: 0 USD
                      SMA: "368,538 USD"
                      Lk Ahd Avlbl Fnds: "802,725 USD"
                      Lk Ahd Excss Lqdty: "802,727 USD"
                      overnight_available: "802,725 USD"
                      overnight_excess: "802,727 USD"
                      leverage: "1.43"
              schema:
                $ref: '#/components/schemas/availableFundsResponse'
          description: Indicates a successful return of available funds.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Summary Of Available Funds
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/summary/balances:
    get:
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Pass the account identifier to receive information for.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    total:
                      net_liquidation: "1,288,301 USD"
                      Nt Lqdtn Uncrtnty: 0 USD
                      equity_with_loan: "1,279,520 USD"
                      Prvs Dy Eqty Wth Ln Vl: "1,275,902 USD"
                      Rg T Eqty Wth Ln Vl: "1,256,229 USD"
                      sec_gross_pos_val: "1,791,096 USD"
                      cash: "-401,693 USD"
                      MTD Interest: -549 USD
                      Pndng Dbt Crd Chrgs: 0 USD
                    Crypto at Paxos:
                      net_liquidation: 0 USD
                      equity_with_loan: 0 USD
                      cash: 0 USD
                      MTD Interest: 0 USD
                      Pndng Dbt Crd Chrgs: 0 USD
                    commodities:
                      net_liquidation: "32,072 USD"
                      equity_with_loan: "23,291 USD"
                      cash: "32,072 USD"
                      MTD Interest: 0 USD
                      Pndng Dbt Crd Chrgs: 0 USD
                    securities:
                      net_liquidation: "1,256,229 USD"
                      equity_with_loan: "1,256,229 USD"
                      Prvs Dy Eqty Wth Ln Vl: "1,275,902 USD"
                      Rg T Eqty Wth Ln Vl: "1,256,229 USD"
                      sec_gross_pos_val: "1,791,096 USD"
                      cash: "-433,765 USD"
                      MTD Interest: -549 USD
                      Pndng Dbt Crd Chrgs: 0 USD
              schema:
                $ref: '#/components/schemas/summaryOfAccountBalancesResponse'
          description: Indicates a successful return of available funds.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Summary Of Account Balances
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/summary/margins:
    get:
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Pass the account identifier to receive information for.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    total:
                      RegT Margin: "896,255 USD"
                      current_initial: "468,562 USD"
                      Prdctd Pst-xpry Mrgn @ Opn: 0 USD
                      current_maint: "467,308 USD"
                      projected_liquidity_inital_margin: "468,562 USD"
                      Prjctd Lk Ahd Mntnnc Mrgn: "467,308 USD"
                      projected_overnight_initial_margin: "468,562 USD"
                      Prjctd Ovrnght Mntnnc Mrgn: "467,308 USD"
                    Crypto at Paxos:
                      current_initial: 0 USD
                      Prdctd Pst-xpry Mrgn @ Opn: 0 USD
                      current_maint: 0 USD
                      projected_liquidity_inital_margin: 0 USD
                      Prjctd Lk Ahd Mntnnc Mrgn: 0 USD
                      projected_overnight_initial_margin: 0 USD
                      Prjctd Ovrnght Mntnnc Mrgn: 0 USD
                    commodities:
                      current_initial: "13,794 USD"
                      Prdctd Pst-xpry Mrgn @ Opn: 0 USD
                      current_maint: "12,540 USD"
                      projected_liquidity_inital_margin: "13,794 USD"
                      Prjctd Lk Ahd Mntnnc Mrgn: "12,540 USD"
                      projected_overnight_initial_margin: "13,794 USD"
                      Prjctd Ovrnght Mntnnc Mrgn: "12,540 USD"
                    securities:
                      RegT Margin: "896,255 USD"
                      current_initial: "454,768 USD"
                      Prdctd Pst-xpry Mrgn @ Opn: 0 USD
                      current_maint: "454,768 USD"
                      projected_liquidity_inital_margin: "454,768 USD"
                      Prjctd Lk Ahd Mntnnc Mrgn: "454,768 USD"
                      projected_overnight_initial_margin: "454,768 USD"
                      Prjctd Ovrnght Mntnnc Mrgn: "454,768 USD"
              schema:
                $ref: '#/components/schemas/summaryOfAccountMarginResponse'
          description: Indicates a success request to receive margin balance values.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Summary Of Account Margin
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/account/{accountId}/summary/market_value:
    get:
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Pass the account identifier to receive information for.
          example: U1234567
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    EUR:
                      total_cash: "194"
                      settled_cash: "194"
                      MTD Interest: "0"
                      stock: "0"
                      options: "0"
                      futures: "0"
                      future_options: "0"
                      funds: "0"
                      dividends_receivable: "0"
                      mutual_funds: "0"
                      money_market: "0"
                      bonds: "0"
                      Govt Bonds: "0"
                      t_bills: "0"
                      warrants: "0"
                      issuer_option: "0"
                      commodity: "0"
                      Notional CFD: "0"
                      cfd: "0"
                      Cryptocurrency: "0"
                      net_liquidation: "194"
                      unrealized_pnl: "0"
                      realized_pnl: "0"
                      Exchange Rate: "1.092525"
                    HKD:
                      total_cash: "0"
                      settled_cash: "0"
                      MTD Interest: "0"
                      stock: "19,441"
                      options: "0"
                      futures: "0"
                      future_options: "0"
                      funds: "0"
                      dividends_receivable: "0"
                      mutual_funds: "0"
                      money_market: "0"
                      bonds: "0"
                      Govt Bonds: "0"
                      t_bills: "0"
                      warrants: "0"
                      issuer_option: "0"
                      commodity: "0"
                      Notional CFD: "0"
                      cfd: "0"
                      Cryptocurrency: "0"
                      net_liquidation: "19,441"
                      unrealized_pnl: "4,857"
                      realized_pnl: "0"
                      Exchange Rate: "0.1278515"
                    JPY:
                      total_cash: "14,781"
                      settled_cash: "14,781"
                      MTD Interest: "0"
                      stock: "0"
                      options: "0"
                      futures: "0"
                      future_options: "0"
                      funds: "0"
                      dividends_receivable: "0"
                      mutual_funds: "0"
                      money_market: "0"
                      bonds: "0"
                      Govt Bonds: "0"
                      t_bills: "0"
                      warrants: "0"
                      issuer_option: "0"
                      commodity: "0"
                      Notional CFD: "0"
                      cfd: "0"
                      Cryptocurrency: "0"
                      net_liquidation: "14,781"
                      unrealized_pnl: "0"
                      realized_pnl: "0"
                      Exchange Rate: "0.0068052"
                    USD:
                      total_cash: "-401,958"
                      settled_cash: "-401,958"
                      MTD Interest: "-549"
                      stock: "1,691,668"
                      options: "0"
                      futures: "-212"
                      future_options: "0"
                      funds: "0"
                      dividends_receivable: "0"
                      mutual_funds: "0"
                      money_market: "0"
                      bonds: "0"
                      Govt Bonds: "0"
                      t_bills: "0"
                      warrants: "0"
                      issuer_option: "0"
                      commodity: "0"
                      Notional CFD: "0"
                      cfd: "0"
                      Cryptocurrency: "0"
                      net_liquidation: "1,289,161"
                      unrealized_pnl: "253,275"
                      realized_pnl: "0"
                      Exchange Rate: "1.00"
                    Total (in USD):
                      total_cash: "-401,646"
                      settled_cash: "-401,646"
                      MTD Interest: "-549"
                      stock: "1,694,154"
                      options: "0"
                      futures: "-212"
                      future_options: "0"
                      funds: "0"
                      dividends_receivable: "0"
                      mutual_funds: "0"
                      money_market: "0"
                      bonds: "0"
                      Govt Bonds: "0"
                      t_bills: "0"
                      warrants: "0"
                      issuer_option: "0"
                      commodity: "0"
                      Notional CFD: "0"
                      cfd: "0"
                      Cryptocurrency: "0"
                      net_liquidation: "1,291,959"
                      unrealized_pnl: "253,896"
                      realized_pnl: "0"
                      Exchange Rate: "1.00"
              schema:
                $ref: '#/components/schemas/summaryMarketValueResponse'
          description: Indicates a successful market value request.
        "400":
          content:
            application/json; charset=utf-8:
              examples:
                invalid-account-id:
                  value:
                    error: "Bad Request: accountId is not valid: 11110000"
                    statusCode: 400
                account-is-not-set:
                  value:
                    error: "Bad Request: Please query /accounts first"
                    statusCode: 400
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request; passed input cannot pass initial validation and
            detected right away
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Summary Of Account's Market Value
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/accounts:
    get:
      description: "Returns a list of accounts the user has trading access to, their\
        \ respective aliases and the currently selected account. Note this endpoint\
        \ must be called before modifying an order or querying open orders."
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    accounts:
                    - All
                    - U1234567
                    - U2234567
                    - U3234567
                    acctProps:
                      All:
                        hasChildAccounts: false
                        supportsCashQty: false
                        supportsFractions: false
                      U1234567:
                        hasChildAccounts: false
                        supportsCashQty: true
                        supportsFractions: true
                      U2234567:
                        hasChildAccounts: false
                        supportsCashQty: true
                        supportsFractions: true
                      U3234567:
                        hasChildAccounts: false
                        supportsCashQty: true
                        supportsFractions: true
                    aliases:
                      All: All
                      U1234567: U1234567
                      U2234567: U2234567
                      U3234567: U3234567
                    allowFeatures:
                      showGFIS: true
                      showEUCostReport: false
                      allowEventContract: true
                      allowFXConv: true
                      allowFinancialLens: true
                      allowMTA: false
                      allowTypeAhead: true
                      allowEventTrading: true
                      snapshotRefreshTimeout: 30
                      liteUser: false
                      showWebNews: true
                      research: true
                      debugPnl: true
                      showTaxOpt: true
                      showImpactDashboard: true
                      allowDynAccount: false
                      allowCrypto: false
                      allowFA: false
                      allowLiteUnderPro: false
                      allowedAssetTypes: "STK,CFD,OPT,FOP,WAR,FUT,BAG,PDC,CASH,IND,BOND,BILL,FUND,SLB,News,CMDTY,IOPT,ICU,ICS,PHYSS,CRYPTO"
                    chartPeriods:
                      STK:
                      - '*'
                      CFD:
                      - '*'
                      OPT:
                      - 2h
                      - 1d
                      - 2d
                      - 1w
                      - 1m
                      FOP:
                      - 2h
                      - 1d
                      - 2d
                      - 1w
                      - 1m
                      WAR:
                      - '*'
                      IOPT:
                      - '*'
                      FUT:
                      - '*'
                      CASH:
                      - '*'
                      IND:
                      - '*'
                      BOND:
                      - '*'
                      FUND:
                      - '*'
                      CMDTY:
                      - '*'
                      PHYSS:
                      - '*'
                      CRYPTO:
                      - '*'
                    groups:
                    - All
                    profiles: []
                    selectedAccount: U1234567
                    serverInfo:
                      serverName: server
                      serverVersion: "Build 99.99.9, May 22, 2020 4:19:22 PM"
                    sessionId: 65ee8a41.0000001e
                    isFT: false
                    isPaper: true
              schema:
                $ref: '#/components/schemas/userAccountsResponse'
          description: An object containing valid accounts and the account properties
            regarding trading access. This endpoint is also used to confirm account
            validation.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Receive Brokerage Accounts For The Current User.
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/auth/ssodh/init:
    post:
      description: "After retrieving the access token and subsequent Live Session\
        \ Token, customers can initialize their brokerage session with the ssodh/init\
        \ endpoint."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brokerageSessionInitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                success:
                  value:
                    authenticated: true
                    competing: false
                    connected: true
                    message: ""
                    MAC: 98:F2:B3:23:BF:A0
                    serverInfo:
                      serverName: JifN19053
                      serverVersion: "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
              schema:
                $ref: '#/components/schemas/brokerageSessionStatus'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Initialize Brokerage Session.
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/auth/status:
    post:
      description: Current Authentication status to the Brokerage system. Market Data
        and Trading is not possible if not authenticated.
      responses:
        "200":
          content:
            application/json:
              example:
                success:
                  value:
                    authenticated: true
                    competing: false
                    connected: true
                    message: ""
                    MAC: 12:B:B3:23:BF:A0
                    serverInfo:
                      serverName: JifN19053
                      serverVersion: "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
                    fail: ""
              schema:
                $ref: '#/components/schemas/brokerageSessionStatus'
          description: Detailed status of the Brokerage session
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
      summary: Brokerage Session Auth Status
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /iserver/contract/rules:
    post:
      description: Returns trading related rules for a specific contract and side.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_contract_rules_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    algoEligible: true
                    overnightEligible: true
                    costReport: false
                    canTradeAcctIds:
                    - U1234567
                    - U1234568
                    - U1234569
                    error: null
                    orderTypes:
                    - limit
                    - midprice
                    - market
                    - stop
                    - stop_limit
                    - mit
                    - lit
                    - trailing_stop
                    - trailing_stop_limit
                    - relative
                    - marketonclose
                    - limitonclose
                    ibAlgoTypes:
                    - limit
                    - stop_limit
                    - lit
                    - trailing_stop_limit
                    - relative
                    - marketonclose
                    - limitonclose
                    fraqTypes:
                    - limit
                    - market
                    - stop
                    - stop_limit
                    - mit
                    - lit
                    - trailing_stop
                    - trailing_stop_limit
                    forceOrderPreview: false
                    cqtTypes:
                    - limit
                    - market
                    - stop
                    - stop_limit
                    - mit
                    - lit
                    - trailing_stop
                    - trailing_stop_limit
                    orderDefaults:
                      LMT:
                        LP: "198.22"
                    orderTypesOutside:
                    - limit
                    - stop_limit
                    - lit
                    - trailing_stop_limit
                    - relative
                    defaultSize: 100
                    cashSize: 0.0
                    sizeIncrement: 100
                    tifTypes:
                    - "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a"
                    - "GTC/o,a"
                    - "OPG/LIMIT,MARKET,a"
                    - "GTD/o,a"
                    - "DAY/o,a"
                    tifDefaults:
                      TIF: DAY
                      DEFAULT_ACCT: U1234567
                      SIZE: "100.00"
                      PMALGO: true
                    limitPrice: 198.22
                    stopprice: 198.22
                    orderOrigination: null
                    preview: true
                    displaySize: null
                    fraqInt: 4
                    cashCcy: USD
                    cashQtyIncr: 500
                    priceMagnifier: null
                    negativeCapable: false
                    incrementType: 1
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.01
                    hasSecondary: true
                    increment: 0.01
                    incrementDigits: 2
              schema:
                $ref: '#/components/schemas/contractRules'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Search Contract Rules
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/contract/{conid}/algos:
    get:
      description: Returns supported IB Algos for contract. A pre-flight request must
        be submitted before retrieving information
      parameters:
      - explode: false
        in: path
        name: conid
        required: true
        schema:
          description: Contract identifier for the requested contract of interest.
          type: string
        style: simple
      - explode: false
        in: query
        name: algos
        required: false
        schema:
          description: |
            List of algo ids delimited by “;” to filter by. Max of 8 algos ids can be specified. Case sensitive to algo id.
          enum:
          - Adaptive
          - Vwap
          type: string
        style: form
      - explode: false
        in: query
        name: addDescription
        required: false
        schema:
          default: "0"
          description: "Whether or not to add algo descriptions to response. Set to\
            \ 1 for yes, 0 for no."
          format: int32
          type: string
        style: form
      - explode: false
        in: query
        name: addParams
        required: false
        schema:
          default: "0"
          description: "Whether or not to show algo parameters. Set to 1 for yes,\
            \ 0 for no."
          format: int32
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    algos:
                    - name: Adaptive
                      id: Adaptive
                    - name: Arrival Price
                      id: ArrivalPx
                    - name: Close Price
                      id: ClosePx
                    - name: DarkIce
                      id: DarkIce
                    - name: Percentage of Volume
                      id: PctVol
                    - name: Price Variant Percentage of Volume
                      id: PctVolPx
                    - name: Size Variant Percentage of Volume
                      id: PctVolSz
                    - name: TWAP
                      id: Twap
                    - name: Time Variant Percentage of Volume
                      id: PctVolTm
                    - name: VWAP
                      id: Vwap
                success-with-additional-data:
                  value:
                    algos:
                    - name: Adaptive
                      id: Adaptive
                      parameters:
                      - guiRank: 1
                        defaultValue: Normal
                        name: Adaptive order priority/urgency
                        id: adaptivePriority
                        legalStrings:
                        - Urgent
                        - Normal
                        - Patient
                        required: "true"
                        valueClassName: String
                    - name: Arrival Price
                      id: ArrivalPx
                      parameters:
                      - guiRank: 3
                        defaultValue: Neutral
                        name: Urgency/Risk aversion
                        id: riskAversion
                        legalStrings:
                        - GetDone
                        - Aggressive
                        - Neutral
                        - Passive
                        required: "true"
                        valueClassName: String
                      - guiRank: 6
                        defaultValue: false
                        name: Allow trading past end time
                        id: allowPastEndTime
                        valueClassName: Boolean
                      - guiRank: 7
                        defaultValue: false
                        name: Attempt completion by EOD
                        id: forceCompletion
                        valueClassName: Boolean
                      - guiRank: 4
                        name: Start Time
                        description: Defaults to start of market trading
                        id: startTime
                        valueClassName: Time
                      - guiRank: 2
                        minValue: 0.01
                        maxValue: 50
                        name: Max Percentage
                        description: From 0.01 to 50.0
                        id: maxPctVol
                        required: "true"
                        valueClassName: Double
                      - guiRank: 5
                        name: End Time
                        description: Defaults to end of market trading
                        id: endTime
                        valueClassName: Time
              schema:
                $ref: '#/components/schemas/algosResponse'
          description: Returns a list of available algos and a description of their
            behavior.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Search Algo Params By Contract ID
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/contract/{conid}/info:
    get:
      description: Requests full contract details for the given conid.
      parameters:
      - explode: false
        in: path
        name: conid
        required: true
        schema:
          description: Contract identifier for the requested contract of interest.
          example: "265598"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                stk-contract-info:
                  value:
                    cfi_code: ""
                    symbol: IBM
                    cusip: null
                    expiry_full: null
                    con_id: 8314
                    maturity_date: null
                    industry: Computers
                    instrument_type: STK
                    trading_class: IBM
                    valid_exchanges: "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX"
                    allow_sell_long: false
                    is_zero_commission_security: false
                    local_symbol: IBM
                    contract_clarification_type: null
                    classifier: null
                    currency: USD
                    text: null
                    underlying_con_id: 0
                    r_t_h: true
                    multiplier: null
                    underlying_issuer: null
                    contract_month: null
                    company_name: INTL BUSINESS MACHINES CORP
                    smart_available: true
                    exchange: SMART
                    category: Computer Services
                opt-contract-info:
                  value:
                    cfi_code: OCXXXS
                    symbol: IBM
                    cusip: null
                    expiry_full: "20240315"
                    con_id: 685302909
                    maturity_date: "20240315"
                    instrument_type: OPT
                    trading_class: IBM
                    valid_exchanges: "SMART,AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,IBUSOPT"
                    allow_sell_long: false
                    is_zero_commission_security: false
                    local_symbol: IBM   240315C00187500
                    contract_clarification_type: null
                    classifier: null
                    currency: USD
                    text: MAR 15 '24 187.5 Call
                    underlying_con_id: 8314
                    r_t_h: false
                    multiplier: "100"
                    strike: "187.5"
                    right: CALL
                    underlying_issuer: null
                    contract_month: "202403"
                    company_name: INTL BUSINESS MACHINES CORP
                    smart_available: true
                    exchange: SMART
              schema:
                $ref: '#/components/schemas/contractInfo'
          description: Returns a list of available algos and a description of their
            behavior.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Contract Information By Contract ID
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/contract/{conid}/info-and-rules:
    get:
      description: Requests full contract details for the given conid.
      parameters:
      - explode: false
        in: path
        name: conid
        required: true
        schema:
          description: Contract identifier for the requested contract of interest.
          example: "265598"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                stk:
                  value:
                    cfi_code: ""
                    symbol: IBM
                    cusip: null
                    expiry_full: null
                    con_id: 8314
                    maturity_date: null
                    industry: Computers
                    instrument_type: STK
                    trading_class: IBM
                    valid_exchanges: "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX"
                    allow_sell_long: false
                    is_zero_commission_security: false
                    local_symbol: IBM
                    contract_clarification_type: null
                    classifier: null
                    currency: USD
                    text: null
                    underlying_con_id: 0
                    r_t_h: true
                    multiplier: null
                    underlying_issuer: null
                    contract_month: null
                    company_name: INTL BUSINESS MACHINES CORP
                    smart_available: true
                    exchange: SMART
                    category: Computer Services
                    rules:
                      algoEligible: true
                      overnightEligible: true
                      costReport: false
                      canTradeAcctIds:
                      - DUC10000
                      error: null
                      orderTypes:
                      - limit
                      - midprice
                      - market
                      - stop
                      - stop_limit
                      - mit
                      - lit
                      - trailing_stop
                      - trailing_stop_limit
                      - relative
                      - marketonclose
                      - limitonclose
                      ibAlgoTypes:
                      - limit
                      - stop_limit
                      - lit
                      - trailing_stop_limit
                      - relative
                      - marketonclose
                      - limitonclose
                      fraqTypes:
                      - limit
                      - market
                      - stop
                      - stop_limit
                      - mit
                      - lit
                      - trailing_stop
                      - trailing_stop_limit
                      forceOrderPreview: false
                      cqtTypes:
                      - limit
                      - market
                      - stop
                      - stop_limit
                      - mit
                      - lit
                      - trailing_stop
                      - trailing_stop_limit
                      orderDefaults:
                        MKT: {}
                      orderTypesOutside:
                      - limit
                      - stop_limit
                      - lit
                      - trailing_stop_limit
                      - relative
                      defaultSize: 100
                      cashSize: 0.0
                      sizeIncrement: 100
                      tifTypes:
                      - "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a"
                      - "GTC/o,a"
                      - "OPG/LIMIT,MARKET,a"
                      - "GTD/o,a"
                      - "DAY/o,a"
                      tifDefaults:
                        TIF: DAY
                        SIZE: "100.00"
                      limitPrice: 196.88
                      stopprice: 196.88
                      orderOrigination: null
                      preview: true
                      displaySize: null
                      fraqInt: 4
                      cashCcy: USD
                      cashQtyIncr: 500
                      priceMagnifier: null
                      negativeCapable: false
                      incrementType: 1
                      incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      hasSecondary: true
                      increment: 0.01
                      incrementDigits: 2
                option:
                  value:
                    cfi_code: OCXXXS
                    symbol: IBM
                    cusip: null
                    expiry_full: "20240315"
                    con_id: 685302909
                    maturity_date: "20240315"
                    instrument_type: OPT
                    trading_class: IBM
                    valid_exchanges: "SMART,AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,IBUSOPT"
                    allow_sell_long: false
                    is_zero_commission_security: false
                    local_symbol: IBM   240315C00187500
                    contract_clarification_type: null
                    classifier: null
                    currency: USD
                    text: MAR 15 '24 187.5 Call
                    underlying_con_id: 8314
                    r_t_h: false
                    multiplier: "100"
                    strike: "187.5"
                    right: CALL
                    underlying_issuer: null
                    contract_month: "202403"
                    company_name: INTL BUSINESS MACHINES CORP
                    smart_available: true
                    exchange: SMART
                    rules:
                      algoEligible: true
                      overnightEligible: false
                      costReport: false
                      canTradeAcctIds:
                      - DUC10000
                      error: null
                      orderTypes:
                      - limit
                      - market
                      - stop
                      - stop_limit
                      - mit
                      - lit
                      - trailing_stop
                      - trailing_stop_limit
                      - relative
                      ibAlgoTypes:
                      - limit
                      - stop_limit
                      - lit
                      - trailing_stop_limit
                      - relative
                      fraqTypes: []
                      forceOrderPreview: false
                      cqtTypes: []
                      orderDefaults:
                        LMT:
                          LP: empty
                      orderTypesOutside: []
                      defaultSize: 1
                      cashSize: 0.0
                      sizeIncrement: 1
                      tifTypes:
                      - "IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a"
                      - "GTC/o,a"
                      - "GTD/o,a"
                      - "DAY/o,a"
                      tifDefaults:
                        TIF: DAY
                        SIZE: "1.00"
                      limitPrice: null
                      stopprice: null
                      orderOrigination: null
                      preview: true
                      displaySize: null
                      fraqInt: 0
                      cashCcy: USD
                      cashQtyIncr: null
                      priceMagnifier: null
                      negativeCapable: false
                      incrementType: 1
                      incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      hasSecondary: true
                      increment: 0.01
                      incrementDigits: 2
              schema:
                $ref: '#/components/schemas/_iserver_contract__conid__info_and_rules_get_200_response'
          description: Returns a list of available algos and a description of their
            behavior.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Contract Information And Rules By Contract ID
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/currency/pairs:
    get:
      description: Obtains available currency pairs corresponding to the given target
        currency.
      parameters:
      - explode: false
        in: query
        name: currency
        required: true
        schema:
          description: Specify the target currency you would like to receive official
            pairs of.
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                USD:
                  value:
                    USD:
                    - symbol: USD.SGD
                      conid: 37928772
                      ccyPair: SGD
                    - symbol: USD.RON
                      conid: 38231133
                      ccyPair: RON
                    - symbol: USD.CZK
                      conid: 34838409
                      ccyPair: CZK
              schema:
                $ref: '#/components/schemas/currencyPairs'
          description: Returns a list of valid forex pairs for the given currency.
            The currency can apply as both the target or base currency.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/dynaccount:
    post:
      description: Set the active dynamic account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_dynaccount_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                successfully-set-account:
                  value:
                    set: true
                    acctId: U2234567
              schema:
                $ref: '#/components/schemas/setAccountResponse'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Set Dynamic Account
      tags:
      - Trading Accounts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/exchangerate:
    get:
      description: Obtains the exchange rates of the currency pair.
      parameters:
      - explode: false
        in: query
        name: target
        required: true
        schema:
          description: Specify the quote currency to request data for.
          example: EUR
          type: string
        style: form
      - explode: false
        in: query
        name: source
        required: true
        schema:
          description: Specify the base currency to request data for.
          example: USD
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                rate:
                  value:
                    rate: 0.91324199
              schema:
                $ref: '#/components/schemas/_iserver_exchangerate_get_200_response'
          description: Successful requests return the currency exchange rate of the
            target currency value divided by the source currency.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Currency Exchange Rate
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/marketdata/history:
    get:
      description: Request historical data for an instrument in the form of OHLC bars.
      parameters:
      - description: IB contract ID of the requested instrument.
        explode: false
        in: query
        name: conid
        required: true
        schema:
          example: "265598"
          format: int32
          type: string
        style: form
      - description: Exchange (or SMART) from which data is requested.
        explode: false
        in: query
        name: exchange
        required: false
        schema:
          example: NYSE
          type: string
        style: form
      - description: A time duration away from startTime into the future to be divided
          into bars of the specified width.
        explode: false
        in: query
        name: period
        required: true
        schema:
          example: 6d
          type: string
        style: form
      - description: The width of the bars into which the interval determined by period
          and startTime will be divided. It is not required that bar evenly divide
          period; partial bars can be returned.
        explode: false
        in: query
        name: bar
        required: true
        schema:
          example: 5mins
          type: string
        style: form
      - description: "A fixed UTC date-time reference point for the historical data\
          \ request, from which the specified period extends. Format is YYYYMMDD-hh:mm:ss.\
          \ If omitted, the current time is used, and direction must be omitted or\
          \ 1."
        explode: false
        in: query
        name: startTime
        required: false
        schema:
          $ref: '#/components/schemas/utcDateTime'
        style: form
      - description: Indicates whether data outside of regular trading hours should
          be included in response.
        explode: false
        in: query
        name: outsideRth
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                iserverHistorySuccessExample:
                  value:
                    serverid: "20477"
                    symbol: AAPL
                    text: APPLE INC
                    priceFactor: 100
                    startTime: 20230818-08:00:00
                    high: 17510/472117.45/0
                    low: 17170/472117.45/0
                    timePeriod: 1d
                    barLength: 86400
                    mdAvailability: RpB
                    outsideRth: false
                    tradingDayDuration: 1440
                    volumeFactor: 1
                    priceDisplayRule: 1
                    priceDisplayValue: "2"
                    chartPanStartTime: 20230821-13:30:00
                    direction: -1
                    negativeCapable: false
                    messageVersion: 2
                    travelTime: 48
                    data:
                    - t: 1692345600000
                      o: 173.4
                      c: 174.7
                      h: 175.1
                      l: 171.7
                      v: 472117.45
                    points: 1
                    mktDataDelay: 0
              schema:
                $ref: '#/components/schemas/iserverHistoryResponse'
          description: Historical data query successfully returned data.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Request Historical Data For An Instrument In The Form Of OHLC Bars.
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/marketdata/snapshot:
    get:
      description: |
        Get Market Data for the given conid(s). A pre-flight request must be made prior to ever receiving data. For some fields, it may take more than a few moments to receive information. See response fields for a list of available fields that can be request via fields argument. The endpoint /iserver/accounts must be called prior to /iserver/marketdata/snapshot. For derivative contracts the endpoint /iserver/secdef/search must be called first.
      parameters:
      - explode: false
        in: query
        name: conids
        required: true
        schema:
          description: |
            Contract identifier for the contract of interest. May provide a comma-separated series of contract identifiers.
          example: "265598"
          format: int32
          type: string
        style: form
      - explode: false
        in: query
        name: fields
        required: false
        schema:
          $ref: '#/components/schemas/mdFields'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'
          description: Successfully enabled or disabled your email notifications.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Live Market Data Snapshot
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/marketdata/unsubscribe:
    post:
      description: Instruct IServer to close its backend stream for the instrument
        when real-time snapshots are no longer needed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_marketdata_unsubscribe_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                marketdataUnsubscribeSuccessExample:
                  value:
                    success: true
              schema:
                $ref: '#/components/schemas/_iserver_marketdata_unsubscribe_post_200_response'
          description: Acknowledges a successful request
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Instruct IServer To Close Its Backend Stream For The Instrument.
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/marketdata/unsubscribeall:
    get:
      description: Instruct IServer to close all of its open backend data streams
        for all instruments.
      responses:
        "200":
          content:
            application/json:
              examples:
                marketdataUnsubscribeAllSuccessExample:
                  value:
                    unsubscribed: true
              schema:
                $ref: '#/components/schemas/_iserver_marketdata_unsubscribeall_get_200_response'
          description: Indicates a successful request to unsubscribe all streams.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Instruct IServer To Close All Of Its Open Backend Data Streams For
        All Instruments.
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/notification:
    post:
      description: Respond to a server prompt received via ntf webscoket message.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_notification_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Confirms successful reply to the server prompt.
                type: string
          description: Status of submitted prompt
      summary: Respond To A Server Prompt.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
  /iserver/questions/suppress:
    post:
      description: Suppress the specified order reply messages for the duration of
        the brokerage session.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_questions_suppress_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    status: submitted
              schema:
                $ref: '#/components/schemas/_iserver_questions_suppress_post_200_response'
          description: Request's status
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Suppress The Specified Order Reply Messages.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/questions/suppress/reset:
    post:
      description: Removes suppression of all order reply messages that were previously
        suppressed in the current brokerage session.
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    status: submitted
              schema:
                $ref: '#/components/schemas/_iserver_questions_suppress_reset_post_200_response'
          description: Request's status
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Removes Suppression Of All Order Reply Messages.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/reauthenticate:
    get:
      deprecated: true
      description: "When using the CP Gateway, this endpoint provides a way to reauthenticate\
        \ to the Brokerage system as long as there is a valid brokerage session."
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    message: triggered
              schema:
                $ref: '#/components/schemas/_iserver_reauthenticate_get_200_response'
          description: An array of objects detailing contract information.
      summary: Re-authenticate The Brokerage Session
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-accepts:
      - application/json
  /iserver/reply/{replyId}:
    post:
      description: Confirm an order reply message and continue with submission of
        order ticket.
      parameters:
      - description: "The UUID of the reply message to be confirmed, obtained from\
          \ an order submission response."
        explode: false
        in: path
        name: replyId
        required: true
        schema:
          example: 99097238-9824-4830-84ef-46979aa22593
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_reply__replyId__post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                orderSubmitSuccessExample:
                  value:
                  - order_id: "1370093239"
                    order_status: PreSubmitted
                    encrypt_message: "1"
                orderReplyMessageExample:
                  value:
                  - id: 99097238-9824-4830-84ef-46979aa22593
                    isSuppressed: false
                    message:
                    - |-
                      You are submitting an order without market data. We strongly recommend against this as it may result in erroneous and unexpected trades.
                      Are you sure you want to submit this order?
                    messageIds:
                    - o354
                orderSubmitErrorExample:
                  value:
                    error: 'Order not confirmed '
                orderReplyNotFoundExample:
                  value:
                    error: "reply id not found: '99097238-9824-4830-84ef-46979aa22593'"
                advancedOrderRejectPromptExample:
                  value:
                    orderId: 123456789
                    reqId: "22170"
                    dismissable: []
                    text: |-
                      If your order is not immediately executable, our systems may, depending on market conditions, reject your order if its limit price is more that the allowed amount away from the reference price at that time. If this happens, you will not receive a fill. This is a control designed to ensure that we comply with our regulatory obligations to avoid submitting disruptive orders to the marketplace.
                      Use the Price Management Algo?
                    options:
                    - Use on this order
                    - Always use
                    - Do not use
                    type: M
                    messageId: p12
                    prompt: true
              schema:
                $ref: '#/components/schemas/_iserver_reply__replyId__post_200_response'
          description: Status of reply
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Confirm An Order Reply Message.
      tags:
      - Trading Orders
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/scanner/params:
    get:
      description: Returns an xml file containing all available parameters to be sent
        for the Iserver scanner request.
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    scan_type_list:
                    - display_name: Top % Gainers
                      code: TOP_PERC_GAIN
                      instruments:
                      - STK
                      - ETF.EQ.US
                      - ETF.FI.US
                      - FUT.US
                      - IND.US
                      - STOCK.NA
                      - FUT.NA
                      - SSF.NA
                      - STOCK.EU
                      - FUT.EU
                      - IND.EU
                      - SSF.EU
                      - STOCK.ME
                      - STOCK.HK
                      - FUT.HK
                      - IND.HK
                      - SSF.HK
                    instrument_list:
                    - display_name: US Stocks
                      type: STK
                      filters:
                      - afterHoursChange
                      - afterHoursChangePerc
                      - avgOptVolume
                      - avgPriceTarget
                      - avgRating
                    filter_list:
                    - group: afterHoursChangeAbove
                      display_name: After-Hours Change Above
                      code: afterHoursChangeAbove
                      type: non-range
                    - group: stkTypes
                      display_name: Stock type
                      code: stkTypes
                      combo_values:
                      - default: true
                        vendor: null
                    location_tree:
                    - display_name: US Stocks
                      type: STK
                      locations:
                      - display_name: Listed/NASDAQ
                        type: STK.US.MAJOR
                        locations: []
                      - display_name: OTCMarkets
                        type: STK.US.MINOR
                        locations: []
                    - display_name: US Futures
                      type: FUT.US
                      locations:
                      - display_name: CME
                        type: FUT.CME
                      - display_name: CBOT
                        type: FUT.CBOT
                      - display_name: NYMEX
                        type: FUT.NYMEX
              schema:
                $ref: '#/components/schemas/iserverScannerParams'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Iserver Scanner Parameters
      tags:
      - Trading Scanner
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/scanner/run:
    post:
      description: Searches for contracts according to the filters specified in /iserver/scanner/params
        endpoint.
      requestBody:
        content:
          application/json:
            example:
              instrument: STK
              location: STK.US.MAJOR
              type: TOP_TRADE_COUNT
              filter:
              - code: priceAbove
                value: 5
            schema:
              $ref: '#/components/schemas/iserverScannerRunRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                top_trade_count:
                  value:
                    contracts:
                    - server_id: "0"
                      column_name: Trades
                      symbol: TSLA
                      conidex: "76792991"
                      con_id: 76792991
                      available_chart_periods: '#R|1'
                      company_name: TESLA INC
                      scan_data: 221.521K
                      contract_description_1: TSLA
                      listing_exchange: NASDAQ.NMS
                      sec_type: STK
                    - server_id: "1"
                      symbol: SPY
                      conidex: "756733"
                      con_id: 756733
                      available_chart_periods: '#R|1'
                      company_name: SPDR S&P 500 ETF TRUST
                      scan_data: 123.661K
                      contract_description_1: SPY
                      listing_exchange: ARCA
                      sec_type: STK
                    scan_data_column_name: Trades
              schema:
                $ref: '#/components/schemas/iserverScannerRunResponse'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Iserver Market Scanner
      tags:
      - Trading Scanner
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/secdef/bond-filters:
    get:
      description: "Request a list of filters relating to a given Bond issuerID. The\
        \ issuerId is retrieved from /iserver/secdef/search and can be used in /iserver/secdef/info?issuerId={issuerId}\
        \ for retrieving conIds."
      parameters:
      - explode: false
        in: query
        name: symbol
        required: true
        schema:
          description: This should always be set to “BOND”
          example: BOND
          type: string
        style: form
      - explode: false
        in: query
        name: issueId
        required: true
        schema:
          description: Specifies the issuerId value used to designate the bond issuer
            type.
          example: e1400715
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                bond-filter:
                  value:
                    bondFilters:
                    - displayText: Maturity Date
                      columnId: 27
                      options:
                      - text: Jan 2025
                        value: "202501"
                      - text: Dec 2028
                        value: "202812"
                    - displayText: Issue Date
                      columnId: 28
                      options:
                      - text: Sep 18 2014
                        value: "20140918"
                      - text: Apr 09 2015
                        value: "20150409"
                    - displayText: Coupon
                      columnId: 25
                      options:
                      - value: "1.301"
                      - value: "1.34"
                    - displayText: Currency
                      columnId: 5
                      options:
                      - value: EUR
                      - value: USD
              schema:
                $ref: '#/components/schemas/bondFiltersResponse'
          description: Successful requests return the currency exchange rate of the
            target currency value divided by the source currency.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Search Bond Filter Information
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/secdef/info:
    get:
      description: SecDef info
      parameters:
      - explode: false
        in: query
        name: conid
        required: false
        schema:
          description: Contract identifier of the underlying. May also pass the final
            derivative conid directly.
          example: "265598"
          type: string
        style: form
      - explode: false
        in: query
        name: sectype
        required: false
        schema:
          description: Security type of the requested contract of interest.
        style: form
      - explode: false
        in: query
        name: month
        required: false
        schema:
          description: Expiration month for the given derivative.
        style: form
      - explode: false
        in: query
        name: exchange
        required: false
        schema:
          description: Designate the exchange you wish to receive information for
            in relation to the contract.
        style: form
      - explode: false
        in: query
        name: strike
        required: false
        schema:
          description: Set the strike price for the requested contract details
        style: form
      - explode: false
        in: query
        name: right
        required: false
        schema:
          description: |
            Set the right for the given contract. * `C` - for Call options. * `P` - for Put options.
          enum:
          - C
          - P
          type: string
        style: form
      - explode: false
        in: query
        name: issuerId
        required: false
        schema:
          description: Set the issuerId for the given bond issuer type.
          example: “e1234567”
          type: string
        style: form
      - explode: false
        in: query
        name: filters
        required: false
        schema:
          description: comma separted list of additional filters. Applicable when
            SecTyp is BOND
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                infoBy-symbol-exchange-conid:
                  value:
                    conid: 8314
                    ticker: IBM
                    secType: STK
                    listingExchange: NYSE
                    exchange: SMART
                    companyName: INTL BUSINESS MACHINES CORP
                    currency: USD
                    validExchanges: "SMART,AMEX,NYSE,CBOE,PHLX,ISE,CHX,ARCA,NASDAQ,DRCTEDGE,BEX,BATS,EDGEA,BYX,NYSEDARK,NASDDARK,IEX,EDGX,FOXRIVER,PEARL,NYSENAT,IEXMID,JANELP,IMCLP,LTSE,MEMX,JUMPLP,OLDMCLP,RBCCMALP,IBEOS,GSLP,BLUEOCEAN,OVERNIGHT,JANEMID,G1XLP,PSX"
                    priceRendering: null
                    maturityDate: null
                    right: '?'
                    strike: 0.0
              schema:
                $ref: '#/components/schemas/secDefInfoResponse'
          description: Successful response containing a contract's security definition.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: SecDef Info
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/secdef/search:
    get:
      description: Returns a list of contracts based on the search symbol provided
        as a query param.
      parameters:
      - explode: false
        in: query
        name: symbol
        required: false
        schema:
          description: "The ticker symbol, bond issuer type, or company name of the\
            \ equity you are looking to trade."
          example: AAPL
          type: string
        style: form
      - description: |
          Available underlying security types:
            * `STK` - Represents an underlying as a Stock security type.
            * `IND` - Represents an underlying as an Index security type.
            * `BOND` - Represents an underlying as a Bond security type.
        explode: false
        in: query
        name: secType
        required: false
        schema:
          default: STK
          enum:
          - STK
          - IND
          - BOND
          type: string
        style: form
      - explode: false
        in: query
        name: name
        required: false
        schema:
          description: Denotes if the symbol value is the ticker symbol or part of
            the company's name.
          type: boolean
        style: form
      - explode: false
        in: query
        name: more
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: query
        name: fund
        required: false
        schema:
          description: fund search
          type: boolean
        style: form
      - explode: false
        in: query
        name: fundFamilyConidEx
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: query
        name: pattern
        required: false
        schema:
          description: pattern search
          type: boolean
        style: form
      - explode: false
        in: query
        name: referrer
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                found:
                  value:
                  - conid: "8314"
                    companyHeader: INTL BUSINESS MACHINES CORP - NYSE
                    companyName: INTL BUSINESS MACHINES CORP
                    symbol: IBM
                    description: NYSE
                    restricted: null
                    fop: null
                    opt: 20240315;20240322;20240328;20240405;20240412;20240419;20240426;20240517;20240621;20240719;20240920;20241018;20250117;20250620;20260116
                    war: 20240208;20240213;20240214;20240215;20240216;20240222;20240226;20240227;20240228;20240229;20240301;20240304;20240305;20240306;20240307;20240308;20240311;20240312;20240313;20240314;20240315;20240416;20240418;20240514;20240516;20240618;20240619;20240620;20240621;20240718;20240917;20240918;20240919;20240920;20241017;20241217;20241218;20241219;20241220;20250114;20250115;20250116;20250117;20250319;20250320;20250617;20250618;20250619;20250620;20250918;20251216;20251218;20260113;20260115
                    sections:
                    - secType: STK
                    - secType: OPT
                      months: MAR24;APR24;MAY24;JUN24;JUL24;SEP24;OCT24;JAN25;JUN25;JAN26
                      exchange: SMART;AMEX;BATS;BOX;CBOE;CBOE2;EDGX;EMERALD;GEMINI;IBUSOPT;ISE;MEMX;MERCURY;MIAX;NASDAQBX;NASDAQOM;PEARL;PHLX;PSE
                    - secType: WAR
                      months: FEB24;MAR24;APR24;MAY24;JUN24;JUL24;SEP24;OCT24;DEC24;JAN25;MAR25;JUN25;SEP25;DEC25;JAN26
                      exchange: EBS;FWB;GETTEX;SBF;SWB
                    - secType: IOPT
                    - secType: CFD
                      exchange: SMART
                      conid: "118239202"
                    - secType: BAG
                  - conid: "41645598"
                    companyHeader: INTL BUSINESS MACHINES CORP - LSE
                    companyName: INTL BUSINESS MACHINES CORP
                    symbol: IBM
                    description: LSE
                    restricted: null
                    fop: null
                    opt: null
                    war: null
                    sections:
                    - secType: STK
                  - issuers:
                    - id: e5499005
                      name: IBM International Capital Pte Ltd
                    - id: e1580374
                      name: IBM-CALL
                    - id: e1400789
                      name: International Business Machines Corp
                    - id: e1658116
                      name: Truven Health Analytics Inc
                    bondid: 5
                    conid: "2147483647"
                    companyHeader: Corporate Fixed Income
                    companyName: null
                    symbol: null
                    description: null
                    restricted: null
                    fop: null
                    opt: null
                    war: null
                    sections:
                    - secType: BOND
              schema:
                $ref: '#/components/schemas/secdefSearchResponse'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Returns A List Of Contracts Based On Symbol.
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    post:
      description: Returns a list of contracts based on the search symbol provided
        as a query param.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_secdef_search_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secdefSearchResponse'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Returns A List Of Contracts Based On Symbol.
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/secdef/strikes:
    get:
      description: strikes
      parameters:
      - explode: false
        in: query
        name: conid
        required: true
        schema:
          description: Contract identifier of the underlying. May also pass the final
            derivative conid directly.
          example: "265598"
          type: string
        style: form
      - explode: false
        in: query
        name: sectype
        required: true
        schema:
          description: Security type of the requested contract of interest.
          example: OPT
          type: string
        style: form
      - explode: false
        in: query
        name: month
        required: true
        schema:
          description: Expiration month for the given derivative.
          example: JAN24
          type: string
        style: form
      - explode: false
        in: query
        name: exchange
        required: false
        schema:
          default: SMART
          description: Exchange from which derivatives should be retrieved from.
          example: NASDAQ
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                strikes:
                  value:
                    call:
                    - 70.0
                    - 75.0
                    - 80.0
                    - 85.0
                    - 90.0
                    - 95.0
                    - 100.0
                    put:
                    - 70.0
                    - 75.0
                    - 80.0
                    - 85.0
                    - 90.0
                    - 95.0
                    - 100.0
              schema:
                $ref: '#/components/schemas/_iserver_secdef_strikes_get_200_response'
          description: Successful response containing a contract's security definition.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Strikes
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/watchlist:
    delete:
      description: Delete a specified watchlist from the username's settings.
      parameters:
      - description: Watchlist ID of the watchlist to be deleted.
        explode: false
        in: query
        name: id
        required: true
        schema:
          example: "1234"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                watchlistDeleteSuccessExample:
                  value:
                    data:
                      deleted: "1234"
                    action: context
                    MID: "2"
              schema:
                $ref: '#/components/schemas/watchlistDeleteSuccess'
          description: Successful deletion of specified watchlist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Delete A Specified Watchlist From The Username's Settings.
      tags:
      - Trading Watchlists
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    get:
      description: Retrieve details of a single watchlist stored in the username's
        settings.
      parameters:
      - description: Watchlist ID of the requested watchlist.
        explode: false
        in: query
        name: id
        required: true
        schema:
          example: "1234"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                singleWatchlistExample:
                  value:
                    id: "1234"
                    hash: "1234987651621"
                    name: Test Watchlist
                    readOnly: false
                    instruments:
                    - ST: STK
                      C: "8314"
                      conid: 8314
                      name: INTL BUSINESS MACHINES CORP
                      fullName: IBM
                      assetClass: STK
                      ticker: IBM
                      chineseName: ""
              schema:
                $ref: '#/components/schemas/singleWatchlist'
          description: Successful deletion of specified watchlist.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Retrieve Details Of A Single Watchlist Stored In The Username's Settings.
      tags:
      - Trading Watchlists
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
    post:
      description: Create a named watchlist by submitting a set of conids.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_iserver_watchlist_post_request'
        description: Watchlist contents.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_iserver_watchlist_post_200_response'
          description: Watchlist creation successful.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Create A Watchlist To Monitor A Set Of Instruments.
      tags:
      - Trading Watchlists
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /iserver/watchlists:
    get:
      description: Retrieve all saved watchlists stored on IB backend for the username
        in use in the current Web API session.
      parameters:
      - description: "Can only be used with value USER_WATCHLIST, which returns only\
          \ user-created watchlists and excludes those created by IB."
        explode: false
        in: query
        name: SC
        required: false
        schema:
          enum:
          - USER_WATCHLIST
          example: USER_WATCHLIST
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                watchlistDataExample:
                  value:
                    data:
                      scanners_only: false
                      show_scanners: false
                      bulk_delete: false
                      user_lists:
                      - is_open: false
                        read_only: false
                        name: Test Watchlist
                        modified: 1702581306241
                        id: "1234"
                        type: watchlist
                    action: content
                    MID: "2"
              schema:
                $ref: '#/components/schemas/watchlistsResponse'
          description: Historical data query successfully returned data.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Retrieve All Saved Watchlists Stored On IB Backend For The Username
        In Use In The Current Web API Session.
      tags:
      - Trading Watchlists
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /logout:
    post:
      description: Logs the user out of the gateway session. Any further activity
        requires re-authentication.
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    status: true
              schema:
                $ref: '#/components/schemas/_logout_post_200_response'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
      summary: Logout Of The Current Session.
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /md/regsnapshot:
    get:
      description: Request a regulatory snapshot for an instrument.
      parameters:
      - description: An IB contract ID.
        explode: false
        in: query
        name: conid
        required: true
        schema:
          example: "265598"
          format: int32
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                regsnapshotDataExample:
                  value:
                    conid: 265598
                    conidEx: "265598"
                    sizeMinTick: 1.0
                    BboExchange: 9c
                    HasDelayed: false
                    "84": "174.58"
                    "86": "174.59"
                    "88": 1
                    "85": 3
                    BestBidExch: 512
                    BestAskExch: 512
                    "31": "174.59"
                    "7059": 2
                    LastExch: 8
                    "7057": Q
                    "7068": Q
                    "7058": D
              schema:
                $ref: '#/components/schemas/regsnapshotData'
          description: Market Data reg. snapshot
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Request A Regulatory Snapshot For An Instrument.
      tags:
      - Trading Market Data
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /oauth/access_token:
    post:
      description: Request an access token for the IB username that has granted authorization
        to the consumer.
      parameters:
      - description: OAuth 1.0a authorization request header for request to /access_token
          endpoint.
        explode: false
        in: header
        name: Authorization
        required: false
        schema:
          example: "OAuth oauth_verifier=\"1e1dc5666e87ca5a18e0\",oauth_token=\"e0d75b4c5c1d2c0f2af7\"\
            ,oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"v235...456h\",oauth_signature=\"\
            af1%252...0nd2\",oauth_signature_method=\"RSA-SHA256\",oauth_timestamp=\"\
            1714489450\",realm=\"test_realm\""
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Success:
                  value:
                    is_paper: true
                    oauth_token: a1b2c3d4e5f6a7b8c9d0
                    oauth_token_secret: coPZc+YOyFy7IdMg6is+etf9HASi3Um3SIhZvILcaifG6zhzZygYafYZx4XTFsrefRV/qrsy4sMAMwyPVp07VgkfQJPJkxYA7Sjhwz/Q76vuVN2YZNsRirNyL63Q3t+EHkjKA5HJEFY2PiIgqO4EWZ4etZUl3iZjCStiahhD+BNv7zgrlxS0bB4lL4vKw9AGcUiUnIQrqzTGJPj0/P2Zc3fMqCbXVWRcoYRcwUkk9ZYtMaIwPPVgvJ0c76rle5O5m4R4ZoFgrjfXpNiXC1F8MRS0fc7T6pgyyMvV+vI2C9XZbl7cNIEuCvtz3XYLNlUi+svyeZJh4RzjB824qH/fJQ==
              schema:
                $ref: '#/components/schemas/_oauth_access_token_post_200_response'
          description: Success response with permanent OAuth access token
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Request An Access Token For The IB Username That Has Granted Authorization
        To The Consumer.
      tags:
      - Trading OAuth 1.0a
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /oauth/live_session_token:
    post:
      description: Generate a Live Session Token shared secret and gain access to
        Web API.
      parameters:
      - description: OAuth 1.0a authorization request header for request to /live_session_token
          endpoint.
        explode: false
        in: header
        name: Authorization
        required: false
        schema:
          example: "OAuth diffie_hellman_challenge=\"b393...g6f3\",oauth_token=\"\
            56786fc07bcbabc4584\",oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"v235...456h\"\
            ,oauth_signature=\"af1%252...0nd2\",oauth_signature_method=\"RSA-SHA256\"\
            ,oauth_timestamp=\"1714489460\",realm=\"test_realm\""
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Success:
                  value:
                    diffie_hellman_response: 74d222b7c3c0916eb3c7e60ecec937cd4f531aab5ea5698ebd754feeb39a9d7fe04c2887b5e11d8a8e4176c2eee7ddd42016e57c7a98cfbb9a3282c5247f7d4a9b8f544a34fac4d6334065b55d6a2e73e390175cfb94e80281443e555030c576d1db409bf96870dab20581bc01cdf28489778f20c714e7ad39af60c476cf2207a119df3af82bbefcdad7749fa5b4ae6e93169ec14f66ff3220cf3156487ca33932284b0a09af14f05a75269ab243362ff4eabb2e2a57db0d7911ca549f24affa1f92f04908fd9a2349cefb0f9326aca65fc144847ab837fcbd1635b1aa84b4509198e349fad87c2caf6744cb94be2c5c1c7ef9f08c44e85ded45ebeefa248dc8
                    live_session_token_signature: 712549e22ba937ab10bc8d571bd3a9c20c43d7cb
                    live_session_token_expiration: 1714669716258
              schema:
                $ref: '#/components/schemas/_oauth_live_session_token_post_200_response'
          description: Success response with Diffie-Hellman challenge and Signature
            value
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Generate A Live Session Token Shared Secret And Gain Access To Web
        API.
      tags:
      - Trading OAuth 1.0a
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /oauth/request_token:
    post:
      description: Request a temporary token as a third party to begin the OAuth 1.0a
        authorization workflow.
      parameters:
      - description: OAuth 1.0a authorization request header for request to /request_token
          endpoint.
        example: "OAuth oauth_callback=\"oob\",oauth_consumer_key=\"TESTCONS\",oauth_nonce=\"\
          b249...8f57\",oauth_signature=\"41Sx%252...ZYZ2\",oauth_signature_method=\"\
          RSA-SHA256\",oauth_timestamp=\"1714489440\",realm=\"test_realm\""
        explode: false
        in: header
        name: Authorization
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Success:
                  value:
                    oauth_token: e0d75b4c5c1d2c0f2af7
              schema:
                $ref: '#/components/schemas/_oauth_request_token_post_200_response'
          description: Success response with temporary OAuth access token
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Request A Temporary Token As A Third Party To Begin The OAuth 1.0a
        Authorization Workflow.
      tags:
      - Trading OAuth 1.0a
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /oauth2/api/v1/token:
    post:
      description: Generate OAuth 2.0 access tokens based on request parameters.
      operationId: generateToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Token Response:
                  description: Token Response
                  value:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjM0MDk5YjQxYThkZTY1ZTJmNTAwMzQ3MmQ0M2Q5ZDBhZjI2MWIzN2IifQ.eyJpc3MiOiIvdG9rZW4iLCJzdWIiOiJwcm9kdGVzdGVyIiwiZXhwIjoxNzA5NzczMjgyLCJpYXQiOjE3MDk2ODY4ODIsInNjb3BlIjoiZWNoby5yZWFkIGVjaG8ud3JpdGUiLCJjc2lkIjoicHJvZHRlc3RlciIsImFjY291bnRJZCI6IlU0NjM3NyJ9.HDfltwI2xOYYnCRgjefujhU2h5lcQCvuvtNuCVSeq26IydAvMiv_QccmcBvsMSHKYjH6nvA1r_5f7R3Jsc46_d1YMArcFfE33mj_qj9GYml-B_8634vLdD104abB-DU2J4a7yW1YwN61hYwPGWueps_UsnKnxf-Iaj6ELxtPBRl4NOEC8vJZ9nfhL81t4L5N_f-skXbpcLcArZaBtxqXvI1z4ClJd9L1-9pJ_3DPUp0s3VHnDCnx2wBkLY_pPEcnP52Ms_gppSHLXn_x5OLL82kbxWSlhbX9fvogj0AtHJDvhWNwTFk8Az57MSsPBAZMf4rsx-LY1ZK9bNSlQNb2W-BuqotDwwPwIZNB9en_6p0KoJFFEQu0dTSJAxGjfMeADQc6ZduHFzyNeOTpnh2oPfRK7JrsLGuGvbQ_M7taKEiDV49gpYzjJqVtfuNDAzLARLbj8WPGcUbckSF4pJH5Ipm1FbYhp0DzEgo5VEjZlQU5ChlQGakF4nf9NEIz5Aed
                    token_type: Bearer
                    scope: echo.read echo.write
                    expires_in: 86399
              schema:
                $ref: '#/components/schemas/TokenResponse'
          description: Returns a token response.
        "400":
          content:
            application/problem+json:
              examples:
                Bad request:
                  description: Bad request
                  value:
                    type: /simple
                    title: Bad Request
                    status: 400
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: "Returns a [Problem detail](https://datatracker.ietf.org/doc/html/rfc9457)\
            \ instance representing a bad request."
        "500":
          content:
            application/problem+json:
              examples:
                Internal Server Error:
                  description: Internal Server Error
                  value:
                    type: /simple
                    title: Internal Server Error
                    status: 500
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
          description: "Returns a [Problem detail](https://datatracker.ietf.org/doc/html/rfc9457)\
            \ instance representing an internal server error."
      summary: Create Access Token
      tags:
      - Authorization Token
      x-ib-public: true
      x-content-type: application/x-www-form-urlencoded
      x-accepts:
      - application/json
      - application/problem+json
  /pa/allperiods:
    post:
      description: "Returns the performance (MTM) for the given accounts, if more\
        \ than one account is passed, the result is consolidated."
      parameters:
      - explode: false
        in: path
        name: param0
        required: false
        schema:
          description: "only one account. If defined, accounts passed in request body\
            \ ignored"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_pa_allperiods_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                allperiods:
                  value:
                    currencyType: base
                    rc: 0
                    view:
                    - DU123456
                    nd: 368
                    DU123456:
                      "1D":
                        nav:
                        - 1390987.0689
                        cps:
                        - 0.0072
                        freq: D
                        dates:
                        - "20240426"
                        startNAV:
                          date: "20240425"
                          val: 1381022.2557
                      lastSuccessfulUpdate: 2024-04-26 16:46:42
                      start: "20230426"
                      YTD:
                        nav:
                        - 1282878.735
                        - 1276778.8381
                        - 1266973.7093
                        - 1269544.0876
                        - 1275904.7178
                        - 1286495.4108
                        - 1278482.2701
                        - 1287268.6865
                        - 1284200.338
                        - 1288214.2064
                        - 1287819.9539
                        - 1277639.6851
                        - 1270827.3223
                        - 1278725.5502
                        - 1300324.9852
                        - 1306323.4495
                        - 1312781.9571
                        - 1318531.0656
                        - 1350033.0327
                        - 1345384.5102
                        - 1353633.9766
                        - 1363482.1133
                        - 1333156.3611
                        - 1344519.4922
                        - 1376661.532
                        - 1360247.6463
                        - 1361492.1636
                        - 1376329.6731
                        - 1375083.087
                        - 1385410.1315
                        - 1389274.5528
                        - 1357400.3407
                        - 1375326.833
                        - 1401881.315
                        - 1392768.8561
                        - 1392637.734
                        - 1380291.0032
                        - 1371910.9717
                        - 1404606.7185
                        - 1409284.2989
                        - 1400208.3513
                        - 1411555.9833
                        - 1409076.0531
                        - 1416808.8027
                        - 1436450.7862
                        - 1447601.0431
                        - 1435855.0533
                        - 1450679.9318
                        - 1470146.1652
                        - 1461837.0628
                        - 1449412.6474
                        - 1474938.4628
                        - 1469694.3184
                        - 1454799.0419
                        - 1436627.4898
                        - 1454960.951
                        - 1463507.2659
                        - 1484057.3961
                        - 1492102.1686
                        - 1482038.2329
                        - 1470235.8767
                        - 1470819.2095
                        - 1492582.8971
                        - 1491455.1209
                        - 1491508.085
                        - 1482332.7129
                        - 1474991.5595
                        - 1483721.5119
                        - 1464972.9299
                        - 1484912.3583
                        - 1487204.0587
                        - 1492210.8925
                        - 1458260.3853
                        - 1462342.5595
                        - 1431112.3911
                        - 1407166.8369
                        - 1391683.8539
                        - 1392370.552
                        - 1393526.1221
                        - 1387801.1381
                        - 1405559.8818
                        - 1436989.688
                        - 1437102.1473
                        - 1381022.2557
                        - 1390987.0689
                        cps:
                        - 0
                        - -0.0047
                        - -0.0124
                        - -0.0104
                        - -0.0054
                        - 0.0028
                        - -0.0034
                        - 0.0034
                        - 0.0011
                        - 0.0042
                        - 0.0039
                        - -0.0041
                        - -0.0094
                        - -0.0032
                        - 0.0136
                        - 0.0183
                        - 0.0233
                        - 0.0278
                        - 0.0524
                        - 0.0487
                        - 0.0552
                        - 0.0629
                        - 0.0392
                        - 0.0481
                        - 0.0731
                        - 0.0603
                        - 0.0613
                        - 0.0729
                        - 0.0719
                        - 0.0799
                        - 0.083
                        - 0.0581
                        - 0.0721
                        - 0.0928
                        - 0.0857
                        - 0.0856
                        - 0.076
                        - 0.0694
                        - 0.0949
                        - 0.0986
                        - 0.0915
                        - 0.1003
                        - 0.0984
                        - 0.1044
                        - 0.1197
                        - 0.1284
                        - 0.1193
                        - 0.1308
                        - 0.146
                        - 0.1395
                        - 0.1298
                        - 0.1497
                        - 0.1456
                        - 0.134
                        - 0.1199
                        - 0.1342
                        - 0.1408
                        - 0.1568
                        - 0.1631
                        - 0.1553
                        - 0.1461
                        - 0.1465
                        - 0.1635
                        - 0.1626
                        - 0.1627
                        - 0.1555
                        - 0.1498
                        - 0.1566
                        - 0.142
                        - 0.1575
                        - 0.1593
                        - 0.1632
                        - 0.1367
                        - 0.1399
                        - 0.1156
                        - 0.0969
                        - 0.0848
                        - 0.0854
                        - 0.0863
                        - 0.0818
                        - 0.0957
                        - 0.1202
                        - 0.1202
                        - 0.0765
                        - 0.0843
                        freq: D
                        dates:
                        - "20240101"
                        - "20240102"
                        - "20240103"
                        - "20240104"
                        - "20240105"
                        - "20240108"
                        - "20240109"
                        - "20240110"
                        - "20240111"
                        - "20240112"
                        - "20240115"
                        - "20240116"
                        - "20240117"
                        - "20240118"
                        - "20240119"
                        - "20240122"
                        - "20240123"
                        - "20240124"
                        - "20240125"
                        - "20240126"
                        - "20240129"
                        - "20240130"
                        - "20240131"
                        - "20240201"
                        - "20240202"
                        - "20240205"
                        - "20240206"
                        - "20240207"
                        - "20240208"
                        - "20240209"
                        - "20240212"
                        - "20240213"
                        - "20240214"
                        - "20240215"
                        - "20240216"
                        - "20240219"
                        - "20240220"
                        - "20240221"
                        - "20240222"
                        - "20240223"
                        - "20240226"
                        - "20240227"
                        - "20240228"
                        - "20240229"
                        - "20240301"
                        - "20240304"
                        - "20240305"
                        - "20240306"
                        - "20240307"
                        - "20240308"
                        - "20240311"
                        - "20240312"
                        - "20240313"
                        - "20240314"
                        - "20240315"
                        - "20240318"
                        - "20240319"
                        - "20240320"
                        - "20240321"
                        - "20240322"
                        - "20240325"
                        - "20240326"
                        - "20240327"
                        - "20240328"
                        - "20240329"
                        - "20240401"
                        - "20240402"
                        - "20240403"
                        - "20240404"
                        - "20240405"
                        - "20240408"
                        - "20240409"
                        - "20240410"
                        - "20240411"
                        - "20240412"
                        - "20240415"
                        - "20240416"
                        - "20240417"
                        - "20240418"
                        - "20240419"
                        - "20240422"
                        - "20240423"
                        - "20240424"
                        - "20240425"
                        - "20240426"
                        startNAV:
                          date: "20231229"
                          val: 1282850.7632
                      "1Y":
                        nav:
                        - 916213.1573
                        - 947269.6089
                        - 957495.9273
                        - 955827.7745
                        - 945030.5846
                        - 937034.669
                        - 928754.0554
                        - 966711.5611
                        - 967389.5776
                        - 958171.7378
                        - 968999.679
                        - 970048.1735
                        - 963499.6734
                        - 965791.2424
                        - 963532.7739
                        - 981634.443
                        - 1005143.7157
                        - 1002358.3303
                        - 1000701.6307
                        - 966850.2441
                        - 949826.3976
                        - 979748.679
                        - 1020801.2545
                        - 1020810.7858
                        - 1027351.0593
                        - 1013631.0401
                        - 1043841.252
                        - 1079472.9361
                        - 1072348.7909
                        - 1076122.1442
                        - 1057999.0553
                        - 1081493.9119
                        - 1086998.9023
                        - 1119712.8525
                        - 1135057.1863
                        - 1140719.4231
                        - 1175913.8798
                        - 1173456.2771
                        - 1173458.3751
                        - 1170939.8329
                        - 1157357.8554
                        - 1174615.5054
                        - 1161957.1168
                        - 1146875.9304
                        - 1172947.5129
                        - 1176243.4819
                        - 1180671.7579
                        - 1209491.0023
                        - 1208051.9185
                        - 1208018.29
                        - 1203813.7206
                        - 1194572.2962
                        - 1187083.1646
                        - 1183015.751
                        - 1190356.9033
                        - 1206352.2287
                        - 1222304.6242
                        - 1221731.1008
                        - 1236119.3763
                        - 1244943.4148
                        - 1248331.8783
                        - 1229579.7033
                        - 1225350.3017
                        - 1232537.895
                        - 1240478.2895
                        - 1243215.1302
                        - 1234941.7912
                        - 1258764.1477
                        - 1259517.4519
                        - 1252954.6541
                        - 1219155.4535
                        - 1211872.7998
                        - 1178622.2902
                        - 1184791.4229
                        - 1177239.8994
                        - 1156844.7885
                        - 1160055.5323
                        - 1155551.647
                        - 1170445.4699
                        - 1147560.6035
                        - 1130397.7584
                        - 1108620.771
                        - 1108331.883
                        - 1128641.2025
                        - 1126759.2631
                        - 1156201.1981
                        - 1120833.8567
                        - 1136963.447
                        - 1152072.6413
                        - 1186372.6307
                        - 1199291.2264
                        - 1200058.9789
                        - 1204681.1211
                        - 1204749.0158
                        - 1199946.698
                        - 1170716.1714
                        - 1148620.0575
                        - 1154500.6274
                        - 1175364.1554
                        - 1158630.8893
                        - 1157174.688
                        - 1176862.6911
                        - 1149027.5087
                        - 1156210.7572
                        - 1156781.9906
                        - 1143748.405
                        - 1124417.1871
                        - 1118011.7568
                        - 1119608.026
                        - 1102337.1466
                        - 1104619.9248
                        - 1111157.2948
                        - 1104546.2216
                        - 1100860.507
                        - 1082379.2313
                        - 1090984.4347
                        - 1093382.3395
                        - 1105517.8442
                        - 1112047.3941
                        - 1124779.1628
                        - 1131944.9771
                        - 1122238.3452
                        - 1109917.279
                        - 1121941.1344
                        - 1130931.4126
                        - 1115692.7848
                        - 1095936.2795
                        - 1078620.0409
                        - 1071061.0639
                        - 1075861.9248
                        - 1062641.5816
                        - 1066812.1892
                        - 1057138.7199
                        - 1072201.8379
                        - 1083974.653
                        - 1094762.4493
                        - 1120068.6249
                        - 1136226.7833
                        - 1139142.0391
                        - 1139870.183
                        - 1136408.8642
                        - 1127229.6653
                        - 1145467.8808
                        - 1143660.0272
                        - 1174911.4923
                        - 1182041.9386
                        - 1183048.2116
                        - 1188240.3654
                        - 1196808.5753
                        - 1190714.2398
                        - 1195971.9157
                        - 1196067.5419
                        - 1196993.1964
                        - 1193621.4641
                        - 1194038.3211
                        - 1200440.7278
                        - 1205623.1522
                        - 1218027.8577
                        - 1212531.0881
                        - 1209843.2572
                        - 1205483.0953
                        - 1214837.3879
                        - 1224968.307
                        - 1226119.552
                        - 1231722.1001
                        - 1250246.4796
                        - 1269077.6522
                        - 1261806.0171
                        - 1270012.6578
                        - 1275175.518
                        - 1259197.468
                        - 1269869.5619
                        - 1275315.2064
                        - 1275303.0074
                        - 1284481.1929
                        - 1286754.053
                        - 1288020.332
                        - 1282850.7632
                        - 1282878.735
                        - 1276778.8381
                        - 1266973.7093
                        - 1269544.0876
                        - 1275904.7178
                        - 1286495.4108
                        - 1278482.2701
                        - 1287268.6865
                        - 1284200.338
                        - 1288214.2064
                        - 1287819.9539
                        - 1277639.6851
                        - 1270827.3223
                        - 1278725.5502
                        - 1300324.9852
                        - 1306323.4495
                        - 1312781.9571
                        - 1318531.0656
                        - 1350033.0327
                        - 1345384.5102
                        - 1353633.9766
                        - 1363482.1133
                        - 1333156.3611
                        - 1344519.4922
                        - 1376661.532
                        - 1360247.6463
                        - 1361492.1636
                        - 1376329.6731
                        - 1375083.087
                        - 1385410.1315
                        - 1389274.5528
                        - 1357400.3407
                        - 1375326.833
                        - 1401881.315
                        - 1392768.8561
                        - 1392637.734
                        - 1380291.0032
                        - 1371910.9717
                        - 1404606.7185
                        - 1409284.2989
                        - 1400208.3513
                        - 1411555.9833
                        - 1409076.0531
                        - 1416808.8027
                        - 1436450.7862
                        - 1447601.0431
                        - 1435855.0533
                        - 1450679.9318
                        - 1470146.1652
                        - 1461837.0628
                        - 1449412.6474
                        - 1474938.4628
                        - 1469694.3184
                        - 1454799.0419
                        - 1436627.4898
                        - 1454960.951
                        - 1463507.2659
                        - 1484057.3961
                        - 1492102.1686
                        - 1482038.2329
                        - 1470235.8767
                        - 1470819.2095
                        - 1492582.8971
                        - 1491455.1209
                        - 1491508.085
                        - 1482332.7129
                        - 1474991.5595
                        - 1483721.5119
                        - 1464972.9299
                        - 1484912.3583
                        - 1487204.0587
                        - 1492210.8925
                        - 1458260.3853
                        - 1462342.5595
                        - 1431112.3911
                        - 1407166.8369
                        - 1391683.8539
                        - 1392370.552
                        - 1393526.1221
                        - 1387801.1381
                        - 1405559.8818
                        - 1436989.688
                        - 1437102.1473
                        - 1381022.2557
                        - 1390987.0689
                        cps:
                        - 9.0E-4
                        - 0.0349
                        - 0.046
                        - 0.0442
                        - 0.0324
                        - 0.0237
                        - 0.0146
                        - 0.0561
                        - 0.0569
                        - 0.0468
                        - 0.0586
                        - 0.0598
                        - 0.0526
                        - 0.0551
                        - 0.0526
                        - 0.0724
                        - 0.0981
                        - 0.0951
                        - 0.0933
                        - 0.0563
                        - 0.0377
                        - 0.0704
                        - 0.1152
                        - 0.1152
                        - 0.1224
                        - 0.1074
                        - 0.1404
                        - 0.1793
                        - 0.1715
                        - 0.1756
                        - 0.1558
                        - 0.1815
                        - 0.1875
                        - 0.2233
                        - 0.24
                        - 0.2462
                        - 0.2847
                        - 0.282
                        - 0.282
                        - 0.2792
                        - 0.2644
                        - 0.2832
                        - 0.2694
                        - 0.2529
                        - 0.2814
                        - 0.285
                        - 0.2899
                        - 0.3213
                        - 0.3198
                        - 0.3197
                        - 0.3151
                        - 0.3051
                        - 0.2969
                        - 0.2924
                        - 0.3004
                        - 0.3179
                        - 0.3353
                        - 0.3347
                        - 0.3504
                        - 0.3601
                        - 0.3638
                        - 0.3433
                        - 0.3387
                        - 0.3465
                        - 0.3552
                        - 0.3582
                        - 0.3492
                        - 0.3752
                        - 0.376
                        - 0.3688
                        - 0.3319
                        - 0.324
                        - 0.2876
                        - 0.2944
                        - 0.2861
                        - 0.2638
                        - 0.2673
                        - 0.2624
                        - 0.2787
                        - 0.2537
                        - 0.2349
                        - 0.2112
                        - 0.2108
                        - 0.233
                        - 0.231
                        - 0.2631
                        - 0.2245
                        - 0.2421
                        - 0.2586
                        - 0.2961
                        - 0.3102
                        - 0.311
                        - 0.3161
                        - 0.3162
                        - 0.3109
                        - 0.279
                        - 0.2548
                        - 0.2613
                        - 0.2841
                        - 0.2658
                        - 0.2642
                        - 0.2857
                        - 0.2553
                        - 0.2631
                        - 0.2638
                        - 0.2495
                        - 0.2284
                        - 0.2214
                        - 0.2232
                        - 0.2043
                        - 0.2068
                        - 0.2139
                        - 0.2067
                        - 0.2027
                        - 0.1825
                        - 0.1919
                        - 0.1945
                        - 0.2078
                        - 0.2149
                        - 0.2288
                        - 0.2366
                        - 0.226
                        - 0.2126
                        - 0.2257
                        - 0.2355
                        - 0.2189
                        - 0.1973
                        - 0.1784
                        - 0.1701
                        - 0.1754
                        - 0.1609
                        - 0.1655
                        - 0.1549
                        - 0.1714
                        - 0.1842
                        - 0.196
                        - 0.2237
                        - 0.2413
                        - 0.2445
                        - 0.2453
                        - 0.2415
                        - 0.2315
                        - 0.2514
                        - 0.2494
                        - 0.2836
                        - 0.2914
                        - 0.2925
                        - 0.2981
                        - 0.3075
                        - 0.3008
                        - 0.3066
                        - 0.3067
                        - 0.3077
                        - 0.304
                        - 0.3045
                        - 0.3115
                        - 0.3171
                        - 0.3307
                        - 0.3247
                        - 0.3217
                        - 0.317
                        - 0.3272
                        - 0.3383
                        - 0.3395
                        - 0.3456
                        - 0.3659
                        - 0.3864
                        - 0.3785
                        - 0.3875
                        - 0.3931
                        - 0.3757
                        - 0.3873
                        - 0.3933
                        - 0.3932
                        - 0.4033
                        - 0.4058
                        - 0.4071
                        - 0.4015
                        - 0.4015
                        - 0.3949
                        - 0.3841
                        - 0.387
                        - 0.3939
                        - 0.4055
                        - 0.3967
                        - 0.4063
                        - 0.403
                        - 0.4074
                        - 0.4069
                        - 0.3958
                        - 0.3884
                        - 0.397
                        - 0.4206
                        - 0.4271
                        - 0.4342
                        - 0.4405
                        - 0.4749
                        - 0.4698
                        - 0.4788
                        - 0.4896
                        - 0.4565
                        - 0.4689
                        - 0.504
                        - 0.486
                        - 0.4874
                        - 0.5036
                        - 0.5023
                        - 0.5135
                        - 0.5178
                        - 0.4829
                        - 0.5025
                        - 0.5315
                        - 0.5216
                        - 0.5214
                        - 0.5079
                        - 0.4988
                        - 0.5345
                        - 0.5396
                        - 0.5297
                        - 0.5421
                        - 0.5394
                        - 0.5478
                        - 0.5693
                        - 0.5815
                        - 0.5686
                        - 0.5848
                        - 0.6061
                        - 0.597
                        - 0.5835
                        - 0.6113
                        - 0.6056
                        - 0.5893
                        - 0.5695
                        - 0.5895
                        - 0.5989
                        - 0.6213
                        - 0.6301
                        - 0.6191
                        - 0.6062
                        - 0.6068
                        - 0.6306
                        - 0.6294
                        - 0.6294
                        - 0.6194
                        - 0.6114
                        - 0.6209
                        - 0.6005
                        - 0.6222
                        - 0.6247
                        - 0.6302
                        - 0.5931
                        - 0.5976
                        - 0.5635
                        - 0.5373
                        - 0.5204
                        - 0.5211
                        - 0.5224
                        - 0.5162
                        - 0.5356
                        - 0.5699
                        - 0.57
                        - 0.5087
                        - 0.5196
                        freq: D
                        dates:
                        - "20230426"
                        - "20230427"
                        - "20230428"
                        - "20230501"
                        - "20230502"
                        - "20230503"
                        - "20230504"
                        - "20230505"
                        - "20230508"
                        - "20230509"
                        - "20230510"
                        - "20230511"
                        - "20230512"
                        - "20230515"
                        - "20230516"
                        - "20230517"
                        - "20230518"
                        - "20230519"
                        - "20230522"
                        - "20230523"
                        - "20230524"
                        - "20230525"
                        - "20230526"
                        - "20230529"
                        - "20230530"
                        - "20230531"
                        - "20230601"
                        - "20230602"
                        - "20230605"
                        - "20230606"
                        - "20230607"
                        - "20230608"
                        - "20230609"
                        - "20230612"
                        - "20230613"
                        - "20230614"
                        - "20230615"
                        - "20230616"
                        - "20230619"
                        - "20230620"
                        - "20230621"
                        - "20230622"
                        - "20230623"
                        - "20230626"
                        - "20230627"
                        - "20230628"
                        - "20230629"
                        - "20230630"
                        - "20230703"
                        - "20230704"
                        - "20230705"
                        - "20230706"
                        - "20230707"
                        - "20230710"
                        - "20230711"
                        - "20230712"
                        - "20230713"
                        - "20230714"
                        - "20230717"
                        - "20230718"
                        - "20230719"
                        - "20230720"
                        - "20230721"
                        - "20230724"
                        - "20230725"
                        - "20230726"
                        - "20230727"
                        - "20230728"
                        - "20230731"
                        - "20230801"
                        - "20230802"
                        - "20230803"
                        - "20230804"
                        - "20230807"
                        - "20230808"
                        - "20230809"
                        - "20230810"
                        - "20230811"
                        - "20230814"
                        - "20230815"
                        - "20230816"
                        - "20230817"
                        - "20230818"
                        - "20230821"
                        - "20230822"
                        - "20230823"
                        - "20230824"
                        - "20230825"
                        - "20230828"
                        - "20230829"
                        - "20230830"
                        - "20230831"
                        - "20230901"
                        - "20230904"
                        - "20230905"
                        - "20230906"
                        - "20230907"
                        - "20230908"
                        - "20230911"
                        - "20230912"
                        - "20230913"
                        - "20230914"
                        - "20230915"
                        - "20230918"
                        - "20230919"
                        - "20230920"
                        - "20230921"
                        - "20230922"
                        - "20230925"
                        - "20230926"
                        - "20230927"
                        - "20230928"
                        - "20230929"
                        - "20231002"
                        - "20231003"
                        - "20231004"
                        - "20231005"
                        - "20231006"
                        - "20231009"
                        - "20231010"
                        - "20231011"
                        - "20231012"
                        - "20231013"
                        - "20231016"
                        - "20231017"
                        - "20231018"
                        - "20231019"
                        - "20231020"
                        - "20231023"
                        - "20231024"
                        - "20231025"
                        - "20231026"
                        - "20231027"
                        - "20231030"
                        - "20231031"
                        - "20231101"
                        - "20231102"
                        - "20231103"
                        - "20231106"
                        - "20231107"
                        - "20231108"
                        - "20231109"
                        - "20231110"
                        - "20231113"
                        - "20231114"
                        - "20231115"
                        - "20231116"
                        - "20231117"
                        - "20231120"
                        - "20231121"
                        - "20231122"
                        - "20231123"
                        - "20231124"
                        - "20231127"
                        - "20231128"
                        - "20231129"
                        - "20231130"
                        - "20231201"
                        - "20231204"
                        - "20231205"
                        - "20231206"
                        - "20231207"
                        - "20231208"
                        - "20231211"
                        - "20231212"
                        - "20231213"
                        - "20231214"
                        - "20231215"
                        - "20231218"
                        - "20231219"
                        - "20231220"
                        - "20231221"
                        - "20231222"
                        - "20231225"
                        - "20231226"
                        - "20231227"
                        - "20231228"
                        - "20231229"
                        - "20240101"
                        - "20240102"
                        - "20240103"
                        - "20240104"
                        - "20240105"
                        - "20240108"
                        - "20240109"
                        - "20240110"
                        - "20240111"
                        - "20240112"
                        - "20240115"
                        - "20240116"
                        - "20240117"
                        - "20240118"
                        - "20240119"
                        - "20240122"
                        - "20240123"
                        - "20240124"
                        - "20240125"
                        - "20240126"
                        - "20240129"
                        - "20240130"
                        - "20240131"
                        - "20240201"
                        - "20240202"
                        - "20240205"
                        - "20240206"
                        - "20240207"
                        - "20240208"
                        - "20240209"
                        - "20240212"
                        - "20240213"
                        - "20240214"
                        - "20240215"
                        - "20240216"
                        - "20240219"
                        - "20240220"
                        - "20240221"
                        - "20240222"
                        - "20240223"
                        - "20240226"
                        - "20240227"
                        - "20240228"
                        - "20240229"
                        - "20240301"
                        - "20240304"
                        - "20240305"
                        - "20240306"
                        - "20240307"
                        - "20240308"
                        - "20240311"
                        - "20240312"
                        - "20240313"
                        - "20240314"
                        - "20240315"
                        - "20240318"
                        - "20240319"
                        - "20240320"
                        - "20240321"
                        - "20240322"
                        - "20240325"
                        - "20240326"
                        - "20240327"
                        - "20240328"
                        - "20240329"
                        - "20240401"
                        - "20240402"
                        - "20240403"
                        - "20240404"
                        - "20240405"
                        - "20240408"
                        - "20240409"
                        - "20240410"
                        - "20240411"
                        - "20240412"
                        - "20240415"
                        - "20240416"
                        - "20240417"
                        - "20240418"
                        - "20240419"
                        - "20240422"
                        - "20240423"
                        - "20240424"
                        - "20240425"
                        - "20240426"
                        startNAV:
                          date: "20230425"
                          val: 915345.2059
                      periods:
                      - 1D
                      - 7D
                      - MTD
                      - 1M
                      - YTD
                      - 1Y
                      end: "20240426"
                      MTD:
                        nav:
                        - 1482332.7129
                        - 1474991.5595
                        - 1483721.5119
                        - 1464972.9299
                        - 1484912.3583
                        - 1487204.0587
                        - 1492210.8925
                        - 1458260.3853
                        - 1462342.5595
                        - 1431112.3911
                        - 1407166.8369
                        - 1391683.8539
                        - 1392370.552
                        - 1393526.1221
                        - 1387801.1381
                        - 1405559.8818
                        - 1436989.688
                        - 1437102.1473
                        - 1381022.2557
                        - 1390987.0689
                        cps:
                        - -0.0062
                        - -0.0111
                        - -0.0052
                        - -0.0178
                        - -0.0044
                        - -0.0029
                        - 5.0E-4
                        - -0.0223
                        - -0.0196
                        - -0.0405
                        - -0.0565
                        - -0.0669
                        - -0.0665
                        - -0.0657
                        - -0.0695
                        - -0.0576
                        - -0.0366
                        - -0.0365
                        - -0.0741
                        - -0.0674
                        freq: D
                        dates:
                        - "20240401"
                        - "20240402"
                        - "20240403"
                        - "20240404"
                        - "20240405"
                        - "20240408"
                        - "20240409"
                        - "20240410"
                        - "20240411"
                        - "20240412"
                        - "20240415"
                        - "20240416"
                        - "20240417"
                        - "20240418"
                        - "20240419"
                        - "20240422"
                        - "20240423"
                        - "20240424"
                        - "20240425"
                        - "20240426"
                        startNAV:
                          date: "20240329"
                          val: 1491508.085
                      "1M":
                        nav:
                        - 1470819.2095
                        - 1492582.8971
                        - 1491455.1209
                        - 1491508.085
                        - 1482332.7129
                        - 1474991.5595
                        - 1483721.5119
                        - 1464972.9299
                        - 1484912.3583
                        - 1487204.0587
                        - 1492210.8925
                        - 1458260.3853
                        - 1462342.5595
                        - 1431112.3911
                        - 1407166.8369
                        - 1391683.8539
                        - 1392370.552
                        - 1393526.1221
                        - 1387801.1381
                        - 1405559.8818
                        - 1436989.688
                        - 1437102.1473
                        - 1381022.2557
                        - 1390987.0689
                        cps:
                        - 4.0E-4
                        - 0.0152
                        - 0.0144
                        - 0.0145
                        - 0.0082
                        - 0.0032
                        - 0.0092
                        - -0.0036
                        - 0.01
                        - 0.0115
                        - 0.0149
                        - -0.0081
                        - -0.0054
                        - -0.0266
                        - -0.0429
                        - -0.0534
                        - -0.053
                        - -0.0522
                        - -0.0561
                        - -0.044
                        - -0.0226
                        - -0.0225
                        - -0.0607
                        - -0.0539
                        freq: D
                        dates:
                        - "20240326"
                        - "20240327"
                        - "20240328"
                        - "20240329"
                        - "20240401"
                        - "20240402"
                        - "20240403"
                        - "20240404"
                        - "20240405"
                        - "20240408"
                        - "20240409"
                        - "20240410"
                        - "20240411"
                        - "20240412"
                        - "20240415"
                        - "20240416"
                        - "20240417"
                        - "20240418"
                        - "20240419"
                        - "20240422"
                        - "20240423"
                        - "20240424"
                        - "20240425"
                        - "20240426"
                        startNAV:
                          date: "20240325"
                          val: 1470235.8767
                      "7D":
                        nav:
                        - 1405559.8818
                        - 1436989.688
                        - 1437102.1473
                        - 1381022.2557
                        - 1390987.0689
                        cps:
                        - 0.0128
                        - 0.0354
                        - 0.0355
                        - -0.0049
                        - 0.0023
                        freq: D
                        dates:
                        - "20240422"
                        - "20240423"
                        - "20240424"
                        - "20240425"
                        - "20240426"
                        startNAV:
                          date: "20240419"
                          val: 1387801.1381
                      baseCurrency: USD
                    id: getPerformanceAllPeriods
                    included:
                    - DU123456
                    pm: TWR
              schema:
                $ref: '#/components/schemas/detailedContractInformation'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Account Performance (All Time Periods)
      tags:
      - Trading Portfolio Analyst
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /pa/performance:
    post:
      description: "Returns the performance (MTM) for the given accounts, if more\
        \ than one account is passed, the result is consolidated."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_pa_performance_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    currencyType: base
                    rc: 0
                    nav:
                      data:
                      - idType: acctid
                        navs:
                        - 2.027673321223E8
                        - 2.157185988239E8
                        start: "20230102"
                        end: "20231213"
                        id: U1234567
                        startNAV:
                          date: "20221230"
                          val: 2.027677613449E8
                        baseCurrency: USD
                      freq: D
                      dates:
                      - "20230102"
                      - "20231213"
                    nd: 346
                    cps:
                      data:
                      - idType: acctid
                        start: "20230102"
                        end: "20231213"
                        returns:
                        - 0
                        - 0.0639
                        id: U1234567
                        baseCurrency: USD
                      freq: D
                      dates:
                      - "20230102"
                      - "20231213"
                    tpps:
                      data:
                      - idType: acctid
                        start: "20230102"
                        end: "20231213"
                        returns:
                        - 0.0037
                        - 0.0031
                        - 0.0033
                        - 0.0034
                        - 0.02
                        - 0.0127
                        - 0.0036
                        - 0.0036
                        - 0.0034
                        - 0.0012
                        - 0.0026
                        - 0.0017
                        id: U1234567
                        baseCurrency: USD
                      freq: M
                      dates:
                      - "202301"
                      - "202302"
                      - "202303"
                      - "202304"
                      - "202305"
                      - "202306"
                      - "202307"
                      - "202308"
                      - "202309"
                      - "202310"
                      - "202311"
                      - "202312"
                    id: getPerformanceData
                    included:
                    - U1234567
                    pm: TWR
              schema:
                $ref: '#/components/schemas/performanceResponse'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Account Performance
      tags:
      - Trading Portfolio Analyst
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /pa/transactions:
    post:
      description: "Transaction history for a given number of conids and accounts.\
        \ Types of transactions include dividend payments, buy and sell transactions,\
        \ transfers."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_pa_transactions_post_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    rc: 0
                    nd: 4
                    rpnl:
                      data:
                      - date: "20231211"
                        cur: USD
                        fxRate: 1
                        side: L
                        acctid: U1234567
                        amt: "12.2516"
                        conid: "265598"
                      amt: "12.2516"
                    currency: USD
                    from: 1702270800000
                    id: getTransactions
                    to: 1702530000000
                    includesRealTime: true
                    transactions:
                    - date: Mon Dec 11 00:00:00 EST 2023
                      cur: USD
                      fxRate: 1
                      pr: 192.26
                      qty: -5
                      acctid: U1234567
                      amt: 961.3
                      conid: 265598
                      type: Sell
                      desc: Apple Inc
              schema:
                $ref: '#/components/schemas/transactionsResponse'
          description: An array of objects detailing contract information.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Transaction History
      tags:
      - Trading Portfolio Analyst
      x-ib-provider: iblink
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/accounts:
    get:
      description: return accounts
      responses:
        "200":
          content:
            application/json:
              examples:
                accounts:
                  value:
                  - id: DU123456
                    PrepaidCrypto-Z: false
                    PrepaidCrypto-P: false
                    brokerageAccess: true
                    accountId: DU123456
                    accountVan: DU123456
                    accountTitle: "John Smith, LLC"
                    displayName: "John Smith, LLC"
                    accountAlias: null
                    accountStatus: 1590724800000
                    currency: USD
                    type: DEMO
                    tradingType: STKNOPT
                    businessType: IB_SALES
                    ibEntity: IBLLC-US
                    faclient: false
                    clearingStatus: O
                    covestor: false
                    noClientTrading: false
                    trackVirtualFXPortfolio: true
                    acctCustType: LLC
                    parent:
                      mmc: []
                      accountId: ""
                      isMParent: false
                      isMChild: false
                      isMultiplex: false
                    desc: DU123456
              schema:
                description: Array of objects representing accounts in the structure.
                items:
                  $ref: '#/components/schemas/accountAttributes'
                type: array
          description: returned array with user account
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Accounts
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/positions/{conid}:
    get:
      description: Get positions in accounts for a given instrument (no secDef await
        control)
      parameters:
      - explode: false
        in: path
        name: conid
        required: true
        schema:
          description: Conid of the instrument for which positions are requested.
          example: "8314"
          format: int32
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                withPartialSecDefForSomeAccount:
                  value:
                    DU123456:
                    - acctId: DU123456
                      conid: 8314
                      contractDesc: IBM
                      position: 1412.0
                      mktPrice: 166.7599945
                      mktValue: 235465.11
                      currency: USD
                      avgCost: 144.46141
                      avgPrice: 144.46141
                      realizedPnl: 0.0
                      unrealizedPnl: 31485.6
                      exchs: null
                      expiry: null
                      putOrCall: null
                      multiplier: 0.0
                      strike: "0"
                      exerciseStyle: null
                      conExchMap: []
                      assetClass: STK
                      undConid: 0
                      model: ""
                      incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      displayRule:
                        magnification: 0
                        displayRuleStep:
                        - decimalDigits: 2
                          lowerEdge: 0.0
                          wholeDigits: 4
                      time: 64
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                      listingExchange: NYSE
                      countryCode: US
                      name: INTL BUSINESS MACHINES CORP
                      lastTradingDay: null
                      group: Computers
                      sector: Technology
                      sectorGroup: Computer Services
                      ticker: IBM
                      type: COMMON
                      hasOptions: true
                      fullName: IBM
                      isUS: true
                      isEventContract: false
                      pageSize: 100
                    DU123457:
                    - acctId: DU123457
                      conid: 8314
                      contractDesc: IBM
                      position: 1412.0
                      mktPrice: 166.7599945
                      mktValue: 235465.11
                      currency: USD
                      avgCost: 144.46141
                      avgPrice: 144.46141
                      realizedPnl: 0.0
                      unrealizedPnl: 31485.6
                      exchs: null
                      expiry: null
                      putOrCall: null
                      multiplier: null
                      strike: 0.0
                      exerciseStyle: null
                      conExchMap: []
                      assetClass: STK
                      undConid: 0
                      model: ""
                withSecDefForAllAccounts:
                  value:
                    DU123457:
                    - acctId: DU123457
                      conid: 8314
                      contractDesc: IBM
                      position: 1412.0
                      mktPrice: 166.7599945
                      mktValue: 235465.11
                      currency: USD
                      avgCost: 144.46141
                      avgPrice: 144.46141
                      realizedPnl: 0.0
                      unrealizedPnl: 31485.6
                      exchs: null
                      expiry: null
                      putOrCall: null
                      multiplier: 0.0
                      strike: "0"
                      exerciseStyle: null
                      conExchMap: []
                      assetClass: STK
                      undConid: 0
                      model: ""
                      incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      displayRule:
                        magnification: 0
                        displayRuleStep:
                        - decimalDigits: 2
                          lowerEdge: 0.0
                          wholeDigits: 4
                      time: 64
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                      listingExchange: NYSE
                      countryCode: US
                      name: INTL BUSINESS MACHINES CORP
                      lastTradingDay: null
                      group: Computers
                      sector: Technology
                      sectorGroup: Computer Services
                      ticker: IBM
                      type: COMMON
                      hasOptions: true
                      fullName: IBM
                      isUS: true
                      isEventContract: false
                      pageSize: 100
                    DU123456:
                    - acctId: DU123456
                      conid: 8314
                      contractDesc: IBM
                      position: 1412.0
                      mktPrice: 166.7599945
                      mktValue: 235465.11
                      currency: USD
                      avgCost: 144.46141
                      avgPrice: 144.46141
                      realizedPnl: 0.0
                      unrealizedPnl: 31485.6
                      exchs: null
                      expiry: null
                      putOrCall: null
                      multiplier: 0.0
                      strike: "0"
                      exerciseStyle: null
                      conExchMap: []
                      assetClass: STK
                      undConid: 0
                      model: ""
                      incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      displayRule:
                        magnification: 0
                        displayRuleStep:
                        - decimalDigits: 2
                          lowerEdge: 0.0
                          wholeDigits: 4
                      time: 64
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                      listingExchange: NYSE
                      countryCode: US
                      name: INTL BUSINESS MACHINES CORP
                      lastTradingDay: null
                      group: Computers
                      sector: Technology
                      sectorGroup: Computer Services
                      ticker: IBM
                      type: COMMON
                      hasOptions: true
                      fullName: IBM
                      isUS: true
                      isEventContract: false
                      pageSize: 100
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/individualPosition'
                type: object
          description: Object containing positions in the requested conid broken out
            by account.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Positions In Accounts For A Given Instrument
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/subaccounts:
    get:
      description: Retrieve attributes of the subaccounts in the account structure.
      responses:
        "200":
          content:
            application/json:
              examples:
                subAccounts:
                  value:
                  - id: DU1234511
                    PrepaidCrypto-Z: false
                    PrepaidCrypto-P: false
                    brokerageAccess: false
                    accountId: DU1234511
                    accountVan: DU1234511
                    accountTitle: "John Smith, LLC"
                    displayName: "John Smith, LLC"
                    accountAlias: null
                    accountStatus: 1590724800000
                    currency: USD
                    type: DEMO
                    tradingType: STKNOPT
                    businessType: IB_SALES
                    ibEntity: IBLLC-US
                    faclient: false
                    clearingStatus: O
                    covestor: false
                    noClientTrading: false
                    trackVirtualFXPortfolio: true
                    acctCustType: LLC
                    parent:
                      mmc: []
                      accountId: ""
                      isMParent: false
                      isMChild: false
                      isMultiplex: false
                    desc: DU1234511
              schema:
                items:
                  $ref: '#/components/schemas/accountAttributes'
                type: array
          description: Array of objects representing accounts in the structure.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      summary: Get Attributes Of Subaccounts In Account Structure
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/allocation:
    get:
      description: "Get an account's allocations by asset class, sector group, and\
        \ sector."
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose allocations are requested.
          type: string
        style: simple
      - explode: false
        in: query
        name: model
        required: false
        schema:
          description: model
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    assetClass:
                      long:
                        CRYPTO: 255.17
                        OPT: 44352.82
                        STK: 1564447.6240790943
                        BOND: 380106.54
                        CASH: 72425.68706744915
                      short:
                        OPT: -80.53
                        STK: -103716.11109948158
                        CASH: -508096.16629793524
                    sector:
                      long:
                        Others: 704313.8907064605
                        Industrial: 380106.54
                        Technology: 309264.47000000003
                        Consumer, Cyclical: 18213.43337263364
                        Communications: 164576.99
                        Financial: 412637.11
                        Consumer, Non-cyclical: 49.72
                      short:
                        Technology: -87162.0
                        Consumer, Cyclical: -11763.0
                        Communications: -189.53
                        Financial: -4682.111099481583
                    group:
                      long:
                        Computers: 279285.37
                        Others: 704313.8907064605
                        Biotechnology: 49.72
                        Aerospace/Defense: 380106.54
                        Semiconductors: 371.9
                        Auto Manufacturers: 18213.43337263364
                        Banks: 366666.31
                        Diversified Finan Serv: 45970.8
                        Software: 29607.2
                        Internet: 164576.99
                      short:
                        Semiconductors: -87162.0
                        Auto Manufacturers: -11763.0
                        Insurance: -4682.111099481583
                        Internet: -189.53
              schema:
                $ref: '#/components/schemas/portfolioAllocations'
          description: response with allocations
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: "Get An Account's Allocations By Asset Class, Sector Group, And Sector."
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/ledger:
    get:
      description: Get the given account's ledger data detailing its balances by currency.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose ledger data is requested.
          example: DU123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    CAD:
                      commoditymarketvalue: 0.0
                      futuremarketvalue: 0.0
                      settledcash: 3899.42
                      exchangerate: 0.73095405
                      sessionid: 1
                      cashbalance: 3899.42
                      corporatebondsmarketvalue: 0.0
                      warrantsmarketvalue: 0.0
                      netliquidationvalue: 3899.42
                      interest: 0
                      unrealizedpnl: 0.0
                      stockmarketvalue: 0.0
                      moneyfunds: 0.0
                      currency: CAD
                      realizedpnl: 0.0
                      funds: 0.0
                      acctcode: DU123456
                      issueroptionsmarketvalue: 0.0
                      key: LedgerList
                      timestamp: 1712784785
                      severity: 0
                      stockoptionmarketvalue: 0.0
                      futuresonlypnl: 0.0
                      tbondsmarketvalue: 0.0
                      futureoptionmarketvalue: 0.0
                      cashbalancefxsegment: 0.0
                      secondkey: CAD
                      tbillsmarketvalue: 0.0
                      dividends: 0.0
                      cryptocurrencyvalue: 0.0
                    USD:
                      commoditymarketvalue: 0.0
                      futuremarketvalue: -5650.0
                      settledcash: -494573.5
                      exchangerate: 1
                      sessionid: 1
                      cashbalance: -494573.5
                      corporatebondsmarketvalue: 387538.2
                      warrantsmarketvalue: 0.0
                      netliquidationvalue: 1388598.1
                      interest: -742.84
                      unrealizedpnl: 342011.97
                      stockmarketvalue: 1451848.9
                      moneyfunds: 0.0
                      currency: USD
                      realizedpnl: 0.0
                      funds: 0.0
                      acctcode: DU123456
                      issueroptionsmarketvalue: 0.0
                      key: LedgerList
                      timestamp: 1712784785
                      severity: 0
                      stockoptionmarketvalue: 44272.29
                      futuresonlypnl: -5650.0
                      tbondsmarketvalue: 0.0
                      futureoptionmarketvalue: 0.0
                      cashbalancefxsegment: 0.0
                      secondkey: USD
                      tbillsmarketvalue: 0.0
                      endofbundle: 1
                      dividends: 0.0
                      cryptocurrencyvalue: 255.1348
                    BASE:
                      commoditymarketvalue: 0.0
                      futuremarketvalue: -5650.0
                      settledcash: -435667.94
                      exchangerate: 1
                      sessionid: 1
                      cashbalance: -435667.94
                      corporatebondsmarketvalue: 387538.2
                      warrantsmarketvalue: 0.0
                      netliquidationvalue: 1456360.9
                      interest: -742.84
                      unrealizedpnl: 342383.1
                      stockmarketvalue: 1460706.0
                      moneyfunds: 0.0
                      currency: BASE
                      realizedpnl: 0.0
                      funds: 0.0
                      acctcode: DU123456
                      issueroptionsmarketvalue: 0.0
                      key: LedgerList
                      timestamp: 1712784785
                      severity: 0
                      stockoptionmarketvalue: 44272.29
                      futuresonlypnl: -5650.0
                      tbondsmarketvalue: 0.0
                      futureoptionmarketvalue: 0.0
                      cashbalancefxsegment: 0.0
                      secondkey: BASE
                      tbillsmarketvalue: 0.0
                      dividends: 0.0
                      cryptocurrencyvalue: 255.1348
              schema:
                $ref: '#/components/schemas/ledger'
          description: ledger
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Ledger Data For The Given Account.
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/meta:
    get:
      description: Get a single account's attributes and capabilities.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose attributes are requested.
          example: DU123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                accountMetaInformation:
                  value:
                    id: DU123456
                    PrepaidCrypto-Z: false
                    PrepaidCrypto-P: false
                    brokerageAccess: false
                    accountId: DU123456
                    accountVan: DU123456
                    accountTitle: "John Smith, LLC"
                    displayName: "John Smith, LLC"
                    accountAlias: Retirement
                    accountStatus: 1590724800000
                    currency: USD
                    type: DEMO
                    tradingType: STKNOPT
                    businessType: IB_SALES
                    ibEntity: IBLLC-US
                    faclient: false
                    clearingStatus: O
                    covestor: false
                    noClientTrading: false
                    trackVirtualFXPortfolio: true
                    acctCustType: LLC
                    parent:
                      mmc: []
                      accountId: ""
                      isMParent: false
                      isMChild: false
                      isMultiplex: false
                    desc: DU123456
              schema:
                $ref: '#/components/schemas/accountAttributes'
          description: An account's attributes
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get An Account's Attributes.
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/positions/invalidate:
    post:
      description: "Instructs IB to discard cached portfolio positions for a given\
        \ account, so that the next request for positions delivers freshly obtained\
        \ data."
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose cached portfolio positions will be discarded.
          example: DU123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    message: success
              schema:
                $ref: '#/components/schemas/_portfolio__accountId__positions_invalidate_post_200_response'
          description: status of invalidation
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Instructs IB To Discard Cached Portfolio Positions For A Given Account.
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/positions/{pageId}:
    get:
      description: Get all positions in an account.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose positions are requested.
          example: DU123456
          type: string
        style: simple
      - explode: false
        in: path
        name: pageId
        required: false
        schema:
          description: Paginates positions response. Indexed from 0. Max 100 positions
            returned per page. Defaulted to 0.
          example: "1"
          format: int32
          type: string
        style: simple
      - description: Name of model
        explode: false
        in: path
        name: model
        required: false
        style: simple
      - description: sorting of result positions by specified field. Defaulted to
          "name" field.
        example: name
        explode: false
        in: path
        name: sort
        required: false
        style: simple
      - description: "Sorting direction. Possible values \"a\" - ascending, \"d\"\
          \ - descending. Defaulted to \"a\""
        example: a
        explode: false
        in: path
        name: direction
        required: false
        style: simple
      - explode: false
        in: path
        name: waitForSecDef
        required: false
        schema:
          description: "Forcing to wait for all security definition to be received.\
            \ If false, position may not have secDef portion"
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                positions:
                  value:
                  - acctId: DU123456
                    conid: 479624278
                    contractDesc: BTC CRYPTO
                    position: 0.00365831
                    mktPrice: 69814.3984375
                    mktValue: 255.4
                    currency: USD
                    avgCost: 27608.34921045
                    avgPrice: 27608.34921045
                    realizedPnl: 0.0
                    unrealizedPnl: 154.4
                    exchs: null
                    expiry: null
                    putOrCall: null
                    multiplier: 0.0
                    strike: "0"
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: CRYPTO
                    undConid: 0
                    model: ""
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.25
                    displayRule:
                      magnification: 0
                      displayRuleStep:
                      - decimalDigits: 2
                        lowerEdge: 0.0
                        wholeDigits: 4
                    time: 6
                    chineseName: '&#x7F8E;&#x5143;'
                    allExchanges: PAXOS
                    listingExchange: PAXOS
                    countryCode: US
                    name: Bitcoin cryptocurrency
                    lastTradingDay: null
                    group: null
                    sector: null
                    sectorGroup: null
                    ticker: BTC
                    type: ""
                    hasOptions: false
                    fullName: BTC
                    isEventContract: false
                    pageSize: 100
                  - acctId: DU123456
                    conid: 584891614
                    contractDesc: "SPY    JAN2025 440 C [SPY   250117C00440000 100]"
                    position: 1.0
                    mktPrice: 95.70706175
                    mktValue: 9570.71
                    currency: USD
                    avgCost: 5801.0401
                    avgPrice: 58.010401
                    realizedPnl: 0.0
                    unrealizedPnl: 3769.67
                    exchs: null
                    expiry: "20250117"
                    putOrCall: C
                    multiplier: 100.0
                    strike: "440"
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: OPT
                    undConid: 756733
                    model: ""
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.01
                    displayRule:
                      magnification: 0
                      displayRuleStep:
                      - decimalDigits: 2
                        lowerEdge: 0.0
                        wholeDigits: 4
                    crossCurrency: false
                    time: 26
                    chineseName: SPDR&#x6807;&#x666E;500 ETF&#x4FE1;&#x6258;
                    allExchanges: "AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,WALLBETH,IBUSOPT"
                    listingExchange: AMEX
                    countryCode: US
                    name: SPDR S&P 500 ETF TRUST
                    lastTradingDay: "20250117"
                    group: null
                    sector: null
                    sectorGroup: null
                    ticker: SPY
                    type: ""
                    undComp: SPDR S&P 500 ETF TRUST
                    undSym: SPY
                    hasOptions: false
                    fullName: SPY Jan17'25 440 Call
                    isUS: true
                    isEventContract: false
                    pageSize: 100
                  - acctId: DU123456
                    conid: 8314
                    contractDesc: IBM
                    position: 1412.0
                    mktPrice: 185.17599485
                    mktValue: 261468.5
                    currency: USD
                    avgCost: 144.46141
                    avgPrice: 144.46141
                    realizedPnl: 0.0
                    unrealizedPnl: 57488.99
                    exchs: null
                    expiry: null
                    putOrCall: null
                    multiplier: 0.0
                    strike: "0"
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: STK
                    undConid: 0
                    model: ""
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.01
                    displayRule:
                      magnification: 0
                      displayRuleStep:
                      - decimalDigits: 2
                        lowerEdge: 0.0
                        wholeDigits: 4
                    time: 38
                    chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                    allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                    listingExchange: NYSE
                    countryCode: US
                    name: INTL BUSINESS MACHINES CORP
                    lastTradingDay: null
                    group: Computers
                    sector: Technology
                    sectorGroup: Computer Services
                    ticker: IBM
                    type: COMMON
                    hasOptions: true
                    fullName: IBM
                    isUS: true
                    isEventContract: false
                    pageSize: 100
              schema:
                description: Array of objects reflecting all positions in the given
                  account.
                items:
                  $ref: '#/components/schemas/individualPosition'
                type: array
          description: positions
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get All Positions In An Account.
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountId}/summary:
    get:
      description: Portfolio account summary
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: accountId
          example: DU123456
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                success:
                  value:
                    accountcode:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: DU123456
                    accountready:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "true"
                    accounttype:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: LLC
                    accruedcash:
                      amount: 880036.375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    accruedcash-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    accruedcash-s:
                      amount: 880036.375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    accrueddividend:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    accrueddividend-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    accrueddividend-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availablefunds:
                      amount: 2.05266944E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availablefunds-c:
                      amount: 468839.75
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availablefunds-s:
                      amount: 2.04798112E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletotrade:
                      amount: 2.04680368E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletotrade-c:
                      amount: 500449.375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletotrade-s:
                      amount: 2.0417992E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletowithdraw:
                      amount: 2.04676912E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletowithdraw-c:
                      amount: 496993.75
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    availabletowithdraw-s:
                      amount: 2.0417992E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    billable:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    billable-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    billable-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    buyingpower:
                      amount: 8.21079744E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    columnprio-c:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "2"
                    columnprio-s:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "1"
                    cushion:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "0.994598"
                    daytradesremaining:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "-1"
                    daytradesremainingt+1:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "-1"
                    daytradesremainingt+2:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "-1"
                    daytradesremainingt+3:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "-1"
                    daytradesremainingt+4:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "-1"
                    daytradingstatus-s:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: ": : false: 205505601.94: :false"
                    depositoncredithold:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "null"
                    equitywithloanvalue:
                      amount: 2.0550552E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    equitywithloanvalue-c:
                      amount: 471830.0625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    equitywithloanvalue-s:
                      amount: 2.05033696E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    excessliquidity:
                      amount: 2.05300432E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    excessliquidity-c:
                      amount: 471830.0625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    excessliquidity-s:
                      amount: 2.04828608E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullavailablefunds:
                      amount: 2.05252848E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullavailablefunds-c:
                      amount: 454742.59375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullavailablefunds-s:
                      amount: 2.04798112E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullexcessliquidity:
                      amount: 2.05287616E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullexcessliquidity-c:
                      amount: 459014.46875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullexcessliquidity-s:
                      amount: 2.04828608E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullinitmarginreq:
                      amount: 282575.34375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullinitmarginreq-c:
                      amount: 46990.5
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullinitmarginreq-s:
                      amount: 235584.84375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullmaintmarginreq:
                      amount: 247882.796875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullmaintmarginreq-c:
                      amount: 42718.640625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    fullmaintmarginreq-s:
                      amount: 205164.171875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    grosspositionvalue:
                      amount: 659611.375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    grosspositionvalue-s:
                      amount: 659611.375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    guarantee:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    guarantee-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    guarantee-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    highestseverity:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "null"
                    indianstockhaircut:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    indianstockhaircut-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    indianstockhaircut-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    initmarginreq:
                      amount: 268478.1875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    initmarginreq-c:
                      amount: 32893.3515625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    initmarginreq-s:
                      amount: 235584.84375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    leverage-s:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "0.0"
                    lookaheadavailablefunds:
                      amount: 2.05266944E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadavailablefunds-c:
                      amount: 468839.75
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadavailablefunds-s:
                      amount: 2.04798112E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadexcessliquidity:
                      amount: 2.05300432E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadexcessliquidity-c:
                      amount: 471830.0625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadexcessliquidity-s:
                      amount: 2.04828608E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadinitmarginreq:
                      amount: 268478.1875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadinitmarginreq-c:
                      amount: 32893.3515625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadinitmarginreq-s:
                      amount: 235584.84375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadmaintmarginreq:
                      amount: 235067.203125
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadmaintmarginreq-c:
                      amount: 29903.05078125
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadmaintmarginreq-s:
                      amount: 205164.171875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    lookaheadnextchange:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "1712157300"
                    maintmarginreq:
                      amount: 235067.203125
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    maintmarginreq-c:
                      amount: 29903.05078125
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    maintmarginreq-s:
                      amount: 205164.171875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    netliquidation:
                      amount: 2.06415536E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    netliquidation-c:
                      amount: 501733.09375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    netliquidation-s:
                      amount: 2.05913808E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    netliquidationuncertainty:
                      amount: 70.94000244140625
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    nlvandmargininreview:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "false"
                    pasharesvalue:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    pasharesvalue-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    pasharesvalue-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    physicalcertificatevalue:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    physicalcertificatevalue-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    physicalcertificatevalue-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationexcess:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationexcess-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationexcess-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationmargin:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationmargin-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    postexpirationmargin-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    previousdayequitywithloanvalue:
                      amount: 2.05044656E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    previousdayequitywithloanvalue-s:
                      amount: 2.05044656E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    regtequity:
                      amount: 2.05913808E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    regtequity-s:
                      amount: 2.05913808E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    regtmargin:
                      amount: 329761.1875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    regtmargin-s:
                      amount: 329761.1875
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    segmenttitle-c:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: US Commodities
                    segmenttitle-s:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: US Securities
                    sma:
                      amount: 2.05584048E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    sma-s:
                      amount: 2.05584048E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totalcashvalue:
                      amount: 2.05646432E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totalcashvalue-c:
                      amount: 501733.09375
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totalcashvalue-s:
                      amount: 2.05144704E8
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totaldebitcardpendingcharges:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totaldebitcardpendingcharges-c:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    totaldebitcardpendingcharges-s:
                      amount: 0.0
                      currency: USD
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: null
                    tradingtype-s:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: STKNOPT
                    whatifpmenabled:
                      amount: 0.0
                      currency: null
                      isNull: false
                      severity: 0
                      timestamp: 1712156105000
                      value: "true"
              schema:
                $ref: '#/components/schemas/portfolioSummary'
          description: response with summary definitions
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Portfolio Account Summary
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /portfolio/{accountid}/position/{conid}:
    get:
      description: Get position for a given instrument in a single account. WaitSecDef
        attribute is always defaulted to false. It is possible to get position without
        security definition.
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          description: Account ID whose position in the given instrument is requested.
          example: DU123456
          type: string
        style: simple
      - explode: false
        in: path
        name: conid
        required: true
        schema:
          description: Conid of the instrument whose position in the account is requested.
          example: "265598"
          format: int32
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                individualPositionOpt:
                  value:
                  - acctId: DU123456
                    conid: 580947749
                    contractDesc: "META JUN2024 330 P [META 240621P00330000 100]"
                    position: -1.0
                    mktPrice: 0.77968365
                    mktValue: -77.97
                    currency: USD
                    avgCost: 4229.1637
                    avgPrice: 42.291637
                    realizedPnl: 0.0
                    unrealizedPnl: 4151.2
                    exchs: null
                    expiry: "20240621"
                    putOrCall: P
                    multiplier: 100.0
                    strike: "330"
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: OPT
                    undConid: 107113386
                    model: ""
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.01
                    displayRule:
                      magnification: 0
                      displayRuleStep:
                      - decimalDigits: 2
                        lowerEdge: 0.0
                        wholeDigits: 4
                    crossCurrency: false
                    time: 27
                    chineseName: Meta&#x5E73;&#x53F0;&#x80A1;&#x4EFD;&#x6709;&#x9650;&#x516C;&#x53F8;
                    allExchanges: "AMEX,CBOE,PHLX,PSE,ISE,BOX,BATS,NASDAQOM,CBOE2,NASDAQBX,MIAX,GEMINI,EDGX,MERCURY,PEARL,EMERALD,MEMX,WALLBETH,IBUSOPT"
                    listingExchange: AMEX
                    countryCode: US
                    name: META PLATFORMS INC-CLASS A
                    lastTradingDay: "20240621"
                    group: Internet
                    sector: Communications
                    sectorGroup: Internet Content-Entmnt
                    ticker: META
                    type: ""
                    undComp: META PLATFORMS INC-CLASS A
                    undSym: META
                    hasOptions: false
                    fullName: META Jun21'24 330 Put
                    isUS: true
                    isEventContract: false
                    pageSize: 100
                individualPositionStk:
                  value:
                  - acctId: DU123456
                    conid: 8314
                    contractDesc: IBM
                    position: 1412.0
                    mktPrice: 185.17599485
                    mktValue: 261468.5
                    currency: USD
                    avgCost: 144.46141
                    avgPrice: 144.46141
                    realizedPnl: 0.0
                    unrealizedPnl: 57488.99
                    exchs: null
                    expiry: null
                    putOrCall: null
                    multiplier: 0.0
                    strike: "0"
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: STK
                    undConid: 0
                    model: ""
                    incrementRules:
                    - lowerEdge: 0.0
                      increment: 0.01
                    displayRule:
                      magnification: 0
                      displayRuleStep:
                      - decimalDigits: 2
                        lowerEdge: 0.0
                        wholeDigits: 4
                    time: 38
                    chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                    allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                    listingExchange: NYSE
                    countryCode: US
                    name: INTL BUSINESS MACHINES CORP
                    lastTradingDay: null
                    group: Computers
                    sector: Technology
                    sectorGroup: Computer Services
                    ticker: IBM
                    type: COMMON
                    hasOptions: true
                    fullName: IBM
                    isUS: true
                    isEventContract: false
                    pageSize: 100
                individualPositionWithNoSecDef:
                  value:
                  - acctId: DU123456
                    conid: 580947749
                    contractDesc: "META JUN2024 330 P [META 240621P00330000 100]"
                    position: -1.0
                    mktPrice: 0.7800926
                    mktValue: -78.01
                    currency: USD
                    avgCost: 4229.1637
                    avgPrice: 42.291637
                    realizedPnl: 0.0
                    unrealizedPnl: 4151.15
                    exchs: null
                    expiry: null
                    putOrCall: null
                    multiplier: null
                    strike: 0.0
                    exerciseStyle: null
                    conExchMap: []
                    assetClass: OPT
                    undConid: 0
                    model: ""
              schema:
                $ref: '#/components/schemas/individualPositionArray'
          description: Position details by conid
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Get Position For A Given Instrument In A Single Account.
      tags:
      - Trading Portfolio
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /sso/validate:
    get:
      description: Validates the current session for the SSO user.
      responses:
        "200":
          content:
            application/json:
              example:
                success:
                  value:
                    USER_ID: 123456789
                    USER_NAME: user1234
                    RESULT: true
                    AUTH_TIME: 1702580846836
                    SF_ENABLED: false
                    IS_FREE_TRIAL: false
                    CREDENTIAL: user1234
                    IP: 12.345.678.901
                    EXPIRES: 415890
                    QUALIFIED_FOR_MOBILE_AUTH: null
                    LANDING_APP: UNIVERSAL
                    IS_MASTER: false
                    lastAccessed: 1702581069652
                    LOGIN_TYPE: 2
                    PAPER_USER_NAME: user1234
                    features:
                      env: PROD
                      wlms: true
                      realtime: true
                      bond: true
                      optionChains: true
                      calendar: true
                      newMf: true
                    region: NJ
              schema:
                $ref: '#/components/schemas/ssoValidateResponse'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
      summary: Validate SSO
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /tickle:
    post:
      description: If the gateway has not received any requests for several minutes
        an open session will automatically timeout. The tickle endpoint pings the
        server to prevent the session from ending. It is expected to call this endpoint
        approximately every 60 seconds to maintain the connection to the brokerage
        session.
      responses:
        "200":
          content:
            application/json:
              example:
                success:
                  value:
                    session: bb665d0f55b6289d70bc7380089fc96f
                    ssoExpires: 460311
                    collission: false
                    userId: 123456789
                    hmds:
                      error: no bridge
                    iserver:
                      authStatus:
                        authenticated: true
                        competing: false
                        connected: true
                        message: ""
                        MAC: 98:F2:B3:23:BF:A0
                        serverInfo:
                          serverName: JifN19053
                          serverVersion: "Build 10.25.0p, Dec 5, 2023 5:48:12 PM"
                fail:
                  value:
                    error: failed to process request
              schema:
                $ref: '#/components/schemas/tickleResponse'
          description: An array of objects detailing contract information.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
      summary: Server Ping.
      tags:
      - Trading Session
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - text/plain; charset=utf-8
  /trsrv/all-conids:
    get:
      description: "Send out a request to retrieve all contracts made available on\
        \ a requested exchange. This returns all contracts that are tradable on the\
        \ exchange, even those that are not using the exchange as their primary listing."
      parameters:
      - explode: false
        in: query
        name: exchange
        required: true
        schema:
          description: Exchange from which derivatives should be retrieved from.
          example: AMEX
          type: string
        style: form
      - explode: false
        in: query
        name: assetClass
        required: false
        schema:
          default: STK
          description: asset class
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                  - ticker: BMO
                    conid: 5094
                    exchange: NYSE
                  - ticker: BNS
                    conid: 15156975
                    exchange: NYSE
              schema:
                items:
                  $ref: '#/components/schemas/_trsrv_all_conids_get_200_response_inner'
                type: array
          description: Successful response containing a contract's security definition.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: All Conids By Exchange
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /trsrv/futures:
    get:
      description: Returns a list of non-expired future contracts for given symbol(s)
      parameters:
      - explode: false
        in: query
        name: symbols
        required: true
        schema:
          description: Indicate the symbol(s) of the underlier you are trying to retrieve
            futures on. Accepts comma delimited string of symbols.
          example: "ES,MES"
          type: string
        style: form
      - explode: false
        in: query
        name: exchange
        required: false
        schema:
          description: exchange
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                futures:
                  value:
                    ES:
                    - symbol: ES
                      conid: 495512557
                      underlyingConid: 11004968
                      expirationDate: 20241220
                      ltd: 20241219
                      shortFuturesCutOff: 20241219
                      longFuturesCutOff: 20241219
                    - symbol: ES
                      conid: 495512563
                      underlyingConid: 11004968
                      expirationDate: 20251219
                      ltd: 20251218
                      shortFuturesCutOff: 20251218
                      longFuturesCutOff: 20251218
              schema:
                $ref: '#/components/schemas/features'
          description: Successful response containing a contract's security definition.
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Future  Security Definition By Symbol
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /trsrv/secdef:
    get:
      description: Returns a list of security definitions for the given conids.
      parameters:
      - explode: false
        in: query
        name: conids
        required: true
        schema:
          description: A comma separated series of contract IDs.
          example: "265598,8314"
          type: string
        style: form
      - explode: false
        in: query
        name: criteria
        required: false
        style: form
      - explode: false
        in: query
        name: bondp
        required: false
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                response:
                  value:
                    secdef:
                    - incrementRules:
                      - lowerEdge: 0.0
                        increment: 0.01
                      displayRule:
                        magnification: 0
                        displayRuleStep:
                        - decimalDigits: 2
                          lowerEdge: 0.0
                          wholeDigits: 4
                      conid: 8314
                      currency: USD
                      time: 770
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      allExchanges: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,REALNYSE,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,PSX,BYX,ITG,PDQ,IBKRATS,NYSEFLOOR,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,G1XLP,VIRTUMID,GLOBALXLP,CTDLMID,TPLUS0"
                      listingExchange: NYSE
                      countryCode: US
                      name: INTL BUSINESS MACHINES CORP
                      assetClass: STK
                      expiry: null
                      lastTradingDay: null
                      group: Computers
                      putOrCall: null
                      sector: Technology
                      sectorGroup: Computer Services
                      strike: "0"
                      ticker: IBM
                      undConid: 0
                      multiplier: 0.0
                      type: COMMON
                      hasOptions: true
                      fullName: IBM
                      isUS: true
                      isEventContract: false
              schema:
                $ref: '#/components/schemas/trsrvSecDefResponse'
          description: Successful response containing a contract's security definition.
        "204":
          description: no content
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Search The Security Definition By Contract ID
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /trsrv/secdef/schedule:
    get:
      description: Returns the trading schedule up to a month for the requested contract.
      parameters:
      - explode: false
        in: query
        name: assetClass
        required: true
        schema:
          description: |
            Specify the security type of the given contract. Valid asset classes are:
             * `STK` - Stock
             * `OPT` - Option
             * `FUT` - Future
             * `CFD` - Contract for Difference
             * `WAR` - Warrant
             * `SWP` - Forex
             * `FND` - Mutual Fund
             * `BND` - Bond
             * `ICS` - Inter-Commodity Spread
          enum:
          - STK
          - OPT
          - FUT
          - CFD
          - WAR
          - SWP
          - FND
          - BND
          - ICS
          type: string
        style: form
      - explode: false
        in: query
        name: symbol
        required: true
        schema:
          description: Specify the symbol for your contract.
          example: AAPL
          type: string
        style: form
      - explode: false
        in: query
        name: exchange
        required: false
        schema:
          description: Specify the primary exchange of your contract.
          example: NASDAQ
          type: string
        style: form
      - explode: false
        in: query
        name: exchangeFilter
        required: false
        schema:
          description: Specify all exchanges you want to retrieve data from.
          example: "AMEX,NASDAQ,NYSE"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ibm-nyse:
                  value:
                  - id: p101781
                    tradeVenueId: v13038
                    exchange: NYSE
                    description: New York Stock Exchange
                    timezone: America/New_York
                    schedules:
                    - clearingCycleEndTime: "0000"
                      tradingScheduleDate: "20000101"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "0000"
                      tradingScheduleDate: "20000102"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "1700"
                      tradingScheduleDate: "20000103"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        prop: LIQUID
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "1700"
                      tradingScheduleDate: "20000104"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        prop: LIQUID
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "1700"
                      tradingScheduleDate: "20000105"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        prop: LIQUID
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "1700"
                      tradingScheduleDate: "20000106"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        prop: LIQUID
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "1700"
                      tradingScheduleDate: "20000107"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        prop: LIQUID
                        cancelDayOrders: "Y"
                    - clearingCycleEndTime: "0000"
                      tradingScheduleDate: "20240329"
                      sessions: []
                      tradingtimes:
                      - openingTime: "0035"
                        closingTime: "2330"
                        cancelDayOrders: "Y"
              schema:
                $ref: '#/components/schemas/tradingSchedule'
          description: Returns the trading schedule up to a month for the requested
            contract.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Trading Schedule By Symbol
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /trsrv/stocks:
    get:
      description: Returns an object contains all stock contracts for given symbol(s)
      parameters:
      - explode: false
        in: query
        name: symbols
        required: true
        schema:
          description: Comma-separated list of stock symbols. Symbols must contain
            only capitalized letters.
          example: "AAPL,IBKR"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ibm:
                  value:
                    IBM:
                    - name: INTL BUSINESS MACHINES CORP
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      assetClass: STK
                      contracts:
                      - conid: 8314
                        exchange: NYSE
                        isUS: true
                      - conid: 1411277
                        exchange: IBIS
                        isUS: false
                      - conid: 38709473
                        exchange: MEXI
                        isUS: false
                      - conid: 41645598
                        exchange: LSE
                        isUS: false
                    - name: INTL BUSINESS MACHINES C-CDR
                      chineseName: '&#x56FD;&#x9645;&#x5546;&#x4E1A;&#x673A;&#x5668;'
                      assetClass: STK
                      contracts:
                      - conid: 530091934
                        exchange: AEQLIT
                        isUS: false
              schema:
                $ref: '#/components/schemas/stocks'
          description: Successful response containing a contract's security definition.
        "400":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: bad request
        "401":
          content:
            text/plain; charset=utf-8:
              schema:
                description: reason why access denied
                nullable: true
                type: string
          description: access denied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorOnlyResponse'
          description: |
            internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
        "503":
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/errorResponse'
          description: |
            service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Stock Security Definition By Symbol
      tags:
      - Trading Contracts
      x-ib-provider: iblink
      x-accepts:
      - application/json
      - application/json; charset=utf-8
      - text/plain; charset=utf-8
  /ws:
    get:
      description: Open websocket.
      parameters:
      - explode: false
        in: header
        name: Connection
        required: true
        schema:
          enum:
          - Upgrade
          type: string
        style: simple
      - explode: false
        in: header
        name: Upgrade
        required: true
        schema:
          enum:
          - websocket
          type: string
        style: simple
      - description: 32-character Web API session cookie value.
        explode: false
        in: cookie
        name: api
        required: true
        schema:
          example: c8fh17fnjr01hfnrh39rhfh8shd1hd93
          type: string
        style: form
      - description: 8-character OAuth access token.
        explode: false
        in: query
        name: oauth_token
        required: true
        schema:
          example: a1b2c3d4
          type: string
        style: form
      responses:
        "101":
          description: Successful request to switch protocols.
          headers:
            Connection:
              explode: false
              schema:
                enum:
                - Upgrade
                type: string
              style: simple
            Upgrade:
              explode: false
              schema:
                enum:
                - websocket
                type: string
              style: simple
      servers:
      - description: Trading Production Base URL
        url: https://api.ibkr.com/v1/api
      - description: Trading Alpha Base URL
        url: https://api.ibkr.com/alpha/api
      summary: Open Websocket.
      tags:
      - Trading Websocket
      x-ib-provider: iblink
      x-accepts:
      - application/json
components:
  examples:
    DailyHTML:
      value:
        accountId: UXXXX
        startDate: "20230102"
        endDate: "20230102"
        mimeType: text/html
    DailyHTMLGZip:
      value:
        accountId: UXXXX
        startDate: "20230102"
        endDate: "20230102"
        mimeType: text/html
        gzip: true
    MonthlyPDF:
      value:
        accountId: UXXXX
        startDate: "202301"
        endDate: "202301"
        mimeType: application/pdf
  parameters:
    AccountIdRequestParam:
      description: Specifies the account id to retrieve information
      explode: false
      in: query
      name: accountId
      required: true
      schema:
        example: UXXXX
        type: string
      style: form
    AuthorizationHeaderParam:
      description: "Specifies the authorization header value (e.g., Bearer eyJ0eXAiOiJKV1...)."
      explode: false
      in: header
      name: authorization
      required: true
      schema:
        example: Bearer eyJ0eXAiOiJKV1...
        type: string
      style: simple
    TaxYearRequestParam:
      description: Specifies the tax year to retrieve information
      explode: false
      in: query
      name: year
      required: true
      schema:
        example: 2024
        format: int32
        type: integer
      style: form
    clientIdPathParam:
      description: The client's clientId
      explode: false
      in: path
      name: client-id
      required: true
      schema:
        example: abc123
        type: string
      style: simple
    clientInstructionIdPathParam:
      description: The target instruction id.
      explode: false
      in: path
      name: clientInstructionId
      required: true
      schema:
        example: -1988905739
        format: int32
        type: integer
      style: simple
    instructionIdPathParam:
      description: The target instruction id.
      explode: false
      in: path
      name: instructionId
      required: true
      schema:
        example: -1988905739
        format: int32
        type: integer
      style: simple
    instructionSetIdPathParam:
      description: The target instruction set id.
      explode: false
      in: path
      name: instructionSetId
      required: true
      schema:
        example: -1988905739
        format: int32
        type: integer
      style: simple
  requestBodies:
    CreateBrowserSessionRequestBody:
      content:
        application/jwt:
          schema:
            $ref: '#/components/schemas/CreateBrowserSessionRequest'
      description: Create browser session on behalf of end-user.
      required: true
    CreateSessionRequestBody:
      content:
        application/jwt:
          schema:
            $ref: '#/components/schemas/CreateSessionRequest'
      description: Create session on behalf of end-user.
      required: true
    SignedJwtEchoRequestBody:
      content:
        application/jwt:
          schema:
            $ref: '#/components/schemas/SignedJwtEchoRequest'
      description: Create a Signed JWT echo request.
      required: true
  responses:
    BadRequest:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: bad request
    IServerAccountBadRequest:
      content:
        application/json; charset=utf-8:
          examples:
            invalid-account-id:
              value:
                error: "Bad Request: accountId is not valid: 11110000"
                statusCode: 400
            account-is-not-set:
              value:
                error: "Bad Request: Please query /accounts first"
                statusCode: 400
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: bad request; passed input cannot pass initial validation and detected
        right away
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorOnlyResponse'
      description: |
        internal server error, returned when incoming request cannot be processed. It can sometimes include subset of bad requests.  For example, wrong accountId passed and it can only be detected later in handling request. Error contains reason of the problem.
    NoContent:
      description: no content
    ServiceUnavailable:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/errorResponse'
      description: |
        service is unavailable. For example if request takes more than 10s due to some internal service unavailability,  request aborted and this status returned
    Unauthorized:
      content:
        text/plain; charset=utf-8:
          schema:
            description: reason why access denied
            nullable: true
            type: string
      description: access denied
  schemas:
    ACHDetails:
      properties:
        custInitAch:
          type: boolean
        bankName:
          type: string
      type: object
    ACHInstruction:
      properties:
        custInitAch:
          type: boolean
        type:
          enum:
          - CREDIT
          - DEBIT
          - DEBIT_CREDIT
          type: string
        name:
          type: string
        bankName:
          type: string
        ibAccount:
          type: string
        bankCountry:
          type: string
        currency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountType:
          enum:
          - savings
          - checking
          type: string
      type: object
    AUSExposureDetailsType:
      properties:
        ausExposureRelationship:
          type: string
        personName:
          type: string
        licenseNumber:
          format: int32
          type: integer
      type: object
    AbandonAccount:
      properties:
        accountId:
          type: string
      type: object
    Account:
      properties:
        accountConfiguration:
          $ref: '#/components/schemas/AccountConfigurationType'
        investmentObjectives:
          items:
            enum:
            - Trading
            - Growth
            - Speculation
            - Hedging
            - Preservation
            - Income
            type: string
          type: array
        brokerageServiceCodes:
          items:
            enum:
            - IBClearing
            - IBExecution
            - IBPrime
            type: string
          type: array
        capabilities:
          items:
            enum:
            - BOND
            - FOP
            - FUND
            - FUT
            - MRGN
            - MULT
            - OPT
            - SSF
            - CFD
            - STK
            - CLP
            - LEVFX
            - CMDTY
            type: string
          type: array
        tradingPermissions:
          items:
            $ref: '#/components/schemas/TradingPermission'
          type: array
        commissionConfigs:
          items:
            $ref: '#/components/schemas/CommissionConfig'
          type: array
        allExchangeAccess:
          items:
            $ref: '#/components/schemas/ExchangeAccess'
          type: array
        dvpInstructions:
          items:
            $ref: '#/components/schemas/DVPInstruction'
          type: array
        tradingLimits:
          $ref: '#/components/schemas/TradingLimits'
        advisorWrapFees:
          $ref: '#/components/schemas/AdvisorWrapFeesType'
        feesTemplateName:
          type: string
        clientCommissionSchedule:
          $ref: '#/components/schemas/CommissionScheduleType'
        clientInterestMarkupSchedules:
          items:
            $ref: '#/components/schemas/InterestMarkupType'
          type: array
        decendent:
          $ref: '#/components/schemas/IRADecedent'
        iraBeneficiaries:
          $ref: '#/components/schemas/IRABeneficiariesType'
        extPositionsTransfers:
          items:
            $ref: '#/components/schemas/ExtPositionsTransferType'
          type: array
        depositNotification:
          $ref: '#/components/schemas/DepositNotification'
        achInstructions:
          items:
            $ref: '#/components/schemas/ACHInstruction'
          type: array
        recurringTransactions:
          items:
            $ref: '#/components/schemas/RecurringTransaction'
          type: array
        custodian:
          $ref: '#/components/schemas/CustodianType'
        successorCustodian:
          $ref: '#/components/schemas/CustodianType'
        accountRep:
          $ref: '#/components/schemas/AccountRep'
        id:
          type: string
        externalId:
          type: string
        propertyProfile:
          type: string
        baseCurrency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        employeePlan:
          type: string
        multiCurrency:
          type: boolean
        migration:
          type: boolean
        sourceAccountId:
          type: string
        margin:
          type: string
        ira:
          type: boolean
        iraType:
          enum:
          - RI
          - RO
          - RT
          - SP
          - ED
          - TH
          - RH
          - SH
          - RRSP
          - SRRSP
          - TFSA
          - SIMPLE
          - ISA
          type: string
        iraOfficialTitle:
          type: string
        clientActiveTrading:
          type: boolean
        duplicate:
          type: boolean
        numberOfDuplicates:
          format: int32
          type: integer
        stockYieldProgram:
          type: boolean
        alias:
          type: string
        accountType:
          enum:
          - Investment
          - Trading
          - SMSF
          type: string
        drip:
          type: boolean
        limitedOptions:
          type: boolean
      type: object
    AccountClose:
      properties:
        accountId:
          type: string
        closeReason:
          type: string
      type: object
    AccountCloseInstruction:
      maxProperties: 4
      minProperties: 2
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        closeReason:
          example: Input your reason of closure here
          maxLength: 2000
          minLength: 1
          type: string
        withdrawalInfo:
          $ref: '#/components/schemas/AccountCloseInstruction_withdrawalInfo'
      required:
      - accountId
      - clientInstructionId
      type: object
    AccountConfiguration:
      properties:
        accountId:
          type: string
        type:
          type: string
        value:
          type: boolean
      type: object
    AccountConfigurationType:
      properties:
        type:
          type: string
          xml:
            attribute: true
        value:
          type: boolean
          xml:
            attribute: true
      type: object
    AccountData:
      example:
        dateLinked: dateLinked
        accountAlias: accountAlias
        dateBegun: dateBegun
        businessDescription: businessDescription
        accountTitle: accountTitle
        tradeIntentionType: tradeIntentionType
        dateClosed: dateClosed
        mailing:
          key: mailing
        feeTemplate:
          key: feeTemplate
        equity: 0.8008281904610115
        taxIds:
        - key: taxIds
        - key: taxIds
        baseCurrency: baseCurrency
        orgType: orgType
        emailAddress: emailAddress
        registeredAddress:
          key: registeredAddress
        dateOpened: dateOpened
        applicantType: applicantType
        stockYieldProgram:
          key: stockYieldProgram
        dateApproved: dateApproved
        dateDelinked: dateDelinked
        investmentObjectives:
        - investmentObjectives
        - investmentObjectives
        processType: processType
        riskScore: 6
        mifirStatus: mifirStatus
        limitedOptionTrading: limitedOptionTrading
        dateFunded: dateFunded
        sourceAccountId: sourceAccountId
        clearingStatus: clearingStatus
        margin: margin
        clearingStatusDescription: clearingStatusDescription
        capabilities:
          key:
          - capabilities
          - capabilities
        propertyProfile: propertyProfile
        taxTreatyDetails:
        - key: taxTreatyDetails
        - key: taxTreatyDetails
        mainAccount: mainAccount
        primaryUser: primaryUser
        externalId: externalId
        countryOfCorporation: countryOfCorporation
        officialTitle: officialTitle
        masterAccountId: masterAccountId
        accountId: accountId
        usTaxPurposeType: usTaxPurposeType
        household: household
        stateCode: stateCode
        subType: subType
        trustType: trustType
        class_action_program: class_action_program
        mifidCategory: mifidCategory
      properties:
        accountId:
          type: string
        masterAccountId:
          type: string
        mainAccount:
          type: string
        sourceAccountId:
          type: string
        primaryUser:
          type: string
        clearingStatus:
          type: string
        clearingStatusDescription:
          type: string
        stateCode:
          type: string
        baseCurrency:
          type: string
        dateBegun:
          type: string
        dateApproved:
          type: string
        dateOpened:
          type: string
        dateFunded:
          type: string
        dateClosed:
          type: string
        dateLinked:
          type: string
        dateDelinked:
          type: string
        accountTitle:
          type: string
        officialTitle:
          type: string
        accountAlias:
          type: string
        emailAddress:
          type: string
        margin:
          type: string
        applicantType:
          type: string
        subType:
          type: string
        stockYieldProgram:
          additionalProperties:
            type: string
          type: object
        feeTemplate:
          additionalProperties:
            type: string
          type: object
        capabilities:
          additionalProperties:
            items:
              type: string
            type: array
            uniqueItems: true
          type: object
        limitedOptionTrading:
          type: string
        investmentObjectives:
          items:
            type: string
          type: array
          uniqueItems: true
        externalId:
          type: string
        mifidCategory:
          type: string
        mifirStatus:
          type: string
        equity:
          format: double
          type: number
        household:
          type: string
        propertyProfile:
          type: string
        processType:
          type: string
        riskScore:
          format: int32
          type: integer
        class_action_program:
          type: string
        trustType:
          type: string
        orgType:
          type: string
        businessDescription:
          type: string
        usTaxPurposeType:
          type: string
        tradeIntentionType:
          type: string
        registeredAddress:
          additionalProperties:
            type: string
          type: object
        mailing:
          additionalProperties:
            type: string
          type: object
        countryOfCorporation:
          type: string
        taxIds:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        taxTreatyDetails:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
      type: object
    AccountDetailsResponse:
      example:
        financialInformation:
          key: "{}"
        errorDescription: errorDescription
        entityIRABeneficiaries:
        - entityType: entityType
          name: name
          location:
            key: location
          type: type
          articleOfWill: articleOfWill
        - entityType: entityType
          name: name
          location:
            key: location
          type: type
          articleOfWill: articleOfWill
        individualIRABeneficiaries:
        - firstName: firstName
          lastName: lastName
          identification:
            key: identification
          ownership: 2
          dateOfBirth: dateOfBirth
          location:
            key: location
          type: type
          relationship: relationship
          perStripes: perStripes
        - firstName: firstName
          lastName: lastName
          identification:
            key: identification
          ownership: 2
          dateOfBirth: dateOfBirth
          location:
            key: location
          type: type
          relationship: relationship
          perStripes: perStripes
        restrictions:
        - name: name
          id: 7
          byIB: true
        - name: name
          id: 7
          byIB: true
        associatedPersons:
        - associations:
          - associations
          - associations
          lastName: lastName
          lastLogin: lastLogin
          commercial: commercial
          userStatus: userStatus
          numberOfDependents: 5
          externalCode: externalCode
          gender: gender
          subscribedServices:
          - key: "{}"
          - key: "{}"
          phones:
            key: phones
          securityDevice: securityDevice
          suffix: suffix
          mailing:
            key: mailing
          middleInitial: middleInitial
          motersMaidenName: motersMaidenName
          countryOfBirth: countryOfBirth
          residence:
            key: residence
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          employmentType: employmentType
          employmentDetails:
            key: "{}"
          entityId: 1
          dateOfBirth: dateOfBirth
          passwordDate: passwordDate
          firstName: firstName
          countryOfCitizenship: countryOfCitizenship
          middleName: middleName
          salutation: salutation
          maritalStatus: maritalStatus
          username: username
        - associations:
          - associations
          - associations
          lastName: lastName
          lastLogin: lastLogin
          commercial: commercial
          userStatus: userStatus
          numberOfDependents: 5
          externalCode: externalCode
          gender: gender
          subscribedServices:
          - key: "{}"
          - key: "{}"
          phones:
            key: phones
          securityDevice: securityDevice
          suffix: suffix
          mailing:
            key: mailing
          middleInitial: middleInitial
          motersMaidenName: motersMaidenName
          countryOfBirth: countryOfBirth
          residence:
            key: residence
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          employmentType: employmentType
          employmentDetails:
            key: "{}"
          entityId: 1
          dateOfBirth: dateOfBirth
          passwordDate: passwordDate
          firstName: firstName
          countryOfCitizenship: countryOfCitizenship
          middleName: middleName
          salutation: salutation
          maritalStatus: maritalStatus
          username: username
        withHoldingStatement:
          key: withHoldingStatement
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        decedents:
        - key: decedents
        - key: decedents
        sourcesOfWealth:
        - key: "{}"
        - key: "{}"
        associatedEntities:
        - associations:
          - associations
          - associations
          AssociatedPersons:
          - associations:
            - associations
            - associations
            lastName: lastName
            lastLogin: lastLogin
            commercial: commercial
            userStatus: userStatus
            numberOfDependents: 5
            externalCode: externalCode
            gender: gender
            subscribedServices:
            - key: "{}"
            - key: "{}"
            phones:
              key: phones
            securityDevice: securityDevice
            suffix: suffix
            mailing:
              key: mailing
            middleInitial: middleInitial
            motersMaidenName: motersMaidenName
            countryOfBirth: countryOfBirth
            residence:
              key: residence
            identityDocuments:
            - key: identityDocuments
            - key: identityDocuments
            email: email
            taxTreatyDetails:
            - key: taxTreatyDetails
            - key: taxTreatyDetails
            employmentType: employmentType
            employmentDetails:
              key: "{}"
            entityId: 1
            dateOfBirth: dateOfBirth
            passwordDate: passwordDate
            firstName: firstName
            countryOfCitizenship: countryOfCitizenship
            middleName: middleName
            salutation: salutation
            maritalStatus: maritalStatus
            username: username
          - associations:
            - associations
            - associations
            lastName: lastName
            lastLogin: lastLogin
            commercial: commercial
            userStatus: userStatus
            numberOfDependents: 5
            externalCode: externalCode
            gender: gender
            subscribedServices:
            - key: "{}"
            - key: "{}"
            phones:
              key: phones
            securityDevice: securityDevice
            suffix: suffix
            mailing:
              key: mailing
            middleInitial: middleInitial
            motersMaidenName: motersMaidenName
            countryOfBirth: countryOfBirth
            residence:
              key: residence
            identityDocuments:
            - key: identityDocuments
            - key: identityDocuments
            email: email
            taxTreatyDetails:
            - key: taxTreatyDetails
            - key: taxTreatyDetails
            employmentType: employmentType
            employmentDetails:
              key: "{}"
            entityId: 1
            dateOfBirth: dateOfBirth
            passwordDate: passwordDate
            firstName: firstName
            countryOfCitizenship: countryOfCitizenship
            middleName: middleName
            salutation: salutation
            maritalStatus: maritalStatus
            username: username
          organizationCountry: organizationCountry
          externalCode: externalCode
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          name: name
          phones:
            key: phones
          entityId: 5
          residence:
            key: residence
          mailing:
            key: mailing
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
        - associations:
          - associations
          - associations
          AssociatedPersons:
          - associations:
            - associations
            - associations
            lastName: lastName
            lastLogin: lastLogin
            commercial: commercial
            userStatus: userStatus
            numberOfDependents: 5
            externalCode: externalCode
            gender: gender
            subscribedServices:
            - key: "{}"
            - key: "{}"
            phones:
              key: phones
            securityDevice: securityDevice
            suffix: suffix
            mailing:
              key: mailing
            middleInitial: middleInitial
            motersMaidenName: motersMaidenName
            countryOfBirth: countryOfBirth
            residence:
              key: residence
            identityDocuments:
            - key: identityDocuments
            - key: identityDocuments
            email: email
            taxTreatyDetails:
            - key: taxTreatyDetails
            - key: taxTreatyDetails
            employmentType: employmentType
            employmentDetails:
              key: "{}"
            entityId: 1
            dateOfBirth: dateOfBirth
            passwordDate: passwordDate
            firstName: firstName
            countryOfCitizenship: countryOfCitizenship
            middleName: middleName
            salutation: salutation
            maritalStatus: maritalStatus
            username: username
          - associations:
            - associations
            - associations
            lastName: lastName
            lastLogin: lastLogin
            commercial: commercial
            userStatus: userStatus
            numberOfDependents: 5
            externalCode: externalCode
            gender: gender
            subscribedServices:
            - key: "{}"
            - key: "{}"
            phones:
              key: phones
            securityDevice: securityDevice
            suffix: suffix
            mailing:
              key: mailing
            middleInitial: middleInitial
            motersMaidenName: motersMaidenName
            countryOfBirth: countryOfBirth
            residence:
              key: residence
            identityDocuments:
            - key: identityDocuments
            - key: identityDocuments
            email: email
            taxTreatyDetails:
            - key: taxTreatyDetails
            - key: taxTreatyDetails
            employmentType: employmentType
            employmentDetails:
              key: "{}"
            entityId: 1
            dateOfBirth: dateOfBirth
            passwordDate: passwordDate
            firstName: firstName
            countryOfCitizenship: countryOfCitizenship
            middleName: middleName
            salutation: salutation
            maritalStatus: maritalStatus
            username: username
          organizationCountry: organizationCountry
          externalCode: externalCode
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          name: name
          phones:
            key: phones
          entityId: 5
          residence:
            key: residence
          mailing:
            key: mailing
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
        marketData:
        - key: marketData
        - key: marketData
        tradeBundles:
        - tradeBundles
        - tradeBundles
        hasError: true
        account:
          dateLinked: dateLinked
          accountAlias: accountAlias
          dateBegun: dateBegun
          businessDescription: businessDescription
          accountTitle: accountTitle
          tradeIntentionType: tradeIntentionType
          dateClosed: dateClosed
          mailing:
            key: mailing
          feeTemplate:
            key: feeTemplate
          equity: 0.8008281904610115
          taxIds:
          - key: taxIds
          - key: taxIds
          baseCurrency: baseCurrency
          orgType: orgType
          emailAddress: emailAddress
          registeredAddress:
            key: registeredAddress
          dateOpened: dateOpened
          applicantType: applicantType
          stockYieldProgram:
            key: stockYieldProgram
          dateApproved: dateApproved
          dateDelinked: dateDelinked
          investmentObjectives:
          - investmentObjectives
          - investmentObjectives
          processType: processType
          riskScore: 6
          mifirStatus: mifirStatus
          limitedOptionTrading: limitedOptionTrading
          dateFunded: dateFunded
          sourceAccountId: sourceAccountId
          clearingStatus: clearingStatus
          margin: margin
          clearingStatusDescription: clearingStatusDescription
          capabilities:
            key:
            - capabilities
            - capabilities
          propertyProfile: propertyProfile
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          mainAccount: mainAccount
          primaryUser: primaryUser
          externalId: externalId
          countryOfCorporation: countryOfCorporation
          officialTitle: officialTitle
          masterAccountId: masterAccountId
          accountId: accountId
          usTaxPurposeType: usTaxPurposeType
          household: household
          stateCode: stateCode
          subType: subType
          trustType: trustType
          class_action_program: class_action_program
          mifidCategory: mifidCategory
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        account:
          $ref: '#/components/schemas/AccountData'
        associatedPersons:
          items:
            $ref: '#/components/schemas/AssociatedPerson'
          type: array
        associatedEntities:
          items:
            $ref: '#/components/schemas/AssociatedEntity'
          type: array
        withHoldingStatement:
          additionalProperties:
            type: string
          type: object
        marketData:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        financialInformation:
          additionalProperties:
            type: object
          type: object
        sourcesOfWealth:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        tradeBundles:
          items:
            type: string
          type: array
        individualIRABeneficiaries:
          items:
            $ref: '#/components/schemas/IndividualIRABene'
          type: array
        entityIRABeneficiaries:
          items:
            $ref: '#/components/schemas/EntityIRABene'
          type: array
        decedents:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        restrictions:
          items:
            $ref: '#/components/schemas/RestrictionInfo'
          type: array
          uniqueItems: true
      type: object
    AccountManagementRequests:
      properties:
        updateExternalId:
          $ref: '#/components/schemas/UpdateExternalId'
        updatePropertyProfile:
          $ref: '#/components/schemas/UpdatePropertyProfile'
        updateAccountAlias:
          $ref: '#/components/schemas/UpdateAccountAlias'
        changeBaseCurrency:
          $ref: '#/components/schemas/ChangeBaseCurrency'
        abandonAccount:
          $ref: '#/components/schemas/AbandonAccount'
        addNewUser:
          $ref: '#/components/schemas/AddNewUser'
        addLevFxCapability:
          $ref: '#/components/schemas/AddLEVFXCapability'
        addMiFirData:
          $ref: '#/components/schemas/AddMiFIRData'
        addTradingPermissions:
          $ref: '#/components/schemas/AddTradingPermissions'
        removeTradingPermissions:
          $ref: '#/components/schemas/RemoveTradingPermissions'
        changeMarginType:
          $ref: '#/components/schemas/ChangeMarginType'
        addCLPCapability:
          $ref: '#/components/schemas/AddCLPCapability'
        changeFinancialInformation:
          $ref: '#/components/schemas/ChangeFinancialInformation'
        resetAbandonedAccount:
          $ref: '#/components/schemas/ResetAbandonedAccount'
        updateCredentials:
          $ref: '#/components/schemas/UpdateCredentials'
        updateAccountRepresentatives:
          $ref: '#/components/schemas/UpdateAccountRepresentatives'
        completeLoginMessage:
          $ref: '#/components/schemas/CompleteLoginMessage'
        reopenAccount:
          $ref: '#/components/schemas/ReopenAccount'
        enrollInSyep:
          $ref: '#/components/schemas/EnrollInSYEP'
        leaveSyep:
          $ref: '#/components/schemas/LeaveSYEP'
        enrollInDrip:
          $ref: '#/components/schemas/EnrollInDRIP'
        leaveDrip:
          $ref: '#/components/schemas/LeaveDRIP'
        updateW8Ben:
          $ref: '#/components/schemas/UpdateW8BEN'
        yodleeSession:
          $ref: '#/components/schemas/YodleeSession'
        enableAccountInBrokerage:
          $ref: '#/components/schemas/EnableAccountInBrokerage'
        disableAccountInBrokerage:
          $ref: '#/components/schemas/DisableAccountInBrokerage'
        linkDuplicateAccount:
          $ref: '#/components/schemas/LinkDuplicateAccount'
        duplicateAccount:
          $ref: '#/components/schemas/DuplicateAccount'
        achInstruction:
          $ref: '#/components/schemas/ACHInstruction'
        recurringTransaction:
          $ref: '#/components/schemas/RecurringTransaction'
        depositNotification:
          $ref: '#/components/schemas/DepositNotification'
        documentSubmission:
          $ref: '#/components/schemas/DocumentSubmission'
        processDocuments:
          $ref: '#/components/schemas/ProcessDocuments'
        updateBcan:
          $ref: '#/components/schemas/UpdateBCAN'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaire'
        updateWithholdingStatement:
          $ref: '#/components/schemas/UpdateWithholdingStatement'
        accreditedInvestor:
          $ref: '#/components/schemas/AccreditedInvestor'
        changeAccountHolderDetail:
          $ref: '#/components/schemas/ChangeAccountHolderDetail'
        getJavaScript:
          $ref: '#/components/schemas/GetJavaScript'
        updateUserAccessRights:
          $ref: '#/components/schemas/UpdateUserAccessRights'
        informationChange:
          $ref: '#/components/schemas/InformationChange'
        addAdditionalAccount:
          $ref: '#/components/schemas/AddAdditionalAccount'
        accountConfiguration:
          $ref: '#/components/schemas/AccountConfiguration'
        allocateVan:
          $ref: '#/components/schemas/AllocateVAN'
        createUserForSecondHolder:
          $ref: '#/components/schemas/CreateUserForSecondHolder'
        createUser:
          $ref: '#/components/schemas/CreateUser'
        updateTaxForm:
          $ref: '#/components/schemas/UpdateTaxForm'
        questionnaires:
          $ref: '#/components/schemas/Questionnaires'
        securityQuestions:
          $ref: '#/components/schemas/SecurityQuestions'
        applyFeeTemplate:
          $ref: '#/components/schemas/ApplyFeeTemplate'
        accountClose:
          $ref: '#/components/schemas/AccountClose'
        manageMarketDataSubscriptions:
          $ref: '#/components/schemas/ManageMarketDataSubscriptions'
        quizQuestionnaires:
          $ref: '#/components/schemas/QuizQuestionnaires'
      type: object
    AccountManagementRequestsPayload:
      properties:
        accountManagementRequests:
          $ref: '#/components/schemas/AccountManagementRequests'
      type: object
    AccountRep:
      properties:
        repDetails:
          items:
            $ref: '#/components/schemas/RepDetail'
          type: array
        included:
          type: boolean
      type: object
    AccountStatusBulkResponse:
      example:
        total: 1
        offset: 0
        limit: 6
        accounts:
        - accountId: accountId
          dateOpened: 2000-01-23T04:56:07.000+00:00
          dateStarted: 2000-01-23T04:56:07.000+00:00
          description: description
          state: state
          dateClosed: 2000-01-23T04:56:07.000+00:00
          masterAccountId: masterAccountId
          status: status
        - accountId: accountId
          dateOpened: 2000-01-23T04:56:07.000+00:00
          dateStarted: 2000-01-23T04:56:07.000+00:00
          description: description
          state: state
          dateClosed: 2000-01-23T04:56:07.000+00:00
          masterAccountId: masterAccountId
          status: status
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountStatusResponse'
          type: array
        offset:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    AccountStatusRequest:
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        offset:
          format: int32
          minimum: 0
          type: integer
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        status:
          enum:
          - "N"
          - O
          - P
          - C
          - A
          - E
          - F
          - I
          - J
          - L
          - M
          - R
          - W
          - Q
          type: string
      required:
      - endDate
      - startDate
      type: object
    AccountStatusResponse:
      example:
        accountId: accountId
        dateOpened: 2000-01-23T04:56:07.000+00:00
        dateStarted: 2000-01-23T04:56:07.000+00:00
        description: description
        state: state
        dateClosed: 2000-01-23T04:56:07.000+00:00
        masterAccountId: masterAccountId
        status: status
      properties:
        dateOpened:
          format: date-time
          type: string
        dateStarted:
          format: date-time
          type: string
        dateClosed:
          format: date-time
          type: string
        accountId:
          type: string
        status:
          type: string
        description:
          type: string
        masterAccountId:
          type: string
        state:
          type: string
      type: object
    AccountSupportType:
      properties:
        businessDescription:
          type: string
        primaryContributor:
          $ref: '#/components/schemas/PrimaryContributorType'
        administrator:
          $ref: '#/components/schemas/AdministratorType'
        administratorContactPerson:
          $ref: '#/components/schemas/AdministratorContactPersonType'
        ownersResideUS:
          type: boolean
        solicitOwnersResideUS:
          type: boolean
        acceptOwnersResideUS:
          type: boolean
        type:
          enum:
          - FINANCIALINSTITUTION
          - PROPRIETARYTRADING
          - FAMILYINVVEHICLE
          - OPERATINGBUSINESS
          - BROKERDEALER
          - LICENSEDADVISOR
          type: string
      type: object
    AccreditedInvestor:
      properties:
        qualifiedPurchaser:
          $ref: '#/components/schemas/QualifiedPurchaser'
        eligibleContractParticipant:
          $ref: '#/components/schemas/EligibleContractParticipant'
        signedBy:
          items:
            type: string
          type: array
        accountId:
          type: string
        status:
          type: boolean
        signature:
          type: string
      type: object
    AccreditedInvestorInformation:
      properties:
        q1:
          type: boolean
        q2:
          type: boolean
        q3:
          type: boolean
        q4:
          type: boolean
        q5:
          type: boolean
      type: object
    AchInstruction:
      maxProperties: 7
      minProperties: 7
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        bankInstructionCode:
          enum:
          - CAACH
          - USACH
          example: USACH
          type: string
        achType:
          enum:
          - DEBIT
          - CREDIT
          - DEBIT_CREDIT
          example: DEBIT_CREDIT
          type: string
        bankInstructionName:
          example: TestInstr
          maxLength: 100
          minLength: 1
          type: string
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
        accountId:
          example: U223454
          maxLength: 32
          minLength: 1
          type: string
        clientAccountInfo:
          $ref: '#/components/schemas/AchInstruction_clientAccountInfo'
      required:
      - accountId
      - achType
      - bankInstructionCode
      - bankInstructionName
      - clientAccountInfo
      - clientInstructionId
      - currency
      type: object
    AddAdditionalAccount:
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        account:
          $ref: '#/components/schemas/Account'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
        accountId:
          type: string
      type: object
    AddCLPCapability:
      properties:
        accountId:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    AddEntity:
      properties:
        addRelationships:
          items:
            $ref: '#/components/schemas/AddRelationship'
          type: array
        individual:
          $ref: '#/components/schemas/Individual'
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    AddLEVFXCapability:
      properties:
        accountId:
          type: string
      type: object
    AddMiFIRData:
      properties:
        accountId:
          type: string
        title:
          type: string
        identifications:
          items:
            $ref: '#/components/schemas/Identification'
          type: array
      type: object
    AddNewUser:
      properties:
        accountId:
          type: string
        prefix:
          type: string
        userDetails:
          $ref: '#/components/schemas/UserDetails'
      type: object
    AddRelationship:
      properties:
        name:
          enum:
          - Account_Holder
          - Spouse
          - Firstholder
          - Secondholder
          - Trader
          - Secretary
          - Treasurer
          - Ceo
          - Owner
          - Trustee
          - Beneficiary
          - Grantor
          - Director
          - Principal
          - Shareholder
          - Partner
          - Controlling_Officer
          - Beneficialowner
          - Signatory
          - Comp_Officer
          - Superv_Broker
          - Pooled_User
          - Financial_User
          - Contingent
          - Ira_Beneficiary
          - Employee
          - Non_Employee
          - Fund_Admin
          - Fund_Contact
          - Firm_Admin
          - Firm_Billing
          - Firm_Clearing
          - Firm_Sales
          - Firm_Trading
          - Firm_User
          - Account_Admin
          - Account_Billing
          - Account_Clearing
          - Account_Sales
          - Account_Trading
          - User_Individual
          - Fund_Manager
          - Investment_Advisor
          - Shf_Investmanager
          - Advisory_Principal
          - Advisory_Signatory
          - Associated_Fund
          - Primary_Contributor
          - Administrator
          - Contact
          - Lead_Compliance_Officer
          - Compliance_Officer
          - Other_Officer
          - Apply_User
          - Transfer_On_Death_Legator
          - Tod_Primary_Beneficiary
          - Tod_Contingent_Beneficiary
          - Nominee
          - Nominee_Guardian
          - Ira_Decedent
          - Authorized_Person
          - Promoter
          - Wholetime_Director
          - Nominee_Owner
          - Third_Party_Admin
          - Compliance_Contact
          - Trust_Controller
          - Trust_Applicant
          - Organization_Applicant
          - Mm_Contact
          - Reg_Rep
          - Plan_Sponsor
          - Plan_Sponsor_Officer
          - Pension_Admin
          - Pension_Admin_Contact
          - Accountant
          - Joint_Applicant
          - Custodian_Employee
          - Successor_Custodian
          - Custodian
          - Successor_Custodian_Employee
          - Chief_Compliance_Officer
          - Chief_Financial_Officer
          - Trading_Officer
          - Child
          - Parent
          - Sibling
          - Estate
          - As_Interest_May_Appear
          - Ira_Present_Trust
          - Other
          - Life_Partner
          - Common_Law_Partner
          - Grandchild
          - Charity
          - Trust_Ira
          - Successor_Holder
          - Head_Of_Desk
          - Cftc_Non_Applicant_Ocr_Contact
          - Ocr_Account_Controller
          - Cftc_Applicant_Ocr_Contact
          type: string
        ownershipPercentage:
          format: int32
          type: integer
      type: object
    AddTradingPermissions:
      properties:
        tradingPermissions:
          items:
            $ref: '#/components/schemas/TradingPermission'
          type: array
        documentSubmission:
          $ref: '#/components/schemas/DocumentSubmission'
        accountId:
          type: string
      type: object
    Address:
      properties:
        street1:
          type: string
        street2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        postalCode:
          type: string
      type: object
    AdministratorContactPersonType:
      properties:
        firstName:
          type: string
        middleInitial:
          type: string
        lastName:
          type: string
        suffix:
          enum:
          - Jr.
          - Sr.
          - I
          - II
          - III
          - IV
          - V
          type: string
        phoneNumber:
          type: string
      type: object
    AdministratorType:
      properties:
        firstName:
          type: string
        middleInitial:
          type: string
        lastName:
          type: string
        suffix:
          enum:
          - Jr.
          - Sr.
          - I
          - II
          - III
          - IV
          - V
          type: string
        address:
          $ref: '#/components/schemas/Address'
      type: object
    AdvisorWrapFeesType:
      properties:
        automatedFeesDetails:
          items:
            $ref: '#/components/schemas/AutomatedWrapFeeDetailsType'
          type: array
        highWaterMarkConfigHwma:
          $ref: '#/components/schemas/HighWaterMarkType'
        highWaterMarkConfigHwmq:
          $ref: '#/components/schemas/HighWaterMarkType'
        strategy:
          enum:
          - AUTOMATED
          - DIRECTBILLING
          - NO_FEE
          type: string
        chargeAdvisor:
          type: boolean
        chargeOtherFeesToAdvisor:
          type: boolean
      type: object
    AffiliationDetailsType:
      properties:
        affiliationRelationship:
          enum:
          - Self
          - Spouse
          - Parent
          - Child
          - Other
          type: string
        personName:
          type: string
        companyId:
          format: int32
          type: integer
        company:
          type: string
        companyMailingAddress:
          $ref: '#/components/schemas/Address'
        companyPhone:
          type: string
        companyEmailAddress:
          type: string
        duplicateStmtRequired:
          type: boolean
      type: object
    AllocateVAN:
      properties:
        accountId:
          type: string
        currency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        countryCode:
          type: string
      type: object
    AllowedScopeSet:
      properties:
        scopes:
          $ref: '#/components/schemas/RegisteredScopeSet'
      type: object
    AmRequestStatusResponse:
      example:
        requestType: requestType
        requestId: requestId
        acctId: acctId
        message: message
        status: status
      properties:
        requestId:
          type: string
        requestType:
          type: string
        status:
          type: string
        message:
          type: string
        acctId:
          type: string
      type: object
    AnnualBlendedPercentage:
      properties:
        blendedFrom:
          type: string
        blendedTo:
          type: string
        percentage:
          type: string
      type: object
    Answer:
      properties:
        answerDetail:
          items:
            $ref: '#/components/schemas/AnswerDetail'
          type: array
        detail:
          type: string
        id:
          format: int32
          type: integer
        questionId:
          format: int32
          type: integer
      type: object
    AnswerDetail:
      properties:
        name:
          type: string
        detail:
          type: string
      type: object
    Application:
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        accounts:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        additionalAccounts:
          items:
            $ref: '#/components/schemas/AddAdditionalAccount'
          type: array
        masterAccountId:
          type: string
        id:
          type: string
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        translation:
          type: boolean
        paperAccount:
          type: boolean
      type: object
    ApplicationPayload:
      properties:
        application:
          $ref: '#/components/schemas/Application'
      type: object
    ApplyFeeTemplate:
      properties:
        accountId:
          type: string
        templateName:
          type: string
      type: object
    ApplyFeeTemplateInstruction:
      maxProperties: 3
      minProperties: 3
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        templateName:
          example: Test template
          maxLength: 64
          minLength: 1
          type: string
      required:
      - accountId
      - clientInstructionId
      - templateName
      type: object
    ArrayNode:
      type: object
    AssetExperience:
      properties:
        assetClass:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        yearsTrading:
          format: int32
          type: integer
        tradesPerYear:
          format: int32
          type: integer
        knowledgeLevel:
          enum:
          - Extensive
          - Good
          - Limited
          - None
          type: string
      type: object
    AssociatedEntities:
      properties:
        associatedIndividuals:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        associatedEntities:
          items:
            $ref: '#/components/schemas/AssociatedEntity'
          type: array
      type: object
    AssociatedEntity:
      example:
        associations:
        - associations
        - associations
        AssociatedPersons:
        - associations:
          - associations
          - associations
          lastName: lastName
          lastLogin: lastLogin
          commercial: commercial
          userStatus: userStatus
          numberOfDependents: 5
          externalCode: externalCode
          gender: gender
          subscribedServices:
          - key: "{}"
          - key: "{}"
          phones:
            key: phones
          securityDevice: securityDevice
          suffix: suffix
          mailing:
            key: mailing
          middleInitial: middleInitial
          motersMaidenName: motersMaidenName
          countryOfBirth: countryOfBirth
          residence:
            key: residence
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          employmentType: employmentType
          employmentDetails:
            key: "{}"
          entityId: 1
          dateOfBirth: dateOfBirth
          passwordDate: passwordDate
          firstName: firstName
          countryOfCitizenship: countryOfCitizenship
          middleName: middleName
          salutation: salutation
          maritalStatus: maritalStatus
          username: username
        - associations:
          - associations
          - associations
          lastName: lastName
          lastLogin: lastLogin
          commercial: commercial
          userStatus: userStatus
          numberOfDependents: 5
          externalCode: externalCode
          gender: gender
          subscribedServices:
          - key: "{}"
          - key: "{}"
          phones:
            key: phones
          securityDevice: securityDevice
          suffix: suffix
          mailing:
            key: mailing
          middleInitial: middleInitial
          motersMaidenName: motersMaidenName
          countryOfBirth: countryOfBirth
          residence:
            key: residence
          identityDocuments:
          - key: identityDocuments
          - key: identityDocuments
          email: email
          taxTreatyDetails:
          - key: taxTreatyDetails
          - key: taxTreatyDetails
          employmentType: employmentType
          employmentDetails:
            key: "{}"
          entityId: 1
          dateOfBirth: dateOfBirth
          passwordDate: passwordDate
          firstName: firstName
          countryOfCitizenship: countryOfCitizenship
          middleName: middleName
          salutation: salutation
          maritalStatus: maritalStatus
          username: username
        organizationCountry: organizationCountry
        externalCode: externalCode
        taxTreatyDetails:
        - key: taxTreatyDetails
        - key: taxTreatyDetails
        name: name
        phones:
          key: phones
        entityId: 5
        residence:
          key: residence
        mailing:
          key: mailing
        identityDocuments:
        - key: identityDocuments
        - key: identityDocuments
        email: email
      properties:
        entityId:
          format: int32
          type: integer
        externalCode:
          type: string
        name:
          type: string
        email:
          type: string
        organizationCountry:
          type: string
        phones:
          additionalProperties:
            type: string
          type: object
        residence:
          additionalProperties:
            type: string
          type: object
        mailing:
          additionalProperties:
            type: string
          type: object
        associations:
          items:
            type: string
          type: array
          uniqueItems: true
        identityDocuments:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        taxTreatyDetails:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        AssociatedPersons:
          items:
            $ref: '#/components/schemas/AssociatedPerson'
          type: array
      type: object
    AssociatedIndividual:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
        ownershipPercentage:
          type: number
        titles:
          items:
            $ref: '#/components/schemas/Title'
          type: array
        authorizedPerson:
          type: boolean
        referenceUsername:
          type: string
      type: object
    AssociatedPerson:
      example:
        associations:
        - associations
        - associations
        lastName: lastName
        lastLogin: lastLogin
        commercial: commercial
        userStatus: userStatus
        numberOfDependents: 5
        externalCode: externalCode
        gender: gender
        subscribedServices:
        - key: "{}"
        - key: "{}"
        phones:
          key: phones
        securityDevice: securityDevice
        suffix: suffix
        mailing:
          key: mailing
        middleInitial: middleInitial
        motersMaidenName: motersMaidenName
        countryOfBirth: countryOfBirth
        residence:
          key: residence
        identityDocuments:
        - key: identityDocuments
        - key: identityDocuments
        email: email
        taxTreatyDetails:
        - key: taxTreatyDetails
        - key: taxTreatyDetails
        employmentType: employmentType
        employmentDetails:
          key: "{}"
        entityId: 1
        dateOfBirth: dateOfBirth
        passwordDate: passwordDate
        firstName: firstName
        countryOfCitizenship: countryOfCitizenship
        middleName: middleName
        salutation: salutation
        maritalStatus: maritalStatus
        username: username
      properties:
        entityId:
          format: int32
          type: integer
        externalCode:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        middleInitial:
          type: string
        lastName:
          type: string
        suffix:
          type: string
        username:
          type: string
        passwordDate:
          type: string
        userStatus:
          type: string
        lastLogin:
          type: string
        gender:
          type: string
        maritalStatus:
          type: string
        salutation:
          type: string
        email:
          type: string
        countryOfCitizenship:
          type: string
        countryOfBirth:
          type: string
        dateOfBirth:
          type: string
        motersMaidenName:
          type: string
        numberOfDependents:
          format: int32
          type: integer
        securityDevice:
          type: string
        commercial:
          type: string
        phones:
          additionalProperties:
            type: string
          type: object
        residence:
          additionalProperties:
            type: string
          type: object
        mailing:
          additionalProperties:
            type: string
          type: object
        associations:
          items:
            type: string
          type: array
          uniqueItems: true
        identityDocuments:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        employmentType:
          type: string
        employmentDetails:
          additionalProperties:
            type: object
          type: object
        subscribedServices:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
        taxTreatyDetails:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
      type: object
    AssociationTypeEntities:
      properties:
        individual:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        legalEntity:
          items:
            $ref: '#/components/schemas/LegalEntity'
          type: array
      type: object
    AsynchronousInstructionResponse:
      $ref: '#/components/schemas/InstructionResponse'
    AttachedFileType:
      properties:
        fileName:
          type: string
        fileLength:
          format: int32
          type: integer
        sha1Checksum:
          type: string
      type: object
    Au10TixDetailResponse:
      example:
        expiryDate: 2000-01-23T04:56:07.000+00:00
        errorDescription: errorDescription
        externalId: externalId
        entityId: 0
        hasError: true
        state: state
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        startDate: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        startDate:
          format: date-time
          type: string
        expiryDate:
          format: date-time
          type: string
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        url:
          type: string
        externalId:
          type: string
        entityId:
          format: int32
          type: integer
        state:
          type: string
      type: object
    AutomatedWrapFeeDetailsType:
      properties:
        perTradeMarkups:
          $ref: '#/components/schemas/CommissionScheduleType'
        annualBlendedPercentages:
          items:
            $ref: '#/components/schemas/AnnualBlendedPercentage'
          type: array
        navRanges:
          items:
            $ref: '#/components/schemas/NAVRangeType'
          type: array
        type:
          enum:
          - ANNUALFLATFEE
          - ANNUALFLATFEE_MONTHLY
          - ANNUALFLATFEE_QUATERLY
          - PERCENTOFEQUITY
          - PERCENTOFEQUITY_MONTHLY
          - PERCENTOFEQUITY_QUATERLY
          - PERCENTOFEQUITY_QUARTERLY
          - BLENDEDPERCENTOFEQUITY
          - BLENDEDPERCENTOFEQUITY_MONTHLY
          - BLENDEDPERCENTOFEQUITY_QUARTERLY
          - PERCENTOFPROFIT
          - PERCENTOFPROFIT_QUARTER
          - INVOICE_LIMIT
          - INVOICE_LIMIT_Q
          - PERTRADE
          type: string
        maxFee:
          type: number
        numContracts:
          format: int32
          type: integer
        postFrequency:
          type: string
        percentOfNLVCap:
          type: string
        percentOfNLVCapQ:
          type: string
      type: object
    AvailableStatementDatesData:
      example:
        dataType: String
        value:
          daily:
            endDate: endDate
            startDate: startDate
          monthly:
          - monthly
          - monthly
          annual:
          - annual
          - annual
      properties:
        dataType:
          example: String
          type: string
        value:
          $ref: '#/components/schemas/AvailableStatementDatesData_value'
      type: object
    AvailableTaxFormsData:
      example:
        dataType: String
        value:
          forms:
          - formats:
            - PDF
            - PDF
            taxFormName: "1099"
            isForm: true
          - formats:
            - PDF
            - PDF
            taxFormName: "1099"
            isForm: true
      properties:
        dataType:
          example: String
          type: string
        value:
          $ref: '#/components/schemas/AvailableTaxFormsData_value'
      type: object
    Base64UrlString:
      properties:
        empty:
          type: boolean
      type: object
    BulkMultiStatusResponse:
      example:
        instructionSetId: -1988905739
        instructionResults:
        - instructionResults
        - instructionResults
        status: 207
      properties:
        status:
          example: 207
          format: int32
          type: integer
        instructionSetId:
          example: -1988905739
          type: number
        instructionResults:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - instructionSetId
      - status
      type: object
    BusinessRejectResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Business Error
          type: string
        status:
          example: 422
          format: int32
          type: integer
        instructionSetId:
          example: 8389943
          format: int32
          type: integer
        instructionResult:
          allOf:
          - $ref: '#/components/schemas/InstructionErrorResult'
      required:
      - instructionSetId
      - status
      - status
      - title
      - type
    CancelInstruction:
      maxProperties: 3
      minProperties: 3
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        instructionId:
          example: 43085477
          exclusiveMinimum: true
          minimum: 0
          type: number
        reason:
          example: Testing
          maxLength: 256
          minLength: 1
          type: string
      required:
      - clientInstructionId
      - instructionId
      - reason
      type: object
    ChangeAccountHolderDetail:
      properties:
        newAccountHolderDetails:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        documents:
          $ref: '#/components/schemas/DocumentSubmission'
        accountId:
          type: string
        referenceUserName:
          type: string
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        translation:
          type: boolean
      type: object
    ChangeBaseCurrency:
      properties:
        accountId:
          type: string
        newBaseCurrency:
          type: string
      type: object
    ChangeFinancialInformation:
      properties:
        accountId:
          type: string
        referenceUserName:
          type: string
        newFinancialInformation:
          $ref: '#/components/schemas/FinancialInformation'
      type: object
    ChangeMarginType:
      properties:
        documentSubmission:
          $ref: '#/components/schemas/DocumentSubmission'
        accountId:
          type: string
        newMargin:
          type: string
      type: object
    CheckDetails:
      properties:
        checkNumber:
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
      type: object
    ClientPublicKey:
      properties:
        keyId:
          type: string
        keyBitSize:
          format: int32
          minimum: 3072
          type: integer
        keyStatus:
          type: string
        active:
          type: boolean
        symmetric:
          type: boolean
        public:
          type: boolean
        private:
          type: boolean
        asymmetric:
          type: boolean
        empty:
          type: boolean
      required:
      - keyId
      type: object
    ClientPublicKeySet:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/ClientPublicKey'
          type: array
        empty:
          type: boolean
      required:
      - keys
      type: object
    CommissionConfig:
      properties:
        style:
          enum:
          - Bundled
          - Unbundled
          type: string
        type:
          enum:
          - Commodities
          - Securities
          type: string
      type: object
    CommissionMarkupType:
      properties:
        stairs:
          items:
            $ref: '#/components/schemas/MarkupStaircaseType'
          type: array
        code:
          type: string
        minimum:
          type: number
        maximum:
          type: number
        type:
          enum:
          - FA
          - FM
          - PM
          type: string
        amount:
          type: number
        plusCost:
          type: boolean
        ticketCharge:
          type: number
      type: object
    CommissionScheduleType:
      properties:
        markups:
          items:
            $ref: '#/components/schemas/CommissionMarkupType'
          type: array
        pricingStructure:
          enum:
          - FIXED
          - TIERED
          type: string
      type: object
    CompleteLoginMessage:
      properties:
        loginMessageIds:
          items:
            format: int32
            type: integer
          type: array
        accountId:
          type: string
      type: object
    ComplexAssetTransferInstruction:
      maxProperties: 7
      minProperties: 6
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        direction:
          enum:
          - IN
          - OUT
          example: IN
          type: string
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        quantity:
          example: 1000
          exclusiveMinimum: true
          minimum: 0
          type: number
        tradingInstrument: {}
        contraBrokerInfo:
          allOf:
          - $ref: '#/components/schemas/ContraBrokerInfo'
        nonDisclosedDetail:
          allOf:
          - $ref: '#/components/schemas/NonDisclosedDetail'
      required:
      - accountId
      - clientInstructionId
      - contraBrokerInfo
      - direction
      - quantity
      - tradingInstrument
      type: object
    Conid:
      description: IB Contract Numeric Id (conid)
      example: 123456
      type: number
    ContraBrokerInfo:
      maxProperties: 8
      minProperties: 7
      properties:
        accountType:
          example: ORG
          maxLength: 32
          minLength: 1
          type: string
        brokerName:
          example: JP MORGAN
          maxLength: 128
          minLength: 1
          type: string
        depositoryId:
          example: "1234"
          maxLength: 64
          minLength: 1
          type: string
        brokerAccountId:
          example: as3456567678578N
          maxLength: 64
          minLength: 1
          type: string
        country:
          example: United States
          maxLength: 64
          minLength: 1
          type: string
        contactName:
          example: as
          maxLength: 64
          minLength: 1
          type: string
        contactEmail:
          example: a@gmail.com
          maxLength: 64
          minLength: 1
          type: string
        contactPhone:
          example: 2039126155
          maxLength: 16
          minLength: 1
          type: number
      required:
      - accountType
      - brokerAccountId
      - brokerName
      - contactEmail
      - contactPhone
      - country
      - depositoryId
      type: object
    CounterpartyPermission:
      properties:
        permission_name:
          type: string
        instruction_type_name:
          type: string
        permission_status:
          enum:
          - ACTIVE
          - INACTIVE
          - DISABLED
          - UNKNOWN
          type: string
      required:
      - permission_name
      type: object
    CreateBrowserSessionRequest:
      properties:
        credential:
          example: ddowney2
          type: string
        ip:
          example: 10.10.10.10
          type: string
      required:
      - credential
      - ip
      type: object
    CreateBrowserSessionResponse:
      example:
        active: true
        url: https://www.interactivebrokers.com/sso/...
      properties:
        active:
          type: boolean
        url:
          example: https://www.interactivebrokers.com/sso/...
          type: string
      required:
      - access_token
      type: object
    CreateSessionRequest:
      properties:
        credential:
          example: ddowney2
          type: string
        ip:
          example: 10.10.10.10
          type: string
        service:
          type: string
        alternativeIps:
          example:
          - 10.10.10.11
          - 10.10.10.12
          items:
            example: 10.10.10.11
            type: string
          type: array
      required:
      - credential
      - ip
      type: object
    CreateSessionResponse:
      example:
        access_token: eyJ0eXAiOiJKV1...
        active: true
        token_type: Bearer
      properties:
        active:
          type: boolean
        access_token:
          example: eyJ0eXAiOiJKV1...
          type: string
        token_type:
          example: Bearer
          type: string
      required:
      - access_token
      type: object
    CreateUser:
      properties:
        accountId:
          type: string
        prefix:
          type: string
        userName:
          type: string
        id:
          type: string
        externalId:
          type: string
        authorizedTrader:
          type: boolean
      type: object
    CreateUserForSecondHolder:
      properties:
        userName:
          type: string
        prefix:
          type: string
        accountId:
          type: string
      type: object
    CustodianType:
      properties:
        individual:
          $ref: '#/components/schemas/Individual'
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        employee:
          $ref: '#/components/schemas/Individual'
      type: object
    Customer:
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationApplicant'
        accountHolder:
          $ref: '#/components/schemas/IndividualApplicant'
        jointHolders:
          $ref: '#/components/schemas/JointApplicant'
        trust:
          $ref: '#/components/schemas/TrustApplicant'
        id:
          type: string
        externalId:
          type: string
        transferUsMicroCapStock:
          type: boolean
        type:
          enum:
          - INDIVIDUAL
          - JOINT
          - TRUST
          - UGMA
          - UTMA
          - ORG
          - IRA
          type: string
        prefix:
          type: string
        userName:
          type: string
        userNameAlias:
          type: string
        userNameSource:
          type: string
        email:
          type: string
        mdStatusNonPro:
          type: boolean
        preferredPrimaryLanguage:
          type: string
        preferredSecondaryLanguage:
          type: string
        legalResidenceCountry:
          type: string
        taxTreatyCountry:
          type: string
        meetAmlStandard:
          type: string
        meetsAmlStandard:
          type: string
        directTradingAccess:
          type: boolean
        originCountry:
          type: string
        terminationAge:
          format: int32
          type: integer
        governingState:
          type: string
        optForDebitCard:
          type: boolean
        roboFaClient:
          type: boolean
        independentAccount:
          type: boolean
        paperAccount:
          type: boolean
      type: object
    DVPInstruction:
      properties:
        id:
          type: string
        externalId:
          type: string
        externalAccountID:
          type: string
        accountID:
          type: string
        name:
          type: string
        type:
          enum:
          - DTCID
          - NSCC
          - CMTA
          - GUS
          - OCCSSF
          type: string
        role:
          enum:
          - E
          - C
          - B
          type: string
        agentID:
          type: string
        firmID:
          type: string
        agentName:
          type: string
        accountName:
          type: string
        dayDoID:
          type: string
        txGroupCode:
          enum:
          - G
          - Z
          - R
          - "N"
          type: string
        brokerCode:
          type: string
        assetClass:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        exchange:
          enum:
          - NYSE
          - AMEX
          - NASDAQ
          - CBOE
          - ISE
          - BOX
          - PHLX
          - PSE
          type: string
        prepayTax:
          type: boolean
        prepayCommission:
          type: boolean
        expiry:
          format: date
          type: string
        default:
          type: boolean
      type: object
    DateOfBirth:
      properties:
        dateOfBirth:
          type: string
      type: object
    DayQuantityLimit:
      properties:
        asset:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        quantity:
          format: int32
          type: integer
      type: object
    DeleteBankInstruction:
      maxProperties: 5
      minProperties: 5
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U32343
          maxLength: 32
          minLength: 1
          type: string
        bankInstructionName:
          example: Test-instruction
          maxLength: 150
          minLength: 1
          type: string
        bankInstructionMethod:
          enum:
          - WIRE
          - ACH
          example: WIRE
          type: string
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
      required:
      - accountId
      - bankInstructionMethod
      - bankInstructionName
      - clientInstructionId
      - currency
      type: object
    DeleteEntity:
      properties:
        ibEntityId:
          format: int32
          type: integer
      type: object
    DeleteRelationship:
      properties:
        name:
          enum:
          - Account_Holder
          - Spouse
          - Firstholder
          - Secondholder
          - Trader
          - Secretary
          - Treasurer
          - Ceo
          - Owner
          - Trustee
          - Beneficiary
          - Grantor
          - Director
          - Principal
          - Shareholder
          - Partner
          - Controlling_Officer
          - Beneficialowner
          - Signatory
          - Comp_Officer
          - Superv_Broker
          - Pooled_User
          - Financial_User
          - Contingent
          - Ira_Beneficiary
          - Employee
          - Non_Employee
          - Fund_Admin
          - Fund_Contact
          - Firm_Admin
          - Firm_Billing
          - Firm_Clearing
          - Firm_Sales
          - Firm_Trading
          - Firm_User
          - Account_Admin
          - Account_Billing
          - Account_Clearing
          - Account_Sales
          - Account_Trading
          - User_Individual
          - Fund_Manager
          - Investment_Advisor
          - Shf_Investmanager
          - Advisory_Principal
          - Advisory_Signatory
          - Associated_Fund
          - Primary_Contributor
          - Administrator
          - Contact
          - Lead_Compliance_Officer
          - Compliance_Officer
          - Other_Officer
          - Apply_User
          - Transfer_On_Death_Legator
          - Tod_Primary_Beneficiary
          - Tod_Contingent_Beneficiary
          - Nominee
          - Nominee_Guardian
          - Ira_Decedent
          - Authorized_Person
          - Promoter
          - Wholetime_Director
          - Nominee_Owner
          - Third_Party_Admin
          - Compliance_Contact
          - Trust_Controller
          - Trust_Applicant
          - Organization_Applicant
          - Mm_Contact
          - Reg_Rep
          - Plan_Sponsor
          - Plan_Sponsor_Officer
          - Pension_Admin
          - Pension_Admin_Contact
          - Accountant
          - Joint_Applicant
          - Custodian_Employee
          - Successor_Custodian
          - Custodian
          - Successor_Custodian_Employee
          - Chief_Compliance_Officer
          - Chief_Financial_Officer
          - Trading_Officer
          - Child
          - Parent
          - Sibling
          - Estate
          - As_Interest_May_Appear
          - Ira_Present_Trust
          - Other
          - Life_Partner
          - Common_Law_Partner
          - Grandchild
          - Charity
          - Trust_Ira
          - Successor_Holder
          - Head_Of_Desk
          - Cftc_Non_Applicant_Ocr_Contact
          - Ocr_Account_Controller
          - Cftc_Applicant_Ocr_Contact
          type: string
      type: object
    DepositFundsInstruction:
      maxProperties: 12
      minProperties: 5
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
        amount:
          example: 100
          exclusiveMinimum: true
          minimum: 0
          type: number
        bankInstructionMethod:
          enum:
          - ACH
          - WIRE
          - eDDA
          example: WIRE
          type: string
        sendingInstitution:
          example: Sending Institution name
          maxLength: 128
          minLength: 0
          type: string
        identifier:
          example: indentifier
          maxLength: 64
          minLength: 0
          type: string
        specialInstruction:
          example: U46377
          maxLength: 128
          minLength: 0
          type: string
        bankInstructionName:
          example: Instruction
          maxLength: 150
          minLength: 0
          type: string
        senderInstitutionName:
          example: Senders Institution name
          maxLength: 128
          minLength: 0
          type: string
        iraDepositDetail:
          $ref: '#/components/schemas/DepositFundsInstruction_iraDepositDetail'
        recurringInstructionDetail:
          allOf:
          - $ref: '#/components/schemas/RecurringInstructionDetail'
      required:
      - accountId
      - amount
      - bankInstructionMethod
      - clientInstructionId
      - currency
      type: object
    DepositFundsPollingResponse:
      allOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - properties:
          instructionResult:
            $ref: '#/components/schemas/DepositFundsPollingResult'
        type: object
    DepositFundsPollingResult:
      allOf:
      - $ref: '#/components/schemas/PollingInstructionResult'
      - properties:
          depositDetails:
            $ref: '#/components/schemas/DepositFundsPollingResult_allOf_depositDetails'
        type: object
    DepositNotification:
      properties:
        checkDetails:
          $ref: '#/components/schemas/CheckDetails'
        wireDetails:
          $ref: '#/components/schemas/WireDetails'
        achDetails:
          $ref: '#/components/schemas/ACHDetails'
        iraDepositDetails:
          $ref: '#/components/schemas/IRADepositDetails'
        type:
          enum:
          - CHECK
          - WIRE
          - ACH
          - SKIP_DEPOSIT
          type: string
        amount:
          type: number
        currency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        ibAccount:
          type: string
      type: object
    Details:
      properties:
        question:
          type: string
        answer:
          type: string
      type: object
    DisableAccountInBrokerage:
      properties:
        accountId:
          type: string
      type: object
    Document:
      properties:
        signedBy:
          items:
            type: string
          type: array
        attachedFile:
          $ref: '#/components/schemas/AttachedFileType'
        formNumber:
          format: int32
          type: integer
        validAddress:
          type: boolean
        execLoginTimestamp:
          format: int32
          type: integer
        execTimestamp:
          format: int32
          type: integer
        documentType:
          enum:
          - Check
          - Company Ownership
          - Divorce Settlement
          - Employer Confirmation
          - Entitlement to Payments
          - Letter
          - Ownership
          - Pay Slip
          - Proof of Sale
          - Proof of Winnings
          - Severance
          - Tax Return
          - Will
          - Bank Statement
          - Brokerage Statement
          - Current Lease
          - Financial Statement
          - Certificate of Incorporation/Formation
          - Certificate of Registratios
          - Company Charter
          - Certificate of Good Standing
          - Government-issued Business License
          - Corporate Charter
          - Articles of Incorporation
          - Bank Passbook/Statement
          - Certified Proof of Identity
          - Certified Proof of Address
          - Income Tax Return
          - Additional Proof of Identity Document
          - Proof of Principal Place of Business and Registration
          - Utility Bill
          - Evidence of Ownership of Property
          - Authorization to Open Account - Evidence
          - Authorization to Open Account - Certification
          - Italian Health Card (Tessera Sanitaria)
          - CRS card of Lombardy
          - Italian Electronic ID Card - CIE
          - Court- or Govt-issued document
          - "Copy of Passport, National Id or Driver's License"
          - Passport
          - National ID
          type: string
        signature:
          type: string
        externalAccountId:
          type: string
        externalIndividualId:
          type: string
        proofOfIdentityType:
          enum:
          - Driver License
          - Passport
          - Alien ID Card
          - National ID Card
          - Bank Statement
          - Evidence of Ownership of Property
          - Credit Card Statement
          - Utility Bill
          - Brokerage Statement
          - T4 Statement
          - CRA Assessment
          - Hong Kong and Macao Entry Permit
          type: string
        expirationDate:
          format: date
          type: string
        proofOfAddressType:
          enum:
          - Driver License
          - Bank Statement
          - Brokerage Statement
          - Homeowner Insurance Policy Bill
          - Homeowner Insurance Policy Document
          - Renter Insurance Policy bill
          - Renter Insurance Policy Document
          - Security System Bill
          - Government Issued Letters
          - Utility Bill
          - Current Lease
          - Evidence of Ownership of Property
          - Other Document
          type: string
        payload:
          $ref: '#/components/schemas/FilePayload'
      type: object
    DocumentSubmission:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        accountId:
          type: string
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        translation:
          type: boolean
      type: object
    DuplicateAccount:
      properties:
        accountId:
          type: string
        numberOfDuplicates:
          format: int32
          type: integer
      type: object
    DwacInstruction:
      maxProperties: 9
      minProperties: 6
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        direction:
          enum:
          - IN
          - OUT
          example: IN
          type: string
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        contraBrokerAccountId:
          example: 12345678A
          maxLength: 20
          minLength: 1
          type: string
        contraBrokerTaxId:
          example: "123456789"
          maxLength: 25
          minLength: 1
          type: string
        quantity:
          example: 1000
          exclusiveMinimum: true
          minimum: 0
          type: number
        tradingInstrument: {}
        accountTitle:
          example: Title
          maxLength: 140
          minLength: 0
          type: string
        refrenceId:
          example: refId
          maxLength: 20
          minLength: 0
          type: string
      required:
      - accountId
      - clientInstructionId
      - contraBrokerAccountId
      - contraBrokerTaxId
      - direction
      - quantity
      type: object
    EFPQuantityLimits:
      properties:
        maxNominalEfpPerOrder:
          format: int32
          type: integer
        maxNetEfpTrades:
          format: int32
          type: integer
        maxGrossEfpTrades:
          format: int32
          type: integer
      type: object
    EchoResponse:
      example:
        queryParameters: {}
        requestMethod: GET
        securityPolicy: HTTPS
      properties:
        requestMethod:
          enum:
          - GET
          - POST
          - PATCH
          - PUT
          example: GET
          type: string
        securityPolicy:
          enum:
          - HTTPS
          - SIGNED_JWT
          - ENCRYPTED_JWE
          example: HTTPS
          type: string
        queryParameters:
          example: {}
          type: object
      required:
      - requestMethod
      - securityPolicy
      type: object
    EddaInstruction:
      maxProperties: 8
      minProperties: 8
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        bankInstructionName:
          example: Instruction Name
          maxLength: 100
          minLength: 1
          type: string
        currency:
          example: CNH
          maxLength: 3
          minLength: 1
          type: string
        accountId:
          example: U2323232
          maxLength: 32
          minLength: 1
          type: string
        bankBranchCode:
          example: "003"
          maxLength: 3
          minLength: 1
          type: string
        bankAccountNumber:
          example: "132456"
          maxLength: 32
          minLength: 1
          type: string
        bankClearingCode:
          example: "003"
          maxLength: 3
          minLength: 1
          type: string
        debtorIdentificationDocumentType:
          enum:
          - hkId
          - passport
          - chinaId
          - hkMacaoEntryPermit
          example: hkId
          type: string
      required:
      - accountId
      - bankAccountNumber
      - bankBranchCode
      - bankClearingCode
      - bankInstructionName
      - clientInstructionId
      - currency
      - debtorIdentificationDocumentType
      type: object
    EligibleContractParticipant:
      properties:
        eligibleContractParticipantDetails:
          items:
            $ref: '#/components/schemas/EligibleContractParticipantDetails'
          type: array
        status:
          type: boolean
      type: object
    EligibleContractParticipantDetails:
      properties:
        code:
          enum:
          - DiscretionaryBasis
          - HighRisk
          type: string
        status:
          type: boolean
      type: object
    EmploymentDetails:
      properties:
        employer:
          type: string
        occupation:
          type: string
        description:
          type: string
        employerBusiness:
          type: string
        employerAddress:
          $ref: '#/components/schemas/Address'
        employerPhone:
          type: string
        emplCountryResCountryDetails:
          type: string
      type: object
    EnableAccountInBrokerage:
      properties:
        accountId:
          type: string
      type: object
    EnrollInDRIP:
      properties:
        accountId:
          type: string
      type: object
    EnrollInSYEP:
      properties:
        accountId:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
      type: object
    EntityIRABene:
      example:
        entityType: entityType
        name: name
        location:
          key: location
        type: type
        articleOfWill: articleOfWill
      properties:
        name:
          type: string
        entityType:
          type: string
        type:
          type: string
        location:
          additionalProperties:
            type: string
          type: object
        articleOfWill:
          type: string
      type: object
    EnumerationResponse:
      example:
        jsonData: "{}"
        formNumber: formNumber
        enumerationsType: enumerationsType
      properties:
        enumerationsType:
          type: string
        formNumber:
          type: string
        jsonData:
          type: object
      type: object
    ErrorResponse:
      example:
        errorDescription: errorDescription
        hasError: true
        error: null
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
      type: object
    ExchangeAccess:
      properties:
        assetClass:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        exchange:
          enum:
          - NYSE
          - AMEX
          - NASDAQ
          - CBOE
          - ISE
          - BOX
          - PHLX
          - PSE
          type: string
      type: object
    ExtPositionsTransferType:
      properties:
        partialStockPositions:
          items:
            $ref: '#/components/schemas/PartialStockPosition'
          type: array
        partialBondPositions:
          items:
            $ref: '#/components/schemas/PartialBondPosition'
          type: array
        partialOptionPositions:
          items:
            $ref: '#/components/schemas/PartialOptionPosition'
          type: array
        partialWarrantPositions:
          items:
            $ref: '#/components/schemas/PartialWarrantPosition'
          type: array
        partialFundPositions:
          items:
            $ref: '#/components/schemas/PartialFundPosition'
          type: array
        partialCashPositions:
          items:
            $ref: '#/components/schemas/PartialCashPosition'
          type: array
        type:
          enum:
          - FULL
          - PARTIAL
          type: string
        subType:
          enum:
          - ACATS
          - ATON
          type: string
        brokerId:
          type: string
        brokerName:
          type: string
        accountAtBroker:
          type: string
        srcIRAType:
          enum:
          - RI
          - RO
          - RT
          - SP
          - ED
          - TH
          - RH
          - SH
          - RRSP
          - SRRSP
          - TFSA
          - SIMPLE
          - ISA
          type: string
        marginLoan:
          type: boolean
        shortPos:
          type: boolean
        optionPos:
          type: boolean
        ibAccount:
          type: string
        thirdPartyType:
          type: string
        approximateAccountValue:
          format: int32
          type: integer
        ssn:
          type: string
        ein:
          type: string
        signature:
          type: string
        authorizeToRemoveFund:
          type: boolean
      type: object
    ExternalPositionTransfer:
      maxProperties: 9
      minProperties: 9
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        type:
          enum:
          - FULL
          example: FULL
          type: string
        subtype:
          enum:
          - ACATS
          - ATON
          example: ACATS
          type: string
        brokerId:
          example: "0226"
          maxLength: 20
          minLength: 1
          type: string
        brokerName:
          example: Wall Street Financial Group
          maxLength: 256
          minLength: 1
          type: string
        accountAtBroker:
          example: SOL12345
          maxLength: 34
          minLength: 1
          type: string
        sourceIRAType:
          enum:
          - RO
          - RI
          - RT
          - SP
          - ED
          - TH
          - RH
          - SH
          example: RO
          type: string
        accountId:
          example: U2323232
          maxLength: 32
          minLength: 1
          type: string
        signature:
          example: sample signature
          maxLength: 140
          minLength: 1
          type: string
      required:
      - accountAtBroker
      - accountId
      - brokerId
      - brokerName
      - clientInstructionId
      - signature
      - subtype
      - type
      type: object
    FileData:
      example:
        data: "{}"
        name: name
      properties:
        data:
          type: object
        name:
          type: string
      type: object
    FileDetailsResponse:
      example:
        accountId: accountId
        requestFileName: requestFileName
        responseFileName: responseFileName
      properties:
        accountId:
          type: string
        requestFileName:
          type: string
        responseFileName:
          type: string
      type: object
    FilePayload:
      properties:
        mimeType:
          type: string
        data:
          type: string
      type: object
    FinancialInformation:
      properties:
        investmentExperience:
          items:
            $ref: '#/components/schemas/AssetExperience'
          type: array
        investmentObjectives:
          items:
            enum:
            - Trading
            - Growth
            - Speculation
            - Hedging
            - Preservation
            - Income
            type: string
          type: array
        additionalSourcesOfIncome:
          items:
            $ref: '#/components/schemas/SourceOfIncomeType'
          type: array
        sourcesOfWealth:
          items:
            $ref: '#/components/schemas/SourceOfWealthType'
          type: array
        soiQuestionnaire:
          $ref: '#/components/schemas/SOIQuestionnaire'
        questionnaires:
          items:
            $ref: '#/components/schemas/QuestionnaireType'
          type: array
        netWorth:
          type: number
        liquidNetWorth:
          type: number
        annualNetIncome:
          type: number
        totalAssets:
          type: number
        sourceOfFunds:
          type: string
        translated:
          type: boolean
      type: object
    FopInstruction:
      maxProperties: 7
      minProperties: 6
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        direction:
          enum:
          - IN
          - OUT
          example: IN
          type: string
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        contraBrokerAccountId:
          example: 12345678A
          maxLength: 20
          minLength: 1
          type: string
        contraBrokerDtcCode:
          example: "348"
          maxLength: 20
          minLength: 1
          type: string
        quantity:
          example: 1000
          exclusiveMinimum: true
          minimum: 0
          type: number
        tradingInstrument: {}
      required:
      - accountId
      - clientInstructionId
      - contraBrokerAccountId
      - contraBrokerDtcCode
      - direction
      - quantity
      type: object
    ForbiddenInstructionResponse:
      $ref: '#/components/schemas/ForbiddenRequestResponse'
    ForbiddenRequestResponse:
      properties:
        type:
          example: /invalid-argument
          type: string
        title:
          example: Bad Request
          type: string
        status:
          example: 400
          format: int32
          type: integer
        detail:
          example: Input is not a JSON Object or doesn't contain all expected fields
          type: string
        instructionSetId:
          example: 8389943
          format: int32
          type: integer
        instructionResult:
          allOf:
          - $ref: '#/components/schemas/InstructionErrorResult'
      required:
      - detail
      - instructionResult
      - instructionSetId
      - status
      - title
      - type
      type: object
    FormCRS:
      properties:
        controllingPersonDesignation:
          enum:
          - SENIOR_MGMT_OFFICER
          - BY_OWNERSHIP
          - BY_OTHER_MEANS
          type: string
        oecdStatus:
          enum:
          - DEPOSITORY_INSTITUTION
          - CUSTODIAL_INSTITUTION
          - SPECIFIED_INSURANCE_COMPANY
          - INVESTMENT_ENTITY_IN_NONPARTICIPATING_JURISDICTION
          - INVESTMENT_ENTITY_NOT_LISTED
          - PUBLICLY_TRADED_CORPORATION_OR_AFFILIATE
          - OTHER_ACTIVE_NON_FINANCIAL_ENTITY
          - PASSIVE_NON_FINANCIAL_ENTITY
          - EXEMPT_RETIREMENT_PLAN
          - NON_REPORTING_FI
          - OTHER_INVESTMENT_ENTITY
          - FINANCIAL_INSTITUTION
          - NON_REPORTING_FINANCIAL_INSTITUTION
          type: string
      type: object
    FormDetails:
      example:
        sha1Checksum: sha1Checksum
        fileName: fileName
        errorDescription: errorDescription
        payload:
          data: data
          mimeType: mimeType
        formNumber: 0
        formName: formName
        dateModified: 2000-01-23T04:56:07.000+00:00
        language: language
        hasError: true
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        fileLength: 6
      properties:
        formNumber:
          format: int32
          type: integer
        sha1Checksum:
          type: string
        dateModified:
          format: date-time
          type: string
        fileName:
          type: string
        language:
          type: string
        formName:
          type: string
        payload:
          $ref: '#/components/schemas/FormPayload'
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        fileLength:
          format: int64
          type: integer
      type: object
    FormFileResponse:
      example:
        errorDescription: errorDescription
        fileData:
          data: "{}"
          name: name
        hasError: true
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        formDetails:
        - sha1Checksum: sha1Checksum
          fileName: fileName
          errorDescription: errorDescription
          payload:
            data: data
            mimeType: mimeType
          formNumber: 0
          formName: formName
          dateModified: 2000-01-23T04:56:07.000+00:00
          language: language
          hasError: true
          error:
            errorDescription: errorDescription
            hasError: true
            error: null
          fileLength: 6
        - sha1Checksum: sha1Checksum
          fileName: fileName
          errorDescription: errorDescription
          payload:
            data: data
            mimeType: mimeType
          formNumber: 0
          formName: formName
          dateModified: 2000-01-23T04:56:07.000+00:00
          language: language
          hasError: true
          error:
            errorDescription: errorDescription
            hasError: true
            error: null
          fileLength: 6
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        fileData:
          $ref: '#/components/schemas/FileData'
        formDetails:
          items:
            $ref: '#/components/schemas/FormDetails'
          type: array
      type: object
    FormPayload:
      example:
        data: data
        mimeType: mimeType
      properties:
        mimeType:
          type: string
        data:
          type: string
      type: object
    FormW8BEN:
      properties:
        localTaxForms:
          items:
            $ref: '#/components/schemas/LocalTaxForm'
          type: array
        name:
          type: string
        tin:
          type: string
        foreignTaxId:
          type: string
        tinOrExplanationRequired:
          type: boolean
        explanation:
          enum:
          - US_TIN
          - TIN_NOT_DISCLOSED
          - TIN_NOT_REQUIRED
          - TIN_NOT_ISSUED
          type: string
        referenceNumber:
          format: int32
          type: integer
        part29ACountry:
          type: string
        cert:
          type: boolean
        signatureType:
          enum:
          - Electronic
          - Physical
          type: string
        blankForm:
          type: boolean
        taxFormFile:
          type: string
        proprietaryFormNumber:
          format: int32
          type: integer
        electronicFormat:
          type: boolean
        submitDate:
          type: string
      type: object
    FormW8BENE:
      properties:
        substantialUsOwnerExternalIds:
          items:
            type: string
          type: array
        name:
          type: string
        countryOfOrganization:
          type: string
        disregardedEntityName:
          type: string
        entityType:
          enum:
          - CORPORATION
          - DISREGARDED_ENTITY
          - PARTNERSHIP
          - SIMPLE_TRUST
          - GRANTOR_TRUST
          - COMPLEX_TRUST
          - ESTATE
          - GOVERNMENT
          - CENTRAL_BANK_OF_ISSUE
          - TAX_EXEMPT_ORGANIZATION
          - PRIVATE_FOUNDATION
          type: string
        fatcaStatus:
          enum:
          - NONPARTICIPATING_FFI
          - PARICIPATING_FFI
          - REPORTING_MODEL_1_FFI
          - REPORTING_MODEL_2_FFI
          - REGISTERED_DEEMED_COMPLIANT_FFI
          - SPONSORED_FFI
          - CERTIFIED_DEEMED_COMPLIANT_NONREGISTERING_LOCAL_BANK
          - CERTIFIED_DEEMED_COMPLIANT_FFI
          - CERTIFIED_DEEMED_COMPLIANT_SPONSORED_VEHICLE
          - CERTIFIED_DEEMED_COMPLIANT_LIMITED_LIFE_DEBT
          - CERTIFIED_DEEMED_COMPLIANT_INVESTMENT_ADVISORS
          - OWNER_DOCUMENTED_FFI
          - RESTRICTED_DISTRIBUTOR
          - NONREPORTING_IGA_FFI
          - FOREIGN_GOVERNMENT
          - INTERNATIONAL_ORGANIZATION
          - EXEMPT_RETIREMENT_PLANS
          - ENTITY_OWNED_BY_EXEMPT_BENEFICIAL_OWNERS
          - TERRITORY_FINANCIAL_INSTITUTION
          - NONFINANCIAL_GROUP
          - EXCEPTED_NONFINANCIAL_STARTUP
          - EXCEPTED_NONFINANCIAL_ENTITY
          - AN_501_C_ORGANIZATION
          - NONPROFIT_ORGANIZATION
          - PUBLICLY_TRADED_NFFE
          - EXCEPTED_TERRITORY_NFFE
          - ACTIVE_NFFE
          - PASSIVE_NFFE
          - EXCEPTED_INTER_AFFILIATE_FFI
          - DIRECT_REPORTING_NFFE
          - SPONSORED_DIRECT_REPORTING_NFFE
          type: string
        usTin:
          type: string
        giin:
          type: string
        foreignTin:
          type: string
        tinOrExplanationRequired:
          type: boolean
        explanation:
          enum:
          - US_TIN
          - TIN_NOT_DISCLOSED
          - TIN_NOT_REQUIRED
          - TIN_NOT_ISSUED
          type: string
        referenceNumber:
          format: int32
          type: integer
        submitDate:
          type: string
        box11Status:
          enum:
          - LIMITED_BRANCH
          - US_BRANCH
          - PARTICIPATING_FFI
          - REPORTING_MODEL_1_FFI
          - REPORTING_MODEL_2_FFI
          type: string
        part314A:
          type: boolean
        part314ACountry:
          type: string
        part314B:
          enum:
          - CompanyMeetsOwnershipAndBaseErosionTest
          - TaxExemptPensionTrustOrPensionFund
          - CompanyMeetsDerivativeBenefitsTest
          - TaxExemptOrganization
          - CompanyWithIncomeActiveBusiness
          - PubliclyTradedCorporation
          - FavorableDiscretionaryDetermination
          - SubsidiaryOfAPubliclyTradedCorporation
          - Government
          - NoLobArticleInTreaty
          - Other
          type: string
        part314C:
          type: boolean
        part416:
          type: string
        part417I:
          type: boolean
        part417Ii:
          type: boolean
        part518:
          type: boolean
        part619:
          type: boolean
        part720:
          type: string
        part721:
          type: boolean
        part822:
          type: boolean
        part923:
          type: boolean
        part1024A:
          type: boolean
        part1024B:
          type: boolean
        part1024C:
          type: boolean
        part1024D:
          type: boolean
        part1125A:
          type: boolean
        part1125B:
          type: boolean
        part1125C:
          type: boolean
        part1226:
          type: boolean
        part1226Desc1:
          type: string
        part1226Desc2:
          type: string
        part1226Desc3:
          enum:
          - CollectiveInvestmentVehicle
          - ExemptBeneficialOwner-RetirementPlan
          - FinancialInstitutionwithlocalClientBase
          - InvestmentAdvisorsandManagers
          - LocalBank
          - SponsoredCloselyHeldInvestmentVehicle
          - SponsoredInvestmentEntity
          - TrusteeDocumentedTrust
          type: string
        part1226Desc4:
          type: string
        part1327:
          type: boolean
        part1428A:
          type: boolean
        part1428B:
          type: boolean
        part1529A:
          type: boolean
        part1529B:
          type: boolean
        part1529C:
          type: boolean
        part1529D:
          type: boolean
        part1529E:
          type: boolean
        part1529F:
          type: boolean
        part1630:
          type: boolean
        part1731:
          type: boolean
        part1832:
          type: boolean
        part1933:
          type: boolean
        part2034:
          type: boolean
        part2135:
          type: boolean
        part2135Date:
          type: string
        part2236:
          type: boolean
        part2337A:
          type: boolean
        part2337ADesc:
          type: string
        part2337B:
          type: boolean
        part2337BDesc1:
          type: string
        part2337BDesc2:
          type: string
        part2438:
          type: boolean
        part2539:
          type: boolean
        part2640A:
          type: boolean
        part2640B:
          type: boolean
        part2640C:
          type: boolean
        part2741:
          type: boolean
        part2842:
          type: string
        part2843:
          type: boolean
        cert:
          type: boolean
        signatureType:
          enum:
          - Electronic
          - Physical
          type: string
        blankForm:
          type: boolean
        taxFormFile:
          type: string
        proprietaryFormNumber:
          format: int32
          type: integer
        electronicFormat:
          type: boolean
      type: object
    FormW8IMY:
      properties:
        name:
          type: string
        countryOfIncorporation:
          type: string
        disregardedEntityName:
          type: string
        entityType:
          enum:
          - QUALIFIED_INTERMEDIARY
          - NONQUALIFIED_INTERMEDIARY
          - TERRITORY_FINANCIAL
          - US_BRANCH
          - WITHHOLDING_FOREIGN_PARTNERSHIP
          - WITHHOLDING_FOREIGN_TRUST
          - NONWITHHOLDING_FOREIGN_PARTNERSHIP
          - NONWITHHOLDING_FOREIGN_SIMPLE_TRUST
          - NONWITHHOLDING_FOREIGN_GRANTOR_TRUST
          type: string
        fatcaStatus:
          enum:
          - NONPARTICIPATING_FFI
          - PARTICIPATING_FFI
          - REPORTING_MODEL1_FFI
          - REPORTING_MODEL2_FFI
          - REGISTERED_DEEMED_COMPLAINT
          - TERRITORY_FINANCIAL_INSTITUTION
          - SPONSORED_FFI
          - CERTIFIED_DEEMED_COMPLAINT_FFI
          - CERTIFIED_DEEMED_COMPLAINT_SPONSORED
          - CERTIFIED_DEEMED_COMPLAINT_LIMITED_LIFE_DEBT
          - OWNER_DOCUMENTED_FFI
          - RESTRICTED_DISTRIBUTOR
          - FOREIGN_CENTRAL_BANK_ISSUE
          - NONREPORTING_IGA_FFO
          - EXEMPT_RETIREMENT_PLAN
          - EXCEPTED_NONFINANCIAL_GROUP_ENTITY
          - EXCEPTED_NONFINANCIAL_STARTUP_COMPANY
          - EXCEPTED_NONFINANCIAL_ENTITY_IN_LIQUIDATION
          - PUBLICLY_TRADED_NFFE
          - EXCEPTED_TERRITORY_NFFE
          - ACTIVE_NFFE
          - PASSIVE_NFFE
          - DIRECT_REPORTING_NFFE
          - SPONSORED_DIRECT_REPORTING_NFFE
          type: string
        usTin:
          type: string
        usTinType:
          enum:
          - QI-EIN
          - WP-EIN
          - WT-EIN
          - EIN
          - SSN
          - ITIN
          type: string
        giin:
          type: string
        referenceNumber:
          format: int32
          type: integer
        box11Status:
          enum:
          - LIMITED_BRANCH
          - US_BRANCH
          - PARTICIPATING_FFI
          - REPORTING_MODEL_1_FFI
          - REPORTING_MODEL_2_FFI
          type: string
        part314A:
          type: boolean
        part314B:
          type: boolean
        part314C:
          type: boolean
        part314CDesc:
          type: string
        part314D:
          type: boolean
        part314DDesc:
          type: string
        part314E:
          type: boolean
        part314EDesc:
          type: string
        part314EI:
          type: boolean
        part314EIi:
          type: boolean
        part415A:
          type: boolean
        part415B:
          type: boolean
        part415C:
          type: boolean
        part415D:
          type: boolean
        part516A:
          type: boolean
        part516B:
          type: boolean
        part516C:
          type: boolean
        part617A:
          type: boolean
        part617B:
          type: boolean
        part617C:
          type: boolean
        part718:
          type: boolean
        part819:
          type: boolean
        part920:
          type: boolean
        part1021:
          type: string
        part1021A:
          type: string
        part1021B:
          type: boolean
        part1021C:
          type: boolean
        part1122A:
          type: boolean
        part1122B:
          type: boolean
        part1122C:
          type: boolean
        part1223:
          type: boolean
        part1324:
          type: boolean
        part1425A:
          type: string
        part1425B:
          type: boolean
        part1526:
          type: boolean
        part1627A:
          type: boolean
        part1627B:
          type: boolean
        part1627C:
          type: boolean
        part1728:
          type: boolean
        part1829:
          type: boolean
        part1829Desc1:
          type: string
        part1829Desc2:
          type: string
        part1829Desc3:
          type: string
        part1930A:
          type: boolean
        part1930B:
          type: boolean
        part1930C:
          type: boolean
        part1930D:
          type: boolean
        part1930E:
          type: boolean
        part1930F:
          type: boolean
        part2031:
          type: boolean
        part2132:
          type: boolean
        part2132Desc:
          type: string
        part2233:
          type: boolean
        part2233Desc:
          type: string
        part2334A:
          type: boolean
        part2334ADesc:
          type: string
        part2334B:
          type: boolean
        part2334BDesc:
          type: string
        part2435:
          type: boolean
        part2536:
          type: boolean
        part2637:
          type: boolean
        part2738:
          type: string
        part2739:
          type: boolean
        cert:
          type: boolean
      type: object
    FormW9:
      properties:
        localTaxForms:
          items:
            $ref: '#/components/schemas/LocalTaxForm'
          type: array
        name:
          type: string
        businessName:
          type: string
        customerType:
          enum:
          - Individual
          - Corporation
          - Partnership
          - LLC
          - Other
          type: string
        taxClassification:
          type: string
        otherCustomerType:
          type: string
        tin:
          type: string
        tinType:
          enum:
          - SSN
          - EIN
          - NonUS_NationalId
          type: string
        cert1:
          type: boolean
        cert2:
          type: boolean
        cert3:
          type: boolean
        cert4:
          type: boolean
        signatureType:
          enum:
          - Electronic
          - Physical
          type: string
        blankForm:
          type: boolean
        taxFormFile:
          type: string
        proprietaryFormNumber:
          format: int32
          type: integer
      type: object
    GetAvailableStmtDatesResponse:
      example:
        data:
          dataType: String
          value:
            daily:
              endDate: endDate
              startDate: startDate
            monthly:
            - monthly
            - monthly
            annual:
            - annual
            - annual
      properties:
        data:
          $ref: '#/components/schemas/AvailableStatementDatesData'
      type: object
    GetAvailableTaxFormsResponse:
      example:
        data:
          dataType: String
          value:
            forms:
            - formats:
              - PDF
              - PDF
              taxFormName: "1099"
              isForm: true
            - formats:
              - PDF
              - PDF
              taxFormName: "1099"
              isForm: true
      properties:
        data:
          $ref: '#/components/schemas/AvailableTaxFormsData'
      type: object
    GetBrokerListResponse:
      example:
        instructionType: COMPLEX_ASSET_TRANSFER
        brokers: "{}"
      properties:
        instructionType:
          example: COMPLEX_ASSET_TRANSFER
          type: string
        brokers:
          type: object
      required:
      - brokers
      - instructionType
      type: object
    GetInstructionSetResponse:
      $ref: '#/components/schemas/BulkMultiStatusResponse'
    GetJavaScript:
      properties:
        method:
          type: string
      type: object
    GetParticipatingListResponse:
      example:
        type: eDDA
        participatingBanks:
          institutionName: WELAB BANK LIMITED
          clearingCode: "390"
          BIC: WEDIHKHHXXX
      properties:
        type:
          example: eDDA
          type: string
        participatingBanks:
          $ref: '#/components/schemas/GetParticipatingListResponse_participatingBanks'
      required:
      - participatingBanks
      - type
      type: object
    GetStatementsResponse:
      example:
        data:
          dataType: dataType
          gzip: true
          mimeType: mimeType
          encoding: encoding
          value: value
          accept: accept
      properties:
        data:
          $ref: '#/components/schemas/GetStatementsResponse_data'
      type: object
    HighWaterMarkConfigurationType:
      properties:
        numberOfPeriods:
          format: int32
          type: integer
        prorateForWithdrawals:
          type: boolean
      type: object
    HighWaterMarkType:
      properties:
        hwm:
          $ref: '#/components/schemas/HighWaterMarkConfigurationType'
        previousLosses:
          items:
            $ref: '#/components/schemas/PreviousLossesType'
          type: array
      type: object
    IRABeneficiariesType:
      properties:
        primaryBeneficiaries:
          items:
            $ref: '#/components/schemas/IRAPrimaryBeneficiary'
          type: array
        primaryBeneficiaryEntities:
          items:
            $ref: '#/components/schemas/IRAPrimaryBeneficiaryEntity'
          type: array
        contingentBeneficiaries:
          items:
            $ref: '#/components/schemas/IRAContingentBeneficiary'
          type: array
        contingentBeneficiaryEntities:
          items:
            $ref: '#/components/schemas/IRAContingentBeneficiaryEntity'
          type: array
        spousePrimaryBeneficary:
          type: boolean
        successor:
          type: boolean
      type: object
    IRAContingentBeneficiary:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
        ownershipPercentage:
          type: number
        title:
          $ref: '#/components/schemas/Title'
        relationship:
          enum:
          - Brother
          - Daughter
          - Estate
          - Father
          - Husband
          - Mother
          - Other
          - Sister
          - Son
          - Wife
          - Charity
          - Trust
          - Spouse
          - Child
          - Sibling
          - Parent
          - Grandchild
          - Common Law Partner
          type: string
      type: object
    IRAContingentBeneficiaryEntity:
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        id:
          type: string
        externalId:
          type: string
        ownershipPercentage:
          type: number
        title:
          $ref: '#/components/schemas/Title'
        relationship:
          enum:
          - Brother
          - Daughter
          - Estate
          - Father
          - Husband
          - Mother
          - Other
          - Sister
          - Son
          - Wife
          - Charity
          - Trust
          - Spouse
          - Child
          - Sibling
          - Parent
          - Grandchild
          - Common Law Partner
          type: string
        executor:
          $ref: '#/components/schemas/Individual'
        executionDate:
          format: date
          type: string
        articleOfWill:
          type: string
        entityType:
          enum:
          - Trust
          - Estate
          - Charity
          type: string
      type: object
    IRADecedent:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
        dateOfDeath:
          format: date
          type: string
        title:
          $ref: '#/components/schemas/Title'
        inheritorType:
          enum:
          - S
          - I
          - T
          - O
          type: string
        relationship:
          enum:
          - Other
          - Trust
          - Spouse
          - Individual
          type: string
      type: object
    IRADepositDetails:
      properties:
        depositType:
          enum:
          - contribution
          - rollover
          type: string
        taxYear:
          enum:
          - current
          - prior
          type: string
        fromIraType:
          enum:
          - RI
          - RO
          - RT
          - SP
          - ED
          - TH
          - RH
          - SH
          - RRSP
          - SRRSP
          - TFSA
          - SIMPLE
          - ISA
          type: string
      type: object
    IRAPrimaryBeneficiary:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
        ownershipPercentage:
          type: number
        title:
          $ref: '#/components/schemas/Title'
        relationship:
          enum:
          - Brother
          - Daughter
          - Estate
          - Father
          - Husband
          - Mother
          - Other
          - Sister
          - Son
          - Wife
          - Charity
          - Trust
          - Spouse
          - Child
          - Sibling
          - Parent
          - Grandchild
          - Common Law Partner
          type: string
      type: object
    IRAPrimaryBeneficiaryEntity:
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        id:
          type: string
        externalId:
          type: string
        ownershipPercentage:
          type: number
        title:
          $ref: '#/components/schemas/Title'
        relationship:
          enum:
          - Brother
          - Daughter
          - Estate
          - Father
          - Husband
          - Mother
          - Other
          - Sister
          - Son
          - Wife
          - Charity
          - Trust
          - Spouse
          - Child
          - Sibling
          - Parent
          - Grandchild
          - Common Law Partner
          type: string
        executor:
          $ref: '#/components/schemas/Individual'
        executionDate:
          format: date
          type: string
        articleOfWill:
          type: string
        entityType:
          enum:
          - Trust
          - Estate
          - Charity
          type: string
        charityNumber:
          type: string
      type: object
    IRAWithdrawalDetails:
      properties:
        distributionType:
          enum:
          - NORMAL
          - EARLY
          - EARLY_EXCEPT
          - DEATH
          - DISABILITY
          - EXCESS_CONTRIB
          type: string
        excessContribYr:
          format: int32
          type: integer
        fedTaxRate:
          type: number
        legalResidenceState:
          type: string
        stateTaxRate:
          type: number
      type: object
    Identification:
      description: Identification information of the associated person.
      example:
        citizenship: AUS
        driversLicense: "989444798"
        issuingCountry: AUS
        hasExpirationDate: true
        expirationDate: 2029-03-22
        rta: "9999999"
        issuingState: AU-QLD
      properties:
        citizenship:
          description: "Citizenship of the applicant.<br>If citizenship, citizenship2,\
            \ OR citizenship3 is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire\
            \ is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred\
            \ id document by IssuingCountry"
          type: string
        citizenship2:
          description: "If the applicant has multiple citizenship, provide the additional\
            \ citizenship of the applicant.<br>If citizenship, citizenship2, OR citizenship3\
            \ is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire\
            \ is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred\
            \ id document by IssuingCountry"
          type: string
        citizenship3:
          description: "If the applicant has multiple citizenship, provide the additional\
            \ citizenship of the applicant.<br>If citizenship, citizenship2, OR citizenship3\
            \ is classified as a ‘Prohibited Country', THEN ProhibitedCountryQuestionnaire\
            \ is required.<br>List of Prohibited Countries an be obtained using /getEnumerations<br>Preferred\
            \ id document by IssuingCountry"
          type: string
        ssn:
          description: "Social security number, required for US Residents and citizens."
          type: string
        sin:
          description: "Social insurance number, required for Canada Residents and\
            \ citizens."
          type: string
        driversLicense:
          description: "Drivers License<br>Pattern for AUS: ^.{0,64}$<br>Pattern for\
            \ NZL: ^[A-Z]{2}\\d{6}$"
          type: string
        passport:
          description: Passport
          type: string
        alienCard:
          description: Alien Card
          type: string
        medicareCard:
          description: Only applicable for Australia residents.
          type: string
        cardColor:
          description: Required if MedicareCard is provided.
          enum:
          - BLUE
          - GREEN
          - YELLOW
          type: string
        medicareReference:
          description: Required if MedicareCard is provided.
          type: string
        nationalCard:
          description: "National Identification Card<br>Pattern by Country-<br> ARG:\
            \ ^\\d{8}$<br>AUS: ^(\\d{8}|\\d{9})$<br>BRA: ^\\d{11}$<br>CHN: ^\\d{17}(\\\
            d|X)$<br>DNK: ^\\d{10}$<br>ESP: ^\\d{8}[A-Z]$<br>FRA: ^\\d{15}$<br>FRA:\
            \ ^\\d{4}([A-Z]|\\d){3}\\d{5}$<br>ITA: ^([A-Z]{2}\\d{7}|\\d{7}[A-Z]{2}|[A-Z]{2}\\\
            d{5}[A-Z]{2})$<br>ITA: ^[A-Z]{6}\\d{2}[A-Z]\\d{2}[A-Z]\\d{3}[A-Z]$<br>MEX:\
            \ ^[A-Z]{4}\\d{6}[A-Z]{6}\\d{2}$<br>MYZ: ^\\d{12}$<br>RUS: ^\\d{10}$<br>RUS:\
            \ ^\\d{9}$<br>SGP: ^[A-Z]\\d{7}[A-Z]$<br>SWE: ^(\\d{10}|\\d{12})$<br>TUR:\
            \ ^\\d{11}$<br>ZAF: ^\\d{13}$"
          type: string
        issuingCountry:
          description: Issuing country of the ID document.
          type: string
        issuingState:
          description: Issuing state of the ID document.
          type: string
        rta:
          description: Only applicable IF ID_Type=DriversLicense AND IssuingCountry=AUS
          type: string
        legalResidenceCountry:
          type: string
        legalResidenceState:
          type: string
        educationalQualification:
          type: string
        fathersName:
          type: string
        greenCard:
          type: boolean
        panNumber:
          description: "India PanCard, required for India Residents and citizens."
          type: string
        taxId:
          description: Tax ID TIN within <TaxResidencies>foreign_tax_id within <W8Ben>
          type: string
        proofOfAgeCard:
          type: string
        expire:
          description: Indicate IF ID document has an ExpirationDate.
          type: boolean
        expirationDate:
          description: Provide expiration date of the ID document. Cannot be past
            date.
          format: date
          type: string
      type: object
    Individual:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
      type: object
    IndividualApplicant:
      properties:
        accountHolderDetails:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        financialInformation:
          items:
            $ref: '#/components/schemas/FinancialInformation'
          type: array
        regulatoryInformation:
          items:
            $ref: '#/components/schemas/RegulatoryInformation'
          type: array
        regulatedMemberships:
          items:
            $ref: '#/components/schemas/RegulatedMembership'
          type: array
        accreditedInvestorInformation:
          $ref: '#/components/schemas/AccreditedInvestorInformation'
        taxInformation:
          $ref: '#/components/schemas/IndividualTaxInformation'
        withholdingStatement:
          $ref: '#/components/schemas/WithholdingStatementType'
      type: object
    IndividualIRABene:
      example:
        firstName: firstName
        lastName: lastName
        identification:
          key: identification
        ownership: 2
        dateOfBirth: dateOfBirth
        location:
          key: location
        type: type
        relationship: relationship
        perStripes: perStripes
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
        type:
          type: string
        identification:
          additionalProperties:
            type: string
          type: object
        location:
          additionalProperties:
            type: string
          type: object
        relationship:
          type: string
        ownership:
          format: int32
          type: integer
        perStripes:
          type: string
      type: object
    IndividualName:
      properties:
        salutation:
          enum:
          - Mr.
          - Mrs.
          - Ms.
          - Dr.
          - Mx.
          - Ind.
          type: string
        first:
          type: string
        last:
          type: string
        middle:
          type: string
        suffix:
          enum:
          - Jr.
          - Sr.
          - I
          - II
          - III
          - IV
          - V
          type: string
        title:
          type: string
      type: object
    IndividualTaxInformation:
      properties:
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        w8BenE:
          $ref: '#/components/schemas/FormW8BENE'
      type: object
    InformationChange:
      properties:
        addEntities:
          items:
            $ref: '#/components/schemas/AddEntity'
          type: array
        updateEntities:
          items:
            $ref: '#/components/schemas/UpdateEntity'
          type: array
        deleteEntities:
          items:
            $ref: '#/components/schemas/DeleteEntity'
          type: array
        ibAccountId:
          type: string
      type: object
    InstructionErrorResult:
      allOf:
      - $ref: '#/components/schemas/InstructionResult'
      properties:
        error:
          properties:
            errorCode:
              type: string
            errorMessage:
              type: string
          required:
          - errorCode
          - errorMessage
          type: object
      required:
      - error
      type: object
    InstructionPollingResponse:
      example:
        instructionSetId: -1988905739
        instructionResult: ""
        status: 202
      properties:
        status:
          example: 202
          type: number
        instructionSetId:
          example: -1988905739
          type: number
        instructionResult:
          allOf:
          - $ref: '#/components/schemas/PollingInstructionResult'
      required:
      - instructionSetId
      - status
      type: object
    InstructionResponse:
      example:
        instructionSetId: -1988905739
        instructionResult: ""
        status: 202
      properties:
        status:
          example: 202
          type: number
        instructionSetId:
          example: -1988905739
          type: number
        instructionResult:
          allOf:
          - $ref: '#/components/schemas/InstructionResult'
      required:
      - instructionSetId
      - status
      type: object
    InstructionResult:
      properties:
        clientInstructionId:
          example: "1012983"
          type: string
        instructionType:
          enum:
          - ACCOUNT_CLOSE
          - ACH_INSTRUCTION
          - APPLY_FEE_TEMPLATE
          - CANCEL_INSTRUCTION
          - COMPLEX_ASSET_TRANSFER
          - DELETE_BANK_INSTRUCTION
          - DEPOSIT
          - DWAC
          - EXTERNAL_POSITION_TRANSFER
          - FOP
          - QUERY_RECENT_INSTRUCTIONS
          - QUERY_WITHDAWABLE_FUNDS INTERNAL_POSITION_TRANSFER
          - INTERNAL_CASH_TRANSFER
          - MICRO_AMOUNT
          - PREDEFINED_DESTINATION_INSTRUCTION TRADITIONAL_BANK_INSTRUCTION_VERIFICATION
          - WITHDRAWAL
          - QUERY_IRA_CONTRIBUTIONS
          example: INTERNAL_CASH_TRANSFER
          type: string
        instructionStatus:
          enum:
          - PENDING
          - PROCESSED
          example: PENDING
          type: string
        instructionId:
          example: 45123654
          type: number
        ibReferenceId:
          example: 23456745
          type: number
        description:
          example: Please poll for status after 10 minutes
          type: string
      required:
      - clientInstructionId
      - instructionId
      - instructionStatus
      - instructionType
      type: object
    InsufficientScopeResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Forbidden
          type: string
        status:
          example: 403
          format: int32
          type: integer
        detail:
          example: The access token fails to have sufficient scope
          type: string
      required:
      - status
      - title
      - type
      type: object
    InterestMarkupType:
      properties:
        currency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        debitMarkup:
          type: number
        ibDebitMarkup:
          type: number
        creditMarkdown:
          type: number
        shortCreditMarkdown:
          type: number
        shortCfdCreditMarkdown:
          type: number
        longCfdDebitMarkdown:
          type: number
        shortIndexCfdCreditMarkdown:
          type: number
        longIndexCfdDebitMarkdown:
          type: number
        shortFxCfdMarkup:
          type: number
        longFxCfdMarkdown:
          type: number
      type: object
    InternalCashTransferInstruction:
      maxProperties: 6
      minProperties: 5
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        sourceAccountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        targetAccountId:
          example: U15667
          maxLength: 32
          minLength: 1
          type: string
        amount:
          example: 123
          exclusiveMinimum: true
          minimum: 0
          type: number
        currency:
          example: GBP
          maxLength: 3
          minLength: 1
          type: string
        dateTimeToOccur:
          format: date-time
          type: string
      required:
      - amount
      - clientInstructionId
      - currency
      - sourceAccountId
      - targetAccountId
      type: object
    InternalPositionTransferInstruction:
      maxProperties: 5
      minProperties: 5
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        sourceAccountId:
          example: U46377
          minLength: 1
          type: string
        targetAccountId:
          example: U463756
          minLength: 1
          type: string
        transferQuantity:
          example: 100
          exclusiveMinimum: true
          minimum: 0
          type: number
        tradingInstrument: {}
      required:
      - clientInstructionId
      - sourceAccountId
      - targetAccountId
      - tradingInstrument
      - transferQuantity
      type: object
    InternalServerErrorResponse:
      example:
        type: /simple
        title: Internal Server Error
        status: 500
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Internal Server Error
          type: string
        status:
          example: 500
          format: int32
          type: integer
      required:
      - status
      - title
      - type
    InvalidAccessTokenResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Unauthorized
          type: string
        status:
          example: 401
          format: int32
          type: integer
        detail:
          example: The access token request is invalid
          type: string
      required:
      - status
      - title
      - type
      type: object
    InvalidArgument:
      properties:
        field:
          example: accountId
          type: string
        description:
          example: Missing required parameter
          type: string
      required:
      - field
      type: object
    JointApplicant:
      properties:
        firstHolderDetails:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        secondHolderDetails:
          items:
            $ref: '#/components/schemas/AssociatedIndividual'
          type: array
        financialInformation:
          items:
            $ref: '#/components/schemas/FinancialInformation'
          type: array
        regulatoryInformation:
          items:
            $ref: '#/components/schemas/RegulatoryInformation'
          type: array
        regulatedMemberships:
          items:
            $ref: '#/components/schemas/RegulatedMembership'
          type: array
        accreditedInvestorInformation:
          $ref: '#/components/schemas/AccreditedInvestorInformation'
        taxInformation:
          $ref: '#/components/schemas/IndividualTaxInformation'
        withholdingStatement:
          $ref: '#/components/schemas/WithholdingStatementType'
        type:
          enum:
          - community
          - joint_tenants
          - tenants_common
          - tbe
          - au_joint_account
          type: string
      type: object
    JoseHeader:
      properties:
        empty:
          type: boolean
      type: object
    JwsPayload:
      type: object
    LeaveDRIP:
      properties:
        accountId:
          type: string
      type: object
    LeaveSYEP:
      properties:
        accountId:
          type: string
      type: object
    LegalEntity:
      properties:
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        legalEntityIdentification:
          $ref: '#/components/schemas/LegalEntityIdentification'
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        id:
          type: string
        externalId:
          type: string
        usTaxResident:
          type: boolean
        translated:
          type: boolean
      type: object
    LegalEntityIdentification:
      properties:
        placeOfBusinessAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        identification:
          type: string
        identificationCountry:
          type: string
        formationCountry:
          type: string
        formationType:
          enum:
          - PUBLIC
          - PRIVATE
          - OTHER
          type: string
        exchangeCode:
          type: string
        exchangeSymbol:
          type: string
        sameMailAddress:
          type: boolean
      type: object
    LinkDuplicateAccount:
      properties:
        accountId:
          type: string
        externalAccountId:
          type: string
        clientActiveTrading:
          type: boolean
      type: object
    LocalTaxForm:
      properties:
        taxAuthority:
          enum:
          - ISRAEL_TA
          - CANADA_TA
          - RUSSIA_TA
          - SWEDEN_TA
          - AUSTRALIA_TA
          type: string
        qualified:
          type: boolean
        treatyCountry:
          type: string
      type: object
    LoginMessage:
      example:
        messageType: messageType
        contentId: 6
        recordDate: 2000-01-23T04:56:07.000+00:00
        description: description
        id: 0
        state: state
        username: username
      properties:
        recordDate:
          format: date-time
          type: string
        id:
          format: int32
          type: integer
        username:
          type: string
        messageType:
          type: string
        contentId:
          format: int32
          type: integer
        state:
          type: string
        description:
          type: string
      type: object
    LoginMessageRequest:
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        offset:
          format: int32
          minimum: 0
          type: integer
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        status:
          enum:
          - "N"
          - O
          - P
          - C
          - A
          - E
          - F
          - I
          - J
          - L
          - M
          - R
          - W
          - Q
          type: string
        type:
          type: string
      required:
      - endDate
      - startDate
      type: object
    LoginMessageResponse:
      example:
        accountId: accountId
        clearingStatus: clearingStatus
        loginMessages:
        - messageType: messageType
          contentId: 6
          recordDate: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          state: state
          username: username
        - messageType: messageType
          contentId: 6
          recordDate: 2000-01-23T04:56:07.000+00:00
          description: description
          id: 0
          state: state
          username: username
        clearingStatusDescription: clearingStatusDescription
        loginMessagePresent: true
      properties:
        accountId:
          type: string
        clearingStatus:
          type: string
        clearingStatusDescription:
          type: string
        loginMessages:
          items:
            $ref: '#/components/schemas/LoginMessage'
          type: array
        loginMessagePresent:
          type: boolean
      type: object
    MailingAddress:
      properties:
        street1:
          type: string
        postalCode:
          type: string
        country:
          type: string
        city:
          type: string
        state:
          type: string
      type: object
    ManageMarketDataSubscriptions:
      properties:
        service:
          items:
            format: int32
            type: integer
          type: array
        referenceUserName:
          type: string
      type: object
    ManagingOwner:
      properties:
        externalId:
          type: string
        is25PercentOwner:
          type: boolean
      type: object
    MarkupStaircaseType:
      properties:
        amount:
          type: number
        break:
          type: number
      type: object
    MissingRequiredParameterResponse:
      properties:
        type:
          example: /invalid-argument
          type: string
        title:
          example: Bad Request
          type: string
        status:
          example: 400
          format: int32
          type: integer
        invalidArguments:
          items:
            $ref: '#/components/schemas/InvalidArgument'
          type: array
      required:
      - status
      - title
      - type
      type: object
    NAVRangeType:
      properties:
        min:
          type: number
        max:
          type: number
        maxFee:
          type: number
      type: object
    Name:
      properties:
        first:
          type: string
        last:
          type: string
      type: object
    NoSuchInstructionResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Not found
          type: string
        status:
          example: 404
          format: int32
          type: integer
        detail:
          example: No such instruction found
          type: string
      required:
      - status
      - title
      - type
      type: object
    NoSuchInstructionSetResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Not found
          type: string
        status:
          example: 404
          format: int32
          type: integer
        detail:
          example: No such instruction set found
          type: string
        instructionSetId:
          example: 8389943
          format: int32
          type: integer
      required:
      - instructionSetId
      - status
      - title
      - type
      type: object
    NonDisclosedDetail:
      maxProperties: 8
      minProperties: 2
      properties:
        tradeDate:
          example: 2023-07-08
          type: string
        settleDate:
          example: 2023-07-18
          type: string
        psetBic:
          example: DTCYUS33XXX
          maxLength: 64
          minLength: 0
          type: string
        reagDeagBic:
          example: CH100164
          maxLength: 64
          minLength: 0
          type: string
        buyerSellBic:
          example: "320043"
          maxLength: 64
          minLength: 0
          type: string
        memberAccountId:
          example: "123456"
          maxLength: 64
          minLength: 0
          type: string
        safeKeepingAccountId:
          example: "123456"
          maxLength: 64
          minLength: 0
          type: string
      required:
      - settleDate
      - tradeDate
      type: object
    ORGRegulatorType:
      properties:
        regulatorName:
          type: string
        regulatorCountry:
          type: string
        regulatedInCapacity:
          type: string
        regulatorId:
          type: string
      type: object
    ORGRegulatoryInfoType:
      properties:
        publicCompanyInfo:
          $ref: '#/components/schemas/PublicCompanyInfoType'
        orgRegulators:
          items:
            $ref: '#/components/schemas/ORGRegulatorType'
          type: array
        regulated:
          type: boolean
        public:
          type: boolean
      type: object
    OrderQuantityLimit:
      properties:
        asset:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        quantity:
          format: int32
          type: integer
      type: object
    OrderValueLimits:
      properties:
        maxOrderValue:
          type: number
        maxGrossValue:
          type: number
        maxNetValue:
          type: number
        netContractLimit:
          type: number
      type: object
    Organization:
      properties:
        identification:
          $ref: '#/components/schemas/OrganizationIdentification'
        regulatoryInformation:
          $ref: '#/components/schemas/RegulatoryInformation'
      type: object
    OrganizationApplicant:
      properties:
        identifications:
          items:
            $ref: '#/components/schemas/OrganizationIdentification'
          type: array
        accountSupport:
          $ref: '#/components/schemas/AccountSupportType'
        financialInformation:
          items:
            $ref: '#/components/schemas/FinancialInformation'
          type: array
        accreditedInvestorInformation:
          $ref: '#/components/schemas/AccreditedInvestorInformation'
        regulatoryInformation:
          items:
            $ref: '#/components/schemas/RegulatoryInformation'
          type: array
        managingOwner:
          $ref: '#/components/schemas/ManagingOwner'
        associatedEntities:
          $ref: '#/components/schemas/AssociatedEntities'
        regulatedMemberships:
          items:
            $ref: '#/components/schemas/RegulatedMembership'
          type: array
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w8BenE:
          $ref: '#/components/schemas/FormW8BENE'
        w8IMY:
          $ref: '#/components/schemas/FormW8IMY'
        withholdingStatement:
          $ref: '#/components/schemas/WithholdingStatementType'
        typeOfTrading:
          enum:
          - FIRM
          - CUSTOMER
          type: string
        type:
          enum:
          - LLC
          - CORPORATION
          - PARTNERSHIP
          - UNINCORPORATED BUSINESS
          type: string
        orgUsSubsidiary:
          type: boolean
        qualifiedIntermediary:
          type: boolean
        assumedPrimaryReporting:
          type: boolean
        acceptedPrimaryWithholding:
          type: boolean
        usTaxPurposeType:
          enum:
          - C
          - P
          - E
          type: string
      type: object
    OrganizationIdentification:
      properties:
        placeOfBusinessAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        name:
          type: string
        businessDescription:
          type: string
        websiteAddress:
          type: string
        identification:
          type: string
        identificationCountry:
          type: string
        formationCountry:
          type: string
        formationState:
          type: string
        sameMailAddress:
          type: boolean
        translated:
          type: boolean
      type: object
    PartialBondPosition:
      properties:
        cusipNumber:
          type: string
        numberOfBonds:
          format: int64
          type: integer
        all:
          type: boolean
      type: object
    PartialCashPosition:
      properties:
        amount:
          format: float
          type: number
        marginLoan:
          type: boolean
        fullCash:
          type: boolean
      type: object
    PartialFundPosition:
      properties:
        symbol:
          type: string
        numberOfShares:
          format: int64
          type: integer
        all:
          type: boolean
      type: object
    PartialOptionPosition:
      properties:
        symbol:
          type: string
        numberOfContracts:
          format: int64
          type: integer
        all:
          type: boolean
        position:
          enum:
          - LONG
          - SHORT
          type: string
        optionType:
          enum:
          - CALL
          - PUT
          type: string
        strikePrice:
          format: int64
          type: integer
        expirationDate:
          type: string
      type: object
    PartialStockPosition:
      properties:
        symbol:
          type: string
        numberOfShares:
          format: int64
          type: integer
        all:
          type: boolean
        position:
          enum:
          - LONG
          - SHORT
          type: string
        exchange:
          type: string
      type: object
    PartialWarrantPosition:
      properties:
        symbol:
          type: string
        numberOfShares:
          format: int64
          type: integer
        all:
          type: boolean
        position:
          enum:
          - LONG
          - SHORT
          type: string
        optionType:
          enum:
          - CALL
          - PUT
          type: string
        strikePrice:
          format: int64
          type: integer
        expirationDate:
          type: string
      type: object
    PendingTask:
      properties:
        taskNumber:
          format: int32
          type: integer
        formNumber:
          format: int32
          type: integer
        formName:
          type: string
        action:
          type: string
        externalId:
          type: string
        state:
          type: string
        documentRejectReason:
          items:
            type: string
          type: array
        url:
          type: string
        startDate:
          format: date-time
          type: string
        au10tixCreatedDate:
          format: date-time
          type: string
        au10tixExpiryDate:
          format: date-time
          type: string
        entityId:
          format: int32
          type: integer
        onlineTask:
          type: boolean
        requiredForApproval:
          type: boolean
        requiredForTrading:
          type: boolean
        questionIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    PendingTasksResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        accountId:
          type: string
        status:
          type: string
        description:
          type: string
        state:
          type: string
        pendingTasks:
          items:
            $ref: '#/components/schemas/PendingTask'
          type: array
        pendingTaskPresent:
          type: boolean
      type: object
    PhoneInfo:
      properties:
        type:
          enum:
          - Work
          - Home
          - Fax
          - Mobile
          - Mobile (work)
          - Mobile (other)
          - Business
          - Other (voice)
          type: string
        number:
          type: string
        country:
          type: string
        verified:
          type: boolean
      type: object
    PoliticalMilitaryDiplomaticDetailsType:
      properties:
        personName:
          type: string
        title:
          type: string
        organization:
          type: string
        country:
          type: string
      type: object
    PollingInstructionResult:
      properties:
        clientInstructionId:
          example: "1012983"
          type: string
        instructionType:
          enum:
          - ACCOUNT_CLOSE
          - ACH_INSTRUCTION
          - APPLY_FEE_TEMPLATE
          - CANCEL_INSTRUCTION
          - COMPLEX_ASSET_TRANSFER
          - DELETE_BANK_INSTRUCTION
          - DEPOSIT
          - DWAC
          - EXTERNAL_POSITION_TRANSFER
          - FOP
          - QUERY_RECENT_INSTRUCTIONS
          - QUERY_WITHDAWABLE_FUNDS INTERNAL_POSITION_TRANSFER
          - INTERNAL_CASH_TRANSFER
          - MICRO_AMOUNT
          - PREDEFINED_DESTINATION_INSTRUCTION TRADITIONAL_BANK_INSTRUCTION_VERIFICATION
          - WITHDRAWAL
          example: INTERNAL_CASH_TRANSFER
          type: string
        instructionStatus:
          enum:
          - PENDING
          - REJECTED
          - PROCESSED
          example: PENDING
          type: string
        instructionId:
          example: 45123654
          type: number
        ibReferenceId:
          example: 23456745
          type: number
        description:
          example: Please poll for status after 10 minutes
          type: string
        error:
          $ref: '#/components/schemas/PollingInstructionResult_error'
      required:
      - clientInstructionId
      - instructionId
      - instructionStatus
      - instructionType
      type: object
    PredefinedDestinationInstruction:
      maxProperties: 6
      minProperties: 5
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        bankInstructionName:
          example: Instruction
          maxLength: 100
          minLength: 1
          type: string
        bankInstructionMethod:
          enum:
          - LVP
          - SEPA
          - WIRE
          - ACH
          - CPA
          example: ACH
          type: string
        accountId:
          example: U2323232
          maxLength: 10
          minLength: 1
          type: string
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
        financialInstitution:
          $ref: '#/components/schemas/PredefinedDestinationInstruction_financialInstitution'
      required:
      - accountId
      - bankInstructionMethod
      - bankInstructionName
      - clientInstructionId
      - currency
      type: object
    PreviousLossesType:
      properties:
        loss:
          format: int32
          type: integer
        quarter:
          format: int32
          type: integer
        year:
          format: int32
          type: integer
        currency:
          type: string
      type: object
    PrimaryContributorType:
      properties:
        firstName:
          type: string
        middleInitial:
          type: string
        lastName:
          type: string
        suffix:
          enum:
          - Jr.
          - Sr.
          - I
          - II
          - III
          - IV
          - V
          type: string
        employer:
          type: string
        occupation:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        sourceOfFunds:
          type: string
      type: object
    ProblemDetailResponse:
      properties:
        type:
          format: uri
          type: string
        title:
          type: string
        status:
          format: int32
          type: integer
        detail:
          type: string
        instance:
          format: uri
          type: string
      type: object
    ProcessDocuments:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        translation:
          type: boolean
      type: object
    ProhibitedCountryQuestionnaire:
      properties:
        prohibitedQuestionnaireDetails:
          items:
            $ref: '#/components/schemas/ProhibitedQuestionnaireDetail'
          type: array
        accountId:
          type: string
        externalId:
          type: string
        entityId:
          type: string
      type: object
    ProhibitedCountryQuestionnaireList:
      properties:
        prohibitedQuestionnaireDetail:
          items:
            $ref: '#/components/schemas/ProhibitedQuestionnaireDetail'
          type: array
        accountId:
          type: string
        externalId:
          type: string
        entityId:
          type: string
      type: object
    ProhibitedQuestionnaireDetail:
      properties:
        code:
          enum:
          - PASSPORT
          - CITIZENSHIP
          - BUSINESSDEALINGS
          - FINANCIALACCOUNTS
          - RESIDENT
          - MULTI
          - BIRTH
          type: string
        status:
          type: boolean
        details:
          type: string
      type: object
    PublicCompanyInfoType:
      properties:
        exchangeTradedOn:
          type: string
        quotedSymbol:
          type: string
      type: object
    QualifiedPurchaser:
      properties:
        qualifiedPurchaserDetails:
          items:
            $ref: '#/components/schemas/QualifiedPurchaserDetails'
          type: array
        status:
          type: boolean
      type: object
    QualifiedPurchaserDetails:
      properties:
        code:
          enum:
          - InvestmentCompanyAct
          - DiscretionaryBasis
          type: string
        status:
          type: boolean
      type: object
    QueryBankInstruction:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U32343
          minLength: 1
          type: string
        bankInstructionMethod:
          example: WIRE
          minLength: 1
          type: string
      required:
      - accountId
      - bankInstructionMethod
      - clientInstructionId
      type: object
    QueryBankInstructionResult:
      allOf:
      - $ref: '#/components/schemas/InstructionResult'
      properties:
        accountId:
          type: string
        bankInstructionMethod:
          enum:
          - WIRE
          - ACH
          type: string
      required:
      - accountId
      - bankInstructionMethod
      - instructionDetails
      type: object
    QueryFeeTemplate:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U32343
          minLength: 1
          type: string
      required:
      - accountId
      - clientInstructionId
      type: object
    QueryFeeTemplateResult:
      allOf:
      - $ref: '#/components/schemas/InstructionResult'
      example:
        templateDetails: "{}"
      properties:
        templateDetails:
          properties:
            accountId:
              type: string
            templateName:
              type: string
          type: object
      required:
      - templateDetails
      type: object
    QueryIRAContributions:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U68903
          minLength: 1
          type: string
        year:
          example: "2003"
          type: string
      required:
      - accountId
      - clientInstructionId
      - year
      type: object
    QueryIRAContributionsResponse:
      allOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - properties:
          instructionResult:
            $ref: '#/components/schemas/QueryIRAContributionsResult'
        type: object
    QueryIRAContributionsResult:
      allOf:
      - $ref: '#/components/schemas/PollingInstructionResult'
      - properties:
          accountId:
            type: string
          year:
            type: string
          iraType:
            type: string
          contributions:
            items:
              $ref: '#/components/schemas/QueryIRAContributionsResult_allOf_contributions'
            type: array
        required:
        - accountId
        - contributions
        - iraType
        - year
        type: object
    QueryRecentInstructionResponse:
      allOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - properties:
          instructionResult:
            $ref: '#/components/schemas/QueryRecentInstructionResult'
        type: object
    QueryRecentInstructionResult:
      allOf:
      - $ref: '#/components/schemas/PollingInstructionResult'
      - properties:
          instructionHistory:
            $ref: '#/components/schemas/QueryRecentInstructionResult_allOf_instructionHistory'
        required:
        - instructionHistory
        type: object
    QueryRecentInstructions:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U32343
          type: string
        transactionHistory:
          $ref: '#/components/schemas/QueryRecentInstructions_transactionHistory'
      required:
      - accountId
      - clientInstructionId
      - transactionHistory
      type: object
    QueryRecentRecurringEventResult:
      allOf:
      - $ref: '#/components/schemas/InstructionResult'
      example:
        amount: 0.8008281904610115
        recurringTransactionStatus: recurringTransactionStatus
        method: method
        recurringTransactionType: recurringTransactionType
        currency: currency
        transactionHistory: "{}"
        recurringInstructionName: recurringInstructionName
      properties:
        recurringInstructionName:
          type: string
        recurringTransactionType:
          type: string
        recurringTransactionStatus:
          type: string
        amount:
          type: number
        currency:
          type: string
        method:
          type: string
        transactionHistory:
          properties:
            maxNumberOfTransactions:
              format: int32
              type: integer
            result:
              items:
                properties:
                  ibRequestId:
                    format: int32
                    type: integer
                  status:
                    type: string
                type: object
              type: array
          type: object
      required:
      - amount
      - currency
      - method
      - recurringInstructionName
      - recurringTransactionStatus
      - recurringTransactionType
      - transactionHistory
      type: object
    QueryRecentRecurringEvents:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        ibReferenceId:
          example: "-343872793"
          minLength: 1
          type: string
        numberOfTransactions:
          example: 15
          type: number
      required:
      - clientInstructionId
      - ibReferenceId
      type: object
    QueryRecurringInstructions:
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U399192
          minLength: 1
          type: string
        currency:
          example: USD
          minLength: 1
          type: string
      required:
      - accountId
      - clientInstructionId
      - currency
      type: object
    QueryRecurringInstructionsResult:
      allOf:
      - $ref: '#/components/schemas/InstructionResult'
      properties:
        accountId:
          type: string
        recurringInstructions:
          items:
            properties:
              requestId:
                format: int32
                type: integer
              bankInstructionName:
                type: string
              transactionType:
                type: string
              bankInstructionMethod:
                type: string
              amount:
                type: number
              currency:
                type: string
              frequency:
                type: string
              startDate:
                format: date-time
                type: string
              endDate:
                format: date-time
                type: string
            type: object
          type: array
      required:
      - accountId
      - recurringInstructions
      type: object
    QueryWithdrawableAmountsInstructionResult:
      allOf:
      - $ref: '#/components/schemas/PollingInstructionResult'
      - properties:
          accountId:
            type: string
          currency:
            type: string
          withdrawableAmount:
            type: number
          withdrawableAmountNoBorrow:
            type: number
          allowedTransferAmountToMaster:
            type: number
          withdrawableAmountWithoutOriginationHoldNoBorrow:
            type: number
        required:
        - accountId
        - allowedTransferAmountToMaster
        - currency
        - withdrawableAmount
        - withdrawableAmountNoBorrow
        - withdrawableAmountWithoutOriginationHoldNoBorrow
        type: object
      example:
        clientInstructionId: "1012983"
        withdrawableAmountNoBorrow: 6.027456183070403
        description: Please poll for status after 10 minutes
        error:
          errorMessage: errorMessage
          errorCode: errorCode
        withdrawableAmount: 0.8008281904610115
        accountId: accountId
        withdrawableAmountWithoutOriginationHoldNoBorrow: 5.962133916683182
        instructionType: INTERNAL_CASH_TRANSFER
        instructionId: 45123654
        currency: currency
        allowedTransferAmountToMaster: 1.4658129805029452
        ibReferenceId: 23456745
        instructionStatus: PENDING
    QueryWithdrawableAmountsResponse:
      allOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - properties:
          instructionResult:
            $ref: '#/components/schemas/QueryWithdrawableAmountsInstructionResult'
        type: object
      example:
        instructionSetId: -1988905739
        instructionResult:
          clientInstructionId: "1012983"
          withdrawableAmountNoBorrow: 6.027456183070403
          description: Please poll for status after 10 minutes
          error:
            errorMessage: errorMessage
            errorCode: errorCode
          withdrawableAmount: 0.8008281904610115
          accountId: accountId
          withdrawableAmountWithoutOriginationHoldNoBorrow: 5.962133916683182
          instructionType: INTERNAL_CASH_TRANSFER
          instructionId: 45123654
          currency: currency
          allowedTransferAmountToMaster: 1.4658129805029452
          ibReferenceId: 23456745
          instructionStatus: PENDING
        status: 202
    QueryWithdrawableAmountsWithoutOriginHoldResponse:
      allOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - properties:
          instructionResult:
            $ref: '#/components/schemas/QueryWithdrawableAmountsWithoutOriginHoldResult'
        type: object
    QueryWithdrawableAmountsWithoutOriginHoldResult:
      allOf:
      - $ref: '#/components/schemas/PollingInstructionResult'
      - properties:
          accountId:
            type: string
          currency:
            type: string
          withdrawableAmountWithoutOriginationHold:
            type: number
          withdrawableAmountWithoutOriginationHoldNoBorrow:
            type: number
        required:
        - accountId
        - currency
        - withdrawableAmountWithoutOriginationHold
        - withdrawableAmountWithoutOriginationHoldNoBorrow
        type: object
    QueryWithdrawableFunds:
      properties:
        bankRoutingNumber:
          example: "122199983"
          minLength: 0
          type: string
        bankClientAccountNumber:
          example: "9876543210"
          minLength: 0
          type: string
      required:
      - accountId
      - clientInstructionId
      - currency
      type: object
    QueryWithdrawableWithoutOriginHoldFunds:
      properties:
        bankRoutingNumber:
          example: "122199983"
          minLength: 0
          type: string
        bankClientAccountNumber:
          example: "9876543210"
          minLength: 0
          type: string
      required:
      - accountId
      - bankAccountNumber
      - bankRoutingNumber
      - clientInstructionId
      - currency
      type: object
    Questionnaire:
      properties:
        answers:
          items:
            $ref: '#/components/schemas/Answer'
          type: array
        formNumber:
          format: int32
          type: integer
      type: object
    QuestionnaireType:
      properties:
        formNumber:
          format: int32
          type: integer
        detail:
          type: string
      type: object
    Questionnaires:
      properties:
        questionnaire:
          items:
            $ref: '#/components/schemas/Questionnaire'
          type: array
        accountId:
          type: string
      type: object
    QuizQuestionnaires:
      properties:
        questionnaire:
          items:
            $ref: '#/components/schemas/Questionnaire'
          type: array
        accountId:
          type: string
        task:
          items:
            $ref: '#/components/schemas/Task'
          type: array
      type: object
    RecurringInstructionDetail:
      maxProperties: 4
      minProperties: 3
      properties:
        instructionName:
          example: Arkansas-Test
          maxLength: 64
          minLength: 1
          type: string
        frequency:
          enum:
          - MONTHLY
          - QUARTERLY
          - YEARLY
          example: MONTHLY
          type: string
        startDate:
          example: 2023-10-16
          type: string
        endDate:
          example: 2023-10-16
          type: string
      required:
      - frequency
      - instructionName
      - startDate
      type: object
    RecurringTransaction:
      properties:
        achInstruction:
          $ref: '#/components/schemas/ACHInstruction'
        iraWithdrawalDetails:
          $ref: '#/components/schemas/IRAWithdrawalDetails'
        type:
          enum:
          - DEPOSIT
          - WITHDRAWAL
          type: string
        method:
          enum:
          - CHECK
          - WIRE
          - ACH
          - SKIP_DEPOSIT
          type: string
        instruction:
          type: string
        frequency:
          enum:
          - MONTHLY
          - QUARTERLY
          - YEARLY
          type: string
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        name:
          type: string
        amount:
          type: number
        currency:
          enum:
          - USD
          - EUR
          - GBP
          - CAD
          - JPY
          - HKD
          - AUD
          - CHF
          - MXN
          - SEK
          - NZD
          - HUF
          - CZK
          - CNH
          - DKK
          - RUB
          - ILS
          - NOK
          - SGD
          - PLN
          - ZAR
          - AED
          - KRW
          - SAR
          - TRY
          type: string
        ibAccount:
          type: string
      type: object
    RegisteredScope:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        friendly_name:
          type: string
        description:
          type: string
        defaultTokenDurationSeconds:
          format: int64
          type: integer
      type: object
    RegisteredScopeSet:
      properties:
        scopes:
          items:
            $ref: '#/components/schemas/RegisteredScope'
          type: array
      type: object
    RegistrationTask:
      example:
        dateCompleted: 2000-01-23T04:56:07.000+00:00
        formName: formName
        externalId: externalId
        action: action
        isRequiredForApproval: true
        state: state
        isCompleted: true
      properties:
        externalId:
          type: string
        formName:
          type: string
        action:
          type: string
        isRequiredForApproval:
          type: boolean
        isCompleted:
          type: boolean
        dateCompleted:
          format: date-time
          type: string
        state:
          type: string
      type: object
    RegistrationTasksResponse:
      example:
        accountId: accountId
        errorDescription: errorDescription
        registrationTaskPresent: true
        description: description
        hasError: true
        state: state
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        registrationTasks:
        - dateCompleted: 2000-01-23T04:56:07.000+00:00
          formName: formName
          externalId: externalId
          action: action
          isRequiredForApproval: true
          state: state
          isCompleted: true
        - dateCompleted: 2000-01-23T04:56:07.000+00:00
          formName: formName
          externalId: externalId
          action: action
          isRequiredForApproval: true
          state: state
          isCompleted: true
        status: status
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        accountId:
          type: string
        status:
          type: string
        description:
          type: string
        state:
          type: string
        registrationTaskPresent:
          type: boolean
        registrationTasks:
          items:
            $ref: '#/components/schemas/RegistrationTask'
          type: array
      type: object
    RegulatedMembership:
      properties:
        organizationCode:
          type: string
        membershipId:
          type: string
      type: object
    RegulatoryDetail:
      properties:
        code:
          enum:
          - CRIMINAL
          - AFFILIATION
          - CFTCREGISTERED
          - IBACCOUNTS
          - REGULATORYCONTROL
          - EmployeePubTrade
          - ControlPubTraded
          - BROKERDEALER
          - EXCHANGEMEMBERSHIP
          - STOCKCONTROL
          - DISPUTE
          - INVESTIGATION
          - MEMBERSHIP
          - AUSEXPOSURE
          - CONTROLLER
          - POLITICALMILITARYDIPLOMATIC
          - FOREIGN_BANK
          - BROKER_DEALER
          - FUTURES_COMMISSION_MERCHANT
          - MUTUAL_FUND
          - FOREIGN_EXCHANGE
          - MONEY_TRANSMITTER
          - EMPLOYEE_BENEFIT_PLAN
          - US_BANK
          - US_SWAP_DEALER
          - US_SWAP_PARTICIPANT
          - US_INSURANCE_COMPANY
          - NON_US_INSURANCE_COMPANY
          - US_DEPT
          - FINANCIAL_ADVISOR
          - HIGH_RISK_CONTRIBUTION
          type: string
        status:
          type: boolean
        details:
          type: string
        detail:
          type: string
        externalIndividualId:
          type: string
      type: object
    RegulatoryInformation:
      properties:
        regulatoryDetails:
          items:
            $ref: '#/components/schemas/RegulatoryDetail'
          type: array
        regulatoryDetail:
          items:
            $ref: '#/components/schemas/RegulatoryDetail'
          type: array
        selfRegulatedMembership:
          $ref: '#/components/schemas/SelfRegulatedMembershipType'
        affiliationDetails:
          $ref: '#/components/schemas/AffiliationDetailsType'
        financialOrgTypes:
          items:
            type: string
          type: array
        orgRegulatoryInfo:
          $ref: '#/components/schemas/ORGRegulatoryInfoType'
        ausExposureDetails:
          $ref: '#/components/schemas/AUSExposureDetailsType'
        controllerExchangeCode:
          type: string
        politicalMilitaryDiplomaticDetails:
          $ref: '#/components/schemas/PoliticalMilitaryDiplomaticDetailsType'
        translated:
          type: boolean
      type: object
    RemoveTradingPermissions:
      properties:
        tradingPermissions:
          items:
            $ref: '#/components/schemas/TradingPermission'
          type: array
        accountId:
          type: string
      type: object
    ReopenAccount:
      properties:
        accountId:
          type: string
      type: object
    RepDetail:
      properties:
        repId:
          type: string
        percentage:
          format: int32
          type: integer
      type: object
    RepresentativeDetail:
      properties:
        representativeId:
          type: string
        percentage:
          format: int32
          type: integer
      type: object
    RequestDetail:
      example:
        accountID: accountID
        requestType: requestType
        requestId: 0
        dateSubmitted: dateSubmitted
        status: status
      properties:
        requestId:
          format: int64
          type: integer
        dateSubmitted:
          type: string
        status:
          type: string
        accountID:
          type: string
        requestType:
          type: string
      type: object
    RequestDetailsRequest:
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        offset:
          format: int32
          minimum: 0
          type: integer
        limit:
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        status:
          enum:
          - "N"
          - O
          - P
          - C
          - A
          - E
          - F
          - I
          - J
          - L
          - M
          - R
          - W
          - Q
          type: string
      required:
      - endDate
      - startDate
      type: object
    RequestDetailsResponse:
      example:
        total: 5
        offset: 6
        requestDetails:
        - accountID: accountID
          requestType: requestType
          requestId: 0
          dateSubmitted: dateSubmitted
          status: status
        - accountID: accountID
          requestType: requestType
          requestId: 0
          dateSubmitted: dateSubmitted
          status: status
        limit: 1
      properties:
        requestDetails:
          items:
            $ref: '#/components/schemas/RequestDetail'
          type: array
        offset:
          format: int32
          type: integer
        limit:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    RequestInfoResponse:
      example:
        executedAt: executedAt
        requestId: 6
      properties:
        requestId:
          format: int64
          type: integer
        executedAt:
          type: string
      type: object
    ResetAbandonedAccount:
      properties:
        accountId:
          type: string
      type: object
    Residence:
      properties:
        street1:
          type: string
        postalCode:
          type: string
        country:
          type: string
        city:
          type: string
        state:
          type: string
      type: object
    ResidenceAddress:
      description: "Provide the residential address where the applicant physically\
        \ resides. <br><ul><li>If the mailing address is different from the address\
        \ provided in Residence element, THEN you will also include MailingAddress\
        \ element.</li><li>Post Office Box is not accepted for Residential Address.</li><li>Our\
        \ system validates street_1 and street_2 included within Residence attribute\
        \ to ensure Post Office Box address is not provided.</li><li>An error will\
        \ be thrown if the below combinations are included within street_1 OR street_2:</li><ul><li>PB</li><li>PO\
        \ Box</li><li>Post Office Box</li><li>P.O. Box</li><li>In care of</li><li>General\
        \ Delivery</li><li>Regular Expression to validate street_1 and street_2:</li></ul></ul>English:\
        \ (?:P(?:ost(?:al)?)?[\\.\\-\\s]*(?:(?:O(?:ffice)?[\\.\\s]*)?B(?:ox|in|\\\
        b|\\d)|o(?:ffice|\\b)(?:[-\\s]*\\d)|code)|box[-\\s]*\\d)<br>Chinese Simplified:\
        \ PO Box    (?i)\\b((邮政信箱) [0-9]*)\\bChinese Traditional: PO Box   (?i)\\\
        b((郵政信箱) [0-9]*)\\b"
      example: "{\"street1\": \"1 Tester Street\", \"city\": \"London\", \"state\"\
        : \"GB-ENG\" ,\"country\":\"GBR\",\"postalCode\": \"SW10 9QL\"},"
      properties:
        street1:
          description: Street which applicant resides
          type: string
        street2:
          description: Street which applicant resides
          type: string
        city:
          description: City which the applicant resides.
          type: string
        state:
          description: State/Province which the applicant resides.
          type: string
        country:
          description: Country which the applicant resides.
          type: string
        postalCode:
          description: "Postal / Zip code.For countries that do not provide postal\
            \ code, please enter 00000"
          type: string
      type: object
    ResponseFileResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        isProcessed:
          type: boolean
        name:
          type: string
        data:
          type: object
      type: object
    RestrictionInfo:
      example:
        name: name
        id: 7
        byIB: true
      properties:
        id:
          format: int32
          type: integer
        byIB:
          type: boolean
        name:
          type: string
      type: object
    SOIQuestionnaire:
      properties:
        details:
          type: string
      type: object
    SecurityQuestions:
      properties:
        details:
          items:
            $ref: '#/components/schemas/Details'
          type: array
        referenceUserName:
          type: string
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
      type: object
    SelfRegulatedMembershipType:
      properties:
        exchanges:
          type: string
        organizations:
          type: string
      type: object
    ServerPublicKey:
      properties:
        keyId:
          type: string
        keyBitSize:
          format: int32
          minimum: 3072
          type: integer
        symmetric:
          type: boolean
        public:
          type: boolean
        private:
          type: boolean
        asymmetric:
          type: boolean
        empty:
          type: boolean
      type: object
    SignedJwtEchoRequest:
      properties:
        iss:
          example: prodtester
          type: string
    SourceOfIncomeType:
      properties:
        sourceType:
          enum:
          - CONSULTING
          - DISABILITY
          - INHERITANCE
          - INTEREST
          - REALESTATE
          - RENTAL
          - SEVERANCE
          - SPOUSE
          - TRADINGANDINVESTMENTS
          - PENSIONANDSOCIALSECURITY
          - UNEMPLOYMENT
          - OTHER
          type: string
        percentage:
          format: int32
          type: integer
        description:
          type: string
      type: object
    SourceOfWealthType:
      properties:
        sourceType:
          enum:
          - SOW-IND-Allowance
          - SOW-IND-Disability
          - SOW-IND-Income
          - SOW-IND-Inheritance
          - SOW-IND-Interest
          - SOW-IND-MarketProfit
          - SOW-IND-Other
          - SOW-IND-Pension
          - SOW-IND-Property
          - SOW-ORG-Business
          - SOW-ORG-MarketTradingProfits
          - SOW-ORG-Other
          - SOW-ORG-OwnerEquity
          - SOW-ORG-Property
          - SOW-ORG-RetainedEarnings
          type: string
        percentage:
          format: int32
          type: integer
        usedForFunds:
          type: boolean
        description:
          type: string
      type: object
    StatusResponse:
      example:
        requestId: 0
        fileData:
          data: "{}"
          name: name
        dateSubmitted: 2000-01-23T04:56:07.000+00:00
      properties:
        requestId:
          format: int64
          type: integer
        dateSubmitted:
          format: date-time
          type: string
        fileData:
          $ref: '#/components/schemas/FileData'
      type: object
    StmtRequest:
      example:
        accountId: accountId
        endDate: endDate
        accountIds:
        - U123
        - U456
        multiAccountFormat: multiAccountFormat
        cryptoConsolIfAvailable: false
        language: "en, fr defaults to en (english)"
        gzip: false
        mimeType: "application/pdf, text/html, or text/csv"
        startDate: startDate
      properties:
        accountId:
          description: account id
          type: string
        accountIds:
          description: array of account id's
          example:
          - U123
          - U456
          items:
            type: string
          type: array
        startDate:
          description: from date
          type: string
        endDate:
          description: to date
          type: string
        multiAccountFormat:
          description: "possible values are consolidate, concatenate, or customConsolidate"
          type: string
        cryptoConsolIfAvailable:
          default: false
          description: "crypto consolidate flag, If request contains any accounts\
            \ with crypto segment, will turn request into Crypto Consolidated"
          type: boolean
        mimeType:
          description: output format
          example: "application/pdf, text/html, or text/csv"
          type: string
        language:
          default: en
          description: two character ISO language code
          example: "en, fr defaults to en (english)"
          type: string
        gzip:
          default: false
          description: to gzip the whole response pass true
          type: boolean
      required:
      - accountId
      - endDate
      - startDate
      type: object
    SynchronousInstructionResponse:
      $ref: '#/components/schemas/InstructionResponse'
    Task:
      properties:
        formNumber:
          format: int32
          type: integer
        status:
          type: boolean
      type: object
    TaxFormRequest:
      example:
        accountId: UXXXX
        year: 2023
        format: "HTML,CSV,PDF"
        gzip: false
        type: "ALL,1099,1099R,1042S,8949"
      properties:
        accountId:
          description: Account id
          example: UXXXX
          type: string
        year:
          description: Tax Year
          example: 2023
          format: int32
          type: integer
        type:
          description: Tax Form Type (can retrieve available tax documents via /api/v1/tax-documents/available)
          example: "ALL,1099,1099R,1042S,8949"
          type: string
        format:
          description: format
          example: "HTML,CSV,PDF"
          type: string
        gzip:
          default: false
          description: to gzip the whole response pass true
          type: boolean
      required:
      - accountId
      - format
      - type
      - year
      type: object
    TaxFormResponse:
      example:
        data:
          dataType: dataType
          gzip: true
          mimeType: mimeType
          encoding: encoding
          value: value
          accept: accept
      properties:
        data:
          $ref: '#/components/schemas/GetStatementsResponse_data'
      type: object
    TaxFormType:
      example:
        formats:
        - PDF
        - PDF
        taxFormName: "1099"
        isForm: true
      properties:
        isForm:
          type: boolean
        taxFormName:
          example: "1099"
          type: string
        formats:
          description: available tax form formats
          items:
            example: PDF
            type: string
          type: array
      type: object
    TaxPayerDetails:
      properties:
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        userName:
          type: string
      type: object
    TaxResidency:
      properties:
        country:
          type: string
        tin:
          type: string
        tinType:
          enum:
          - SSN
          - EIN
          - NonUS_NationalId
          type: string
      type: object
    Title:
      properties:
        value:
          type: string
        code:
          enum:
          - Account Holder
          - FIRST HOLDER
          - SECOND HOLDER
          - TRADER
          - CEO
          - SECRETARY
          - TREASURER
          - OWNER
          - PRINCIPAL
          - SHAREHOLDER
          - TRUSTEE
          - BENEFICIARY
          - GRANTOR
          - Employee
          - CONTINGENT
          - IRA_BENEFICIARY
          - IRA DECEDENT
          - COMP_OFFICER
          - Other Officer
          - Controlling Officer
          - SIGNATORY
          - NON-EMPLOYEE
          - CUSTODIAN
          - SUCCESSOR_CUSTODIAN
          - DIRECTOR
          - PARTNER
          - CUSTODIAN EMPLOYEE
          - SUCCESSOR CUSTODIAN EMPLOYEE
          - SPOUSE
          - Successor Holder
          type: string
      type: object
    TokenRequest:
      properties:
        grant_type:
          description: "The [authorization grant flow](https://dataetracker.ietf.org/doc/html/rfc6749#section-1.3)\
            \ for the creation of the tokens."
          type: string
        client_assertion:
          description: "The compact [client assertion](https://www.rfc-editor.org/rfc/rfc7521.html)\
            \ token used to authenticate you as a registered client."
          type: string
        client_assertion_type:
          description: "The [client assertion type](https://www.rfc-editor.org/rfc/rfc7521.html#section-4.2)\
            \ that identifies the client assertion."
          type: string
        scope:
          description: The space-delimited list of scopes
          example: echo.read echo.write
          maxLength: 1024
          minLength: 4
          type: string
      required:
      - client_assertion
      - client_assertion_type
      - grant_type
      - scope
      type: object
    TokenResponse:
      example:
        access_token: access_token
        scope: scope
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: The serialized access token
          type: string
        token_type:
          description: "The token type (e.g., Bearer)"
          type: string
        scope:
          description: The space-delimited list of granted scopes
          type: string
        expires_in:
          description: The number of seconds from now until the access token expires
          format: int64
          type: integer
      type: object
    TradingInstrument:
      maxProperties: 3
      minProperties: 1
      oneOf:
      - $ref: '#/components/schemas/Conid'
      - $ref: '#/components/schemas/TradingInstrumentDescription'
      properties:
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
      required:
      - currency
      type: object
    TradingInstrumentDescription:
      maxProperties: 3
      minProperties: 3
      properties:
        securityIdType:
          enum:
          - CUSIP
          - ISIN
          - CASH
          example: ISIN
          type: string
        securityId:
          example: "459200101"
          type: string
        assetType:
          enum:
          - STK
          - CASH
          - UNKNOWN
          example: STK
          type: string
      required:
      - assetType
      - securityId
      - securityIdType
      type: object
    TradingLimits:
      properties:
        orderValueLimits:
          $ref: '#/components/schemas/OrderValueLimits'
        efpQuantityLimits:
          $ref: '#/components/schemas/EFPQuantityLimits'
        orderQuantityLimits:
          items:
            $ref: '#/components/schemas/OrderQuantityLimit'
          type: array
        dayQuantityLimits:
          items:
            $ref: '#/components/schemas/DayQuantityLimit'
          type: array
      type: object
    TradingPermission:
      properties:
        assetClass:
          enum:
          - BILL
          - BOND
          - CASH
          - CFD
          - COMB
          - FOP
          - FUND
          - FUT
          - OPT
          - SSF
          - STK
          - WAR
          - MRGN
          type: string
        exchangeGroup:
          type: string
        country:
          enum:
          - ALL
          - AUSTRALIA
          - AUSTRIA
          - BELGIUM
          - CANADA
          - FRANCE
          - GERMANY
          - HONG KONG
          - ITALY
          - JAPAN
          - KOREA
          - MEXICO
          - NORWAY
          - SINGAPORE
          - SPAIN
          - SWEDEN
          - SWITZERLAND
          - THE NETHERLANDS
          - UNITED KINGDOM
          - UNITED STATES
          - HK-CHINA
          type: string
        product:
          enum:
          - BONDS
          - FUTURES
          - FOREX
          - FUTURES OPTIONS
          - MUTUAL FUNDS
          - STOCKS
          - SINGLE STOCK FUTURES
          - OPTIONS
          - STOCK OPTIONS
          - WARRANTS
          type: string
      type: object
    TraditionalBankInstructionVerification:
      maxProperties: 7
      minProperties: 7
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        bankInstructionCode:
          enum:
          - USACH
          - CAACH
          - ACHUS
          - WIRE
          example: USACH
          type: string
        bankInstructionName:
          example: TestInstr
          maxLength: 100
          minLength: 1
          type: string
        accountId:
          example: U453454
          maxLength: 32
          minLength: 1
          type: string
        pendingInstructionId:
          example: 35354345
          type: number
        creditAmount1:
          example: 1
          exclusiveMinimum: true
          minimum: 0
          type: number
        creditAmount2:
          example: 2
          exclusiveMinimum: true
          minimum: 0
          type: number
      required:
      - accountId
      - bankInstructionCode
      - bankInstructionName
      - clientInstructionId
      - creditAmount1
      - creditAmount2
      - pendingInstructionId
      type: object
    Trust:
      properties:
        identification:
          $ref: '#/components/schemas/TrustIdentification'
        regulatoryInformation:
          $ref: '#/components/schemas/RegulatoryInformation'
      type: object
    TrustApplicant:
      properties:
        identification:
          items:
            $ref: '#/components/schemas/TrustIdentification'
          type: array
        financialInformation:
          items:
            $ref: '#/components/schemas/FinancialInformation'
          type: array
        regulatoryInformation:
          items:
            $ref: '#/components/schemas/RegulatoryInformation'
          type: array
        regulatedMemberships:
          items:
            $ref: '#/components/schemas/RegulatedMembership'
          type: array
        accreditedInvestorInformation:
          $ref: '#/components/schemas/AccreditedInvestorInformation'
        trustees:
          $ref: '#/components/schemas/TrusteesType'
        beneficiaries:
          $ref: '#/components/schemas/AssociationTypeEntities'
        grantors:
          $ref: '#/components/schemas/AssociationTypeEntities'
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w8BenE:
          $ref: '#/components/schemas/FormW8BENE'
        w8IMY:
          $ref: '#/components/schemas/FormW8IMY'
        withholdingStatement:
          $ref: '#/components/schemas/WithholdingStatementType'
        thirdPartyManagement:
          type: boolean
        trustType:
          enum:
          - COMPLEX_TRUST
          - SINGLE_TRUST
          - GRANTOR_TRUST
          - US_TAXABLE_TRUST
          type: string
      type: object
    TrustIdentification:
      properties:
        address:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        name:
          type: string
        description:
          type: string
        typeOfTrust:
          enum:
          - IRREVOC
          - SMSF
          - REVOCABLE
          - TESTAMENTARY
          - RETIREMENT
          - ERISA
          - OTHER
          type: string
        purposeOfTrust:
          type: string
        dateFormed:
          format: date
          type: string
        formationCountry:
          type: string
        formationState:
          type: string
        registrationNumber:
          type: string
        registrationType:
          enum:
          - SSN
          - EIN
          - NonUS_NationalId
          type: string
        registrationCountry:
          type: string
        sameMailAddress:
          type: boolean
        translated:
          type: boolean
      type: object
    TrusteeEntityType:
      properties:
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        employees:
          items:
            $ref: '#/components/schemas/Individual'
          type: array
      type: object
    TrusteeIndividual:
      properties:
        name:
          $ref: '#/components/schemas/IndividualName'
        nativeName:
          $ref: '#/components/schemas/IndividualName'
        birthName:
          $ref: '#/components/schemas/IndividualName'
        motherMaidenName:
          $ref: '#/components/schemas/IndividualName'
        dateOfBirth:
          description: Date of birth of the applicant. The applicant must be 18 years
            or older to open an account. <br><ul><li>If the YYY-MM-DD < 18 years error
            will be triggered and the account will not be created.</li><li>If YYYY-MM-DD
            < 21 the applicant is restricted to opening a CASH account only.</li><li>UGMA
            and UTMA accounts are available for minors 18 years of age or younger.
            An individual or entity who manages an account for a minor until that
            minor reaches a specific age. Available to US residents only.</li><li>This
            application must be opened using the front-end application which is available
            within the IBKR Portal.</li><li>Assets held in a single account managed
            by a single Custodian user.</li><li>Error will be thrown if dateOfBirth
            is any value other than YYYY-MM-DD.</li></ul>
          example: 1990-08-14
          type: string
        countryOfBirth:
          type: string
        cityOfBirth:
          type: string
        gender:
          enum:
          - M
          - F
          - Male
          - Female
          type: string
        maritalStatus:
          enum:
          - S
          - M
          - W
          - D
          - C
          type: string
        numDependents:
          format: int32
          type: integer
        residenceAddress:
          $ref: '#/components/schemas/ResidenceAddress'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        phones:
          items:
            $ref: '#/components/schemas/PhoneInfo'
          type: array
        email:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        employmentType:
          type: string
        employmentDetails:
          $ref: '#/components/schemas/EmploymentDetails'
        employeeTitle:
          type: string
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        w9:
          $ref: '#/components/schemas/FormW9'
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        crs:
          $ref: '#/components/schemas/FormCRS'
        prohibitedCountryQuestionnaire:
          $ref: '#/components/schemas/ProhibitedCountryQuestionnaireList'
        id:
          type: string
        externalId:
          type: string
        userId:
          type: string
        sameMailAddress:
          type: boolean
        authorizedToSignOnBehalfOfOwner:
          type: boolean
        authorizedTrader:
          type: boolean
        usTaxResident:
          type: boolean
        translated:
          type: boolean
        primaryTrustee:
          type: boolean
        nfaRegistered:
          type: boolean
        nfaRegistrationNumber:
          type: string
      type: object
    TrusteesType:
      properties:
        individuals:
          items:
            $ref: '#/components/schemas/TrusteeIndividual'
          type: array
        entities:
          items:
            $ref: '#/components/schemas/TrusteeEntityType'
          type: array
      type: object
    UnauthorizedAccessResponse:
      properties:
        type:
          example: /simple
          type: string
        title:
          example: Unauthorized
          type: string
        status:
          example: 402
          format: int32
          type: integer
        detail:
          example: The request cannot be fulfilled for the account
          type: string
      required:
      - status
      - title
      - type
      type: object
    UpdateAccountAlias:
      properties:
        accountId:
          type: string
        accountAlias:
          type: string
      type: object
    UpdateAccountRepresentatives:
      properties:
        representativeDetails:
          items:
            $ref: '#/components/schemas/RepresentativeDetail'
          type: array
        accountId:
          type: string
      type: object
    UpdateBCAN:
      properties:
        accountId:
          type: string
        bcan:
          type: string
        ceNumber:
          type: string
      type: object
    UpdateCredentials:
      properties:
        updateEmail:
          $ref: '#/components/schemas/UpdateEmail'
        updatePassword:
          $ref: '#/components/schemas/UpdatePassword'
        accountId:
          type: string
        referenceUserName:
          type: string
      type: object
    UpdateEmail:
      properties:
        email:
          type: string
        token:
          type: string
        access:
          type: boolean
        externalId:
          type: string
        entityId:
          type: string
      type: object
    UpdateEntity:
      properties:
        addRelationships:
          items:
            $ref: '#/components/schemas/AddRelationship'
          type: array
        deleteRelationships:
          items:
            $ref: '#/components/schemas/DeleteRelationship'
          type: array
        individual:
          $ref: '#/components/schemas/Individual'
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        trust:
          $ref: '#/components/schemas/Trust'
        organization:
          $ref: '#/components/schemas/Organization'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        ibEntityId:
          format: int32
          type: integer
      type: object
    UpdateExternalId:
      properties:
        accountId:
          type: string
        newExternalId:
          type: string
      type: object
    UpdatePassword:
      properties:
        encryptedPassword:
          type: string
        encryptedKeyName:
          type: string
        token:
          type: string
      type: object
    UpdatePropertyProfile:
      properties:
        accountId:
          type: string
        propertyProfile:
          type: string
      type: object
    UpdateTaxForm:
      properties:
        localTaxForms:
          items:
            $ref: '#/components/schemas/LocalTaxForm'
          type: array
        w8Ben:
          $ref: '#/components/schemas/FormW8BEN'
        w8BenE:
          $ref: '#/components/schemas/FormW8BENE'
        w9:
          $ref: '#/components/schemas/FormW9'
        translation:
          type: boolean
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        accountId:
          type: string
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        entityId:
          type: string
        externalId:
          type: string
      type: object
    UpdateUserAccessRights:
      properties:
        subAccounts:
          items:
            type: string
          type: array
        repId:
          type: string
        action:
          type: string
      type: object
    UpdateW8BEN:
      properties:
        taxPayerDetails:
          $ref: '#/components/schemas/TaxPayerDetails'
        documents:
          items:
            $ref: '#/components/schemas/Document'
          type: array
        inputLanguage:
          enum:
          - en
          - zh-Hans
          - ja
          - ru
          - fr
          - pt
          - es
          - it
          - ar-AE
          - de
          - he-IL
          - hu
          type: string
        translation:
          type: boolean
        accountId:
          type: string
      type: object
    UpdateWithholdingStatement:
      properties:
        accountId:
          type: string
        fatcaCompliantType:
          enum:
          - FATCA_COMPLIANT
          - NON_CONSENTING_US_ACCOUNT
          - NON_COOPERATIVE_ACCOUNT
          type: string
        usIncomeTax:
          type: boolean
        treatyCountry:
          type: string
        certW8Imy:
          type: boolean
        effectiveDate:
          format: date
          type: string
      type: object
    User:
      properties:
        userPrivileges:
          items:
            $ref: '#/components/schemas/UserPrivilege'
          type: array
        mdServices:
          items:
            format: int32
            type: integer
          type: array
        id:
          type: string
        externalUserId:
          type: string
        externalIndividualId:
          type: string
        encryptedPassword:
          type: string
        encryptedKeyName:
          type: string
        prefix:
          type: string
      type: object
    UserDetails:
      properties:
        name:
          $ref: '#/components/schemas/Name'
        email:
          type: string
        residenceAddress:
          $ref: '#/components/schemas/Residence'
        mailingAddress:
          $ref: '#/components/schemas/MailingAddress'
        identification:
          $ref: '#/components/schemas/Identification'
        taxResidencies:
          items:
            $ref: '#/components/schemas/TaxResidency'
          type: array
        dateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        sameMailAddress:
          type: boolean
        externalId:
          type: string
      type: object
    UserNameAvailableResponse:
      example:
        isAvailable: true
        errorDescription: errorDescription
        isValid: true
        hasError: true
        error:
          errorDescription: errorDescription
          hasError: true
          error: null
        suggestedUserName:
        - suggestedUserName
        - suggestedUserName
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
        hasError:
          type: boolean
        errorDescription:
          type: string
        isValid:
          type: boolean
        isAvailable:
          type: boolean
        suggestedUserName:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    UserPrivilege:
      properties:
        externalAccountId:
          type: string
        privilege:
          enum:
          - OWNER
          - TRADER
          - CUSTOM
          - NONE
          type: string
      type: object
    WireDetails:
      properties:
        bankName:
          type: string
        bankAccountNumber:
          type: string
        bankCode:
          type: string
        routingNumber:
          type: string
        instruction:
          type: string
        countryCode:
          type: string
        referenceNumber:
          type: string
      type: object
    WithdrawFundsInstruction:
      maxProperties: 9
      minProperties: 6
      properties:
        clientInstructionId:
          example: 1012983
          type: number
        accountId:
          example: U46377
          maxLength: 32
          minLength: 1
          type: string
        currency:
          example: USD
          maxLength: 3
          minLength: 1
          type: string
        amount:
          example: 100
          exclusiveMinimum: true
          minimum: 0
          type: number
        bankInstructionName:
          example: Instruction
          maxLength: 150
          minLength: 1
          type: string
        bankInstructionMethod:
          enum:
          - ACH
          - WIRE
          - CHECK
          example: WIRE
          type: string
        dateTimeToOccur:
          format: date-time
          type: string
        iraWithdrawalDetail:
          $ref: '#/components/schemas/WithdrawFundsInstruction_iraWithdrawalDetail'
        recurringInstructionDetail:
          allOf:
          - $ref: '#/components/schemas/RecurringInstructionDetail'
      required:
      - accountId
      - amount
      - bankInstructionMethod
      - bankInstructionName
      - clientInstructionId
      - currency
      type: object
    WithholdingStatementType:
      properties:
        accountId:
          type: string
        fatcaCompliantType:
          enum:
          - FATCA_COMPLIANT
          - NON_CONSENTING_US_ACCOUNT
          - NON_COOPERATIVE_ACCOUNT
          type: string
        usBackupWithholding:
          type: boolean
        treatyCountry:
          type: string
        corporation:
          type: boolean
        flowThrough:
          type: boolean
        effectiveDate:
          format: date
          type: string
        dividendRate:
          format: float
          type: number
        interestRate:
          format: float
          type: number
        usOtherRate:
          format: float
          type: number
        eciRate:
          format: float
          type: number
      type: object
    YodleeSession:
      properties:
        request:
          type: string
        username:
          type: string
        itemAccountId:
          type: string
        accountId:
          type: string
      type: object
    accountAttributes:
      example:
        accountAlias: accountAlias
        brokerageAccess: true
        parent:
          accountId: accountId
          mmc:
          - mmc
          - mmc
          isMParent: true
          isMChild: true
          isMultiplex: true
        clearingStatus: O
        PrepaidCrypto-P: true
        accountTitle: accountTitle
        displayName: displayName
        faClient: true
        noClientTrading: true
        accountVan: accountVan
        PrepaidCrypto-Z: true
        type: DEMO
        accountStatus: 0
        trackVirtualFXPortfolio: true
        tradingType: STKNOPT
        covestor: true
        acctCustType: acctCustType
        currency: USD
        id: id
        businessType: IB_SALES
        ibEntity: IBLLC-US
        desc: desc
      properties:
        accountAlias:
          description: User-defined alias assigned to the account for easy identification.
          nullable: true
          type: string
        accountStatus:
          description: Unix epoch timestamp of account opening.
          format: int32
          type: integer
        accountTitle:
          description: "A name assigned to the account, typically the account holder\
            \ name or business entity."
          type: string
        accountVan:
          description: "The account's virtual account number, or otherwise its IB\
            \ accountId if no VAN is set."
          type: string
        acctCustType:
          description: "Identifies the type of client with which the account is associated,\
            \ such as an individual or LLC."
          type: string
        brokerageAccess:
          description: Indicates whether account can receive live orders (do not mix
            with paper trading).
          type: boolean
        businessType:
          description: "A descriptor of the nature of the account, reflecting the\
            \ responsible group within IB."
          enum:
          - IB_SALES
          - IB_PROSERVE
          type: string
        clearingStatus:
          description: "Status of the account with respect to clearing at IB. O is\
            \ open, P pending, N new, A abandoned, C closed, R rejected."
          enum:
          - O
          - P
          - "N"
          - A
          - R
          - C
          type: string
        covestor:
          description: Indicates a Covestor account.
          type: boolean
        currency:
          description: Base currency of the account.
          enum:
          - USD
          type: string
        desc:
          description: Internal human-readable description of the account.
          type: string
        displayName:
          description: "Displayed name of the account in UI. Will reflect either the\
            \ accountId or accountAlias, if set."
          type: string
        faClient:
          description: Indicates that the account is managed by a financial advisor.
          type: boolean
        ibEntity:
          description: IB business entity under which the account resides.
          enum:
          - IBLLC-US
          - IB-CAN
          - IB-UK
          - IB-IE
          type: string
        id:
          description: The account's IB accountId.
          type: string
        noClientTrading:
          description: Indicates that trading by the client is disabled in the account.
          type: boolean
        parent:
          $ref: '#/components/schemas/accountAttributes_parent'
        PrepaidCrypto-P:
          description: Indicates whether account has a prepaid crypto segment (Crypto
            Plus) with PAXOS.
          type: boolean
        PrepaidCrypto-Z:
          description: Indicates whether account has a prepaid crypto segment (Crypto
            Plus) with ZEROHASH.
          type: boolean
        trackVirtualFXPortfolio:
          description: Indicates that virtual forex positions are tracked in the account.
          type: boolean
        tradingType:
          description: Internal identifier used by IB to reflect the trading permissions
            of the account.
          enum:
          - STKNOPT
          type: string
        type:
          description: "Indicates whether the account exists in production, paper,\
            \ or demo environments."
          enum:
          - DEMO
          type: string
      type: object
    accountSummaryResponse:
      description: Successful return contianing an array of at-a-glance account details.
      example:
        totalCashValue: 2
        regTMargin: 7
        SMA: 6
        accountType: accountType
        accruedInterest: 4
        equityWithLoanValue: 7
        securitiesGVP: 3
        initialMargin: 1
        cashBalances:
        - settledCash: 6
          balance: 1
          currency: currency
        - settledCash: 6
          balance: 1
          currency: currency
        excessLiquidity: 5
        availableFunds: 5
        netLiquidationValue: 2
        regTLoan: 9
        balance: 0
        buyingPower: 1
        maintenanceMargin: 1
        status: status
      properties:
        accountType:
          description: "Describes the unique account type. For standard individual\
            \ accounts, an empty string is returned."
          type: string
        status:
          description: "If the account is currently non-tradeable, a status message\
            \ will be dispalyed."
          type: string
        balance:
          description: Returns the total account balance.
          format: int32
          type: integer
        SMA:
          description: Simple Moving Average of the account.
          format: int32
          type: integer
        buyingPower:
          description: Total buying power available for the account.
          format: int32
          type: integer
        availableFunds:
          description: "The amount of equity you have available for trading. For both\
            \ the Securities and Commodities segments, this is calculated as: Equity\
            \ with Loan Value – Initial Margin."
          format: int32
          type: integer
        excessLiquidity:
          description: The amount of cash in excess of the usual requirement in your
            account.
          format: int32
          type: integer
        netLiquidationValue:
          description: The basis for determining the price of the assets in your account.
          format: int32
          type: integer
        equityWithLoanValue:
          description: The basis for determining whether you have the necessary assets
            to either initiate or maintain security assets.
          format: int32
          type: integer
        regTLoan:
          description: The Federal Reserve Board regulation governing the amount of
            credit that broker dealers may extend to clients who borrow money to buy
            securities on margin.
          format: int32
          type: integer
        securitiesGVP:
          description: Absolute value of the Long Stock Value + Short Stock Value
            + Long Option Value + Short Option Value + Fund Value.
          format: int32
          type: integer
        totalCashValue:
          description: |
            Cash recognized at the time of trade + futures P&L. This value reflects real-time currency positions, including:
             *  Trades executed directly through the FX market.
             *  Trades executed as a result of automatic IB conversions, which occur when you trade a product in a non-base currency.
             *  Trades deliberately executed to close non-base currency positions using the FXCONV destination.
          format: int32
          type: integer
        accruedInterest:
          description: "Accrued interest is the interest accruing on a security since\
            \ the previous coupon date. If a security is sold between two payment\
            \ dates, the buyer usually compensates the seller for the interest accrued,\
            \ either within the price or as a separate payment."
          format: int32
          type: integer
        regTMargin:
          description: The initial margin requirements calculated under US Regulation
            T rules for both the securities and commodities segment of your account.
          format: int32
          type: integer
        initialMargin:
          description: The available initial margin for the account.
          format: int32
          type: integer
        maintenanceMargin:
          description: The available maintenance margin for the account.
          format: int32
          type: integer
        cashBalances:
          description: An array containing balance information for all currencies
            held by the account.
          items:
            $ref: '#/components/schemas/accountSummaryResponse_cashBalances_inner'
          type: array
      type: object
    advancedOrderReject:
      description: "Relates a message generated in response to the rejection of the\
        \ submitted order ticket. In some cases, it may also present a mechanism to\
        \ resubmit the same order following a prompted decision."
      properties:
        orderId:
          description: The order ID assigned by IB to the rejected order ticket.
          format: int32
          type: integer
        reqId:
          description: IB's internal identifier assigned to the returned message.
          type: string
        dismissable:
          description: Indicates whether this prompt is dismissable.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        text:
          description: Human-readable text of the messages emitted by IB in response
            to order submission.
          type: string
        options:
          description: Choices available to the client in response to the rejection
            message.
          items:
            type: string
          type: array
        type:
          description: The specific type of message returned.
          type: string
        messageId:
          description: IB internal identifier for the nature or category of the returned
            message.
          type: string
        prompt:
          description: "Indicates that the message is a prompt offering a set of decisions,\
            \ one or more of which may permit the rejected order to be resubmitted."
          type: boolean
      type: object
    alert:
      description: An array containing all alerts as separate objects.
      example:
        alert_repeatable: 1
        order_time: order_time
        alert_active: 6
        alert_triggered: true
        order_id: 0
        account: account
        alert_name: alert_name
      properties:
        order_id:
          description: The order id (alert id)
          format: int32
          type: integer
        account:
          description: The account the alert was attributed to.
          type: string
        alert_name:
          description: The requested name for the alert.
          type: string
        alert_active:
          description: "Determines if the alert is active [1] or not [0]"
          format: int32
          type: integer
        order_time:
          description: UTC-formatted time of the alert’s creation.
          type: string
        alert_triggered:
          description: Confirms if the order is triggered or not.
          type: boolean
        alert_repeatable:
          description: Confirms if the alert is enabled to occur more than once.
          format: int32
          type: integer
      type: object
    alertActivationRequest:
      properties:
        alertId:
          description: The alert Identifier
          format: int32
          type: integer
        alertActive:
          description: Set whether or not the alert should be active (1) or inactive
            (0).
          format: int32
          type: integer
      required:
      - alertActive
      - alertId
      type: object
    alertActivationResponse:
      example:
        success: true
        failure_list: failure_list
        text: text
        request_id: 0
        order_id: 6
      properties:
        request_id:
          format: int32
          type: integer
        order_id:
          description: |
            The tracking number of the alert. Occasssionally referenced as the alertId or alert_id.
          format: int32
          type: integer
        success:
          description: Displays result status of alert request
          type: boolean
        text:
          description: Response message to clarify success status reason.
          type: string
        failure_list:
          description: "If “success” returns false, will list failed order Ids"
          type: string
      type: object
    alertCondition:
      example:
        condition_logic_bind: true
        conidex: conidex
        contract_description_1: contract_description_1
        condition_trigger_method: 1
        condition_operator: condition_operator
        condition_type: 1
        condition_value: condition_value
        condition_time_zone: condition_time_zone
      properties:
        condition_type:
          description: The type of condition set.
          format: int32
          type: integer
        conidex:
          description: Returns conid and exchange in the format “conid@exchange”
          type: string
        contract_description_1:
          description: Includes relevant descriptions (if applicable).
          type: string
        condition_operator:
          description: Condition operator set for alert.
          type: string
        condition_trigger_method:
          description: TriggerMethod value set.
          format: int32
          type: integer
        condition_value:
          description: Condition value set.
          type: string
        condition_logic_bind:
          description: Condition logic_bind value set.
          type: boolean
        condition_time_zone:
          description: Condition timeZone value set.
          type: string
      type: object
    alertCreationRequest:
      properties:
        orderId:
          description: optional; used in case of modification and represent Alert
            Id
          format: int64
          type: integer
        alertName:
          description: Alert name.
          type: string
        alertMessage:
          description: Alert message which will be sent
          type: string
        alertRepeatable:
          description: "Boolean number (0, 1) signifies if an alert can be triggered\
            \ more than once. A value of ‘1’ is required for MTA alerts"
          format: int32
          type: integer
        email:
          description: Email address you want to send email alerts to
          type: string
        expireTime:
          description: Used with a tif of “GTD” only. Signifies time when the alert
            should terminate if no alert is triggered.
          type: string
        iTWSOrdersOnly:
          description: allow (0) or disallow (1) alerts to trigger alerts through
            the mobile app
          format: int32
          type: integer
        outsideRth:
          description: Allow (1) or disallow (0) the alert to be triggered outside
            of regular trading hours
          format: int32
          type: integer
        sendMessage:
          description: allow (1) or disallow (0) alerts to trigger email messages
          format: int32
          type: integer
        showPopup:
          description: allow (1) or disallow (0) alerts to trigger TWS Pop-up messages
          format: int32
          type: integer
        tif:
          description: Time in Force duration of alert.
          enum:
          - GTC
          - GTD
          type: string
        conditions:
          description: Container for all conditions applied for an alert to trigger.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      required:
      - alertMessage
      - alertName
      - alertRepeatable
      - conditions
      - outsideRth
      - tif
      type: object
    alertCreationResponse:
      example:
        warning_message: warning_message
        order_status: order_status
        success: true
        text: text
        request_id: 0
        order_id: 6
      properties:
        request_id:
          description: Not applicable
          format: int32
          type: integer
        order_id:
          description: The tracking number of the alert. Alert identifier internally
            referenced as order id.
          format: int32
          type: integer
        success:
          description: Displays result status of alert request
          type: boolean
        text:
          description: Response message to clarify submission status.
          type: string
        order_status:
          description: Not applicable
          type: string
        warning_message:
          description: Returns ‘null’
          type: string
      type: object
    alertDeletionResponse:
      example:
        success: true
        failure_list: failure_list
        text: text
        request_id: 0
        order_id: 6
      properties:
        request_id:
          description: Not applicable
          format: int32
          type: integer
        order_id:
          description: |
            The tracking number of the alert. Occasssionally referenced as the alertId or alert_id.
          format: int32
          type: integer
        success:
          description: Displays result status of alert request
          type: boolean
        text:
          description: Response message to clarify success status reason.
          type: string
        failure_list:
          description: "If “success” returns false, will list failed order Ids"
          type: string
      type: object
    alertDetails:
      description: details of the specified alert
      example:
        alert_mta_currency: alert_mta_currency
        alert_repeatable: 1
        alert_triggered: 7
        itws_orders_only: 9
        alert_send_message: 5
        tif: tif
        order_status: Presubmitted
        condition_size: 4
        alert_play_audio: 2
        alertName: alertName
        alert_show_popup: 5
        alert_email: alert_email
        order_not_editable: true
        alert_message: alert_message
        expire_time: expire_time
        tool_id: 3
        alert_active: 6
        time_zone: time_zone
        alert_mta_defaults: alert_mta_defaults
        bg_color: bg_color
        alert_default_type: 2
        condition_outside_rth: 7
        fg_color: fg_color
        conditions:
        - condition_logic_bind: true
          conidex: conidex
          contract_description_1: contract_description_1
          condition_trigger_method: 1
          condition_operator: condition_operator
          condition_type: 1
          condition_value: condition_value
          condition_time_zone: condition_time_zone
        - condition_logic_bind: true
          conidex: conidex
          contract_description_1: contract_description_1
          condition_trigger_method: 1
          condition_operator: condition_operator
          condition_type: 1
          condition_value: condition_value
          condition_time_zone: condition_time_zone
        order_id: 0
        account: account
      properties:
        account:
          description: Requestor’s account ID
          type: string
        order_id:
          description: Alert’s tracking ID. Can be used for modifying or deleting
            alerts.
          format: int32
          type: integer
        alertName:
          description: Human readable name of the alert.
          type: string
        tif:
          description: Time in Force effective for the Alert
          type: string
        expire_time:
          description: Returns the UTC formatted date used in GTD orders.
          type: string
        alert_active:
          description: "Returns if the alert is active [1] or disabled [0]."
          format: int32
          type: integer
        alert_repeatable:
          description: Returns if the alert can be sent more than once.
          format: int32
          type: integer
        alert_email:
          description: Returns the designated email address for sendMessage functionality.
          type: string
        alert_send_message:
          description: Returns whether or not the alert will send an email.
          format: int32
          type: integer
        alert_message:
          description: Returns the body content of what your alert will report once
            triggered
          type: string
        alert_show_popup:
          description: Returns whether or not the alert will trigger TWS Pop-up messages
          format: int32
          type: integer
        alert_play_audio:
          description: Returns whether or not the alert will play audio
          format: int32
          type: integer
        order_status:
          description: represent order statusAlways returns “Presubmitted”.
          enum:
          - Presubmitted
          - Submitted
          type: string
        alert_triggered:
          description: Returns whether or not the alert was triggered yet.
          format: int32
          type: integer
        fg_color:
          description: Foreground color. Not applicable to API.
          type: string
        bg_color:
          description: Background color. Not applicable to API.
          type: string
        order_not_editable:
          description: Returns if the order can be edited.
          type: boolean
        itws_orders_only:
          description: Returns whether or not the alert will trigger mobile notifications.
          format: int32
          type: integer
        alert_mta_currency:
          description: Returns currency set for MTA alerts. Only valid for alert type
            8 & 9.
          type: string
        alert_mta_defaults:
          description: Returns current MTA default values.
          type: string
        tool_id:
          description: Tracking ID for MTA alerts only. Returns ‘null’ for standard
            alerts.
          format: int32
          type: integer
        time_zone:
          description: Returned for time-specific conditions.
          type: string
        alert_default_type:
          description: Returns default type set for alerts. Configured in Client Portal.
          format: int32
          type: integer
        condition_size:
          description: Returns the total number of conditions in the alert.
          format: int32
          type: integer
        condition_outside_rth:
          description: Returns whether or not the alert will trigger outside of regular
            trading hours.
          format: int32
          type: integer
        conditions:
          description: Returns all conditions
          items:
            $ref: '#/components/schemas/alertCondition'
          type: array
      type: object
    alerts:
      items:
        $ref: '#/components/schemas/alert'
      type: array
      uniqueItems: true
    algosResponse:
      description: available algos
      example:
        algos:
        - algos
        - algos
      properties:
        algos:
          description: Contains all relevant algos for the contract.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    allocationGroup:
      example:
        name: name
        accounts:
        - accounts
        - accounts
        default_method: "N"
      properties:
        name:
          description: Name used to refer to your allocation group. This will be used
            while placing orders.
          type: string
        accounts:
          description: "Contains a series of objects depicting which accounts are\
            \ involved and, for user-defined allocation methods, the distribution\
            \ value for each sub-account."
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        default_method:
          $ref: '#/components/schemas/allocationMethod'
      type: object
    allocationGroups:
      example:
        data:
        - data
        - data
      properties:
        data:
          description: "array, which contains all allocation groups under the advisor\
            \ account"
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    allocationMethod:
      default: "N"
      description: |
        Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified. IB-computed allocation methods:
          * `A` - Available Equity
          * `E` - Equal
          * `N` - Net Liquidation Value

        User-specified allocation methods:
          * `C` - Cash Quantity
          * `P` - Percentage
          * `R` - Ratios
          * `S` - Shares
      enum:
      - A
      - E
      - "N"
      - C
      - P
      - R
      - S
      type: string
    availableFundsResponse:
      description: "Contains a combined overview of Commidity, Security and Crypto\
        \ fund values."
      example:
        total:
          Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
          leverage: leverage
          overnight_excess: overnight_excess
          Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
          overnight_available: overnight_available
          day_trades_left: day_trades_left
          Lk Ahd Excss Lqdty: Lk Ahd Excss Lqdty
          current_available: current_available
          current_excess: current_excess
          Lk Ahd Nxt Chng: Lk Ahd Nxt Chng
          buying_power: buying_power
        commodities:
          Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
          overnight_excess: overnight_excess
          Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
          overnight_available: overnight_available
          current_available: current_available
          current_excess: current_excess
        Crypto at Paxos:
          Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
          overnight_excess: overnight_excess
          Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
          overnight_available: overnight_available
          current_available: current_available
          current_excess: current_excess
        securities:
          Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
          leverage: leverage
          overnight_excess: overnight_excess
          Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
          overnight_available: overnight_available
          SMA: SMA
          Lk Ahd Excss Lqdty: Lk Ahd Excss Lqdty
          current_available: current_available
          current_excess: current_excess
      properties:
        total:
          $ref: '#/components/schemas/availableFundsResponse_total'
        Crypto at Paxos:
          $ref: '#/components/schemas/funds'
        commodities:
          $ref: '#/components/schemas/funds'
        securities:
          $ref: '#/components/schemas/availableFundsResponse_securities'
      type: object
    bondFiltersResponse:
      example:
        bondFilters:
        - displayText: Maturity Date
          columnId: 0
          options:
          - text: text
            value: value
          - text: text
            value: value
        - displayText: Maturity Date
          columnId: 0
          options:
          - text: text
            value: value
          - text: text
            value: value
      properties:
        bondFilters:
          description: Contains all filters pertaining to the given issuerId
          items:
            $ref: '#/components/schemas/bondFiltersResponse_bondFilters_inner'
          type: array
      type: object
    brokerageSessionInitRequest:
      properties:
        publish:
          description: "publish brokerage session token at the same time when brokerage\
            \ session initialized. If set false, then session token should be published\
            \ before calling init. Setting true is preferred way."
          type: boolean
        compete:
          description: Determines if other brokerage sessions should be disconnected
            to prioritize this connection.
          type: boolean
      type: object
    brokerageSessionStatus:
      example:
        competing: true
        connected: true
        authenticated: true
        serverInfo:
          fail: fail
          serverVersion: serverVersion
          serverName: serverName
        message: message
        MAC: MAC
      properties:
        authenticated:
          description: Returns whether your brokerage session is authenticated or
            not.
          type: boolean
        competing:
          description: Returns whether you have a competing brokerage session in another
            connection.
          type: boolean
        connected:
          description: Returns whether you are connected to the gateway or not.
          type: boolean
        message:
          description: A message about your authenticate status if any.
          type: string
        MAC:
          description: Device MAC information.
          type: string
        serverInfo:
          $ref: '#/components/schemas/brokerageSessionStatus_serverInfo'
      type: object
    contractInfo:
      example:
        cfi_code: cfi_code
        symbol: symbol
        cusip: cusip
        expiry_full: expiry_full
        con_id: 0
        maturity_date: maturity_date
        industry: industry
        instrument_type: instrument_type
        trading_class: trading_class
        valid_exchanges: valid_exchanges
        allow_sell_long: true
        is_zero_commission_security: true
        local_symbol: local_symbol
        contract_clarification_type: contract_clarification_type
        classifier: classifier
        currency: currency
        text: text
        underlying_con_id: 6
        r_t_h: true
        multiplier: multiplier
        underlying_issuer: underlying_issuer
        contract_month: contract_month
        company_name: company_name
        smart_available: true
        exchange: exchange
        category: category
      properties:
        cfi_code:
          description: Classification of Financial Instrument codes
          type: string
        symbol:
          description: Underlying symbol
          type: string
        cusip:
          description: Returns the CUSIP for the given instrument. Only used in BOND
            trading.
          type: string
        expiry_full:
          description: Returns the expiration month of the contract.
          type: string
        con_id:
          description: Indicates the contract identifier of the given contract.
          format: int32
          type: integer
        maturity_date:
          description: Indicates the final maturity date of the given contract.
          type: string
        industry:
          description: Specific group of companies or businesses.
          type: string
        instrument_type:
          description: Asset class of the instrument.
          type: string
        trading_class:
          description: Designated trading class of the contract.
          type: string
        valid_exchanges:
          description: Comma separated list of support exchanges or trading venues.
          type: string
        allow_sell_long:
          description: Allowed to sell shares you own.
          type: boolean
        is_zero_commission_security:
          description: Indicates if the contract supports zero commission trading.
          type: boolean
        local_symbol:
          description: Contract’s symbol from primary exchange. For options it is
            the OCC symbol.
          type: string
        contract_clarification_type:
          type: string
        classifier:
          type: string
        currency:
          description: Base currency contract is traded in.
          type: string
        text:
          description: "Indicates the display name of the contract, as shown with\
            \ Client Portal."
          type: string
        underlying_con_id:
          description: Underlying contract identifier for the requested contract.
          format: int32
          type: integer
        r_t_h:
          description: Indicates if the contract can be traded outside regular trading
            hours or not.
          type: boolean
        multiplier:
          description: Indicates the multiplier of the contract.
          type: string
        underlying_issuer:
          description: Indicates the issuer of the underlying.
          type: string
        contract_month:
          description: Indicates the year and month the contract expires.
          type: string
        company_name:
          description: Indicates the name of the company or index.
          type: string
        smart_available:
          description: Indicates if the contract can be smart routed or not.
          type: boolean
        exchange:
          description: Indicates the primary exchange for which the contract can be
            traded.
          type: string
        category:
          description: Indicates the industry category of the instrument.
          type: string
    contractRules:
      description: detailed contract information
      example:
        preview: true
        tifDefaults:
          TIF: TIF
          DEFAULT_ACCT: DEFAULT_ACCT
          SIZE: SIZE
          PMALGO: true
        increment: 1
        error: error
        displaySize: 2
        incrementDigits: 1
        canTradeAcctIds:
        - canTradeAcctIds
        - canTradeAcctIds
        incrementRules:
        - lowerEdge: 4
          increment: 7
        - lowerEdge: 4
          increment: 7
        algoEligible: true
        defaultSize: 0
        fraqInt: 7
        costReport: true
        forceOrderPreview: true
        ibAlgoTypes:
        - limit
        - limit
        overnightEligible: true
        limitPrice: 5
        cashQtyIncr: 9
        incrementType: 2
        sizeIncrement: 1
        orderOrigination: orderOrigination
        negativeCapable: true
        modTypes:
        - modTypes
        - modTypes
        priceMagnifier: 3
        cqtTypes:
        - limit
        - limit
        fraqTypes:
        - limit
        - limit
        stopPrice: 5
        orderDefaults:
          LMT:
            LP: LP
        tifTypes:
        - tifTypes
        - tifTypes
        cashCcy: cashCcy
        orderTypes:
        - limit
        - limit
        orderTypesOutside:
        - limit
        - limit
        cashSize: 6
        hasSecondary: true
      properties:
        algoEligible:
          description: Indicates if the contract can trade algos or not.
          type: boolean
        overnightEligible:
          description: Indicates if outsideRTH trading is permitted for the instrument
          type: boolean
        costReport:
          description: Indicates whether or not a cost report has been requested (Client
            Portal only).
          type: boolean
        canTradeAcctIds:
          description: Indicates permitted accountIDs that may trade the contract.
          items:
            type: string
          type: array
        error:
          description: "If rules information can not be received for any reason, it\
            \ will be expressed here."
          nullable: true
          type: string
        orderTypes:
          description: Indicates permitted order types for use with standard quantity
            trading.
          items:
            enum:
            - limit
            - midprice
            - market
            - stop
            - stop_limit
            - mit
            - lit
            - trailing_stop
            - trailing_stop_limit
            - relative
            - marketonclose
            - limitonclose
            type: string
          type: array
        ibAlgoTypes:
          description: Indicates permitted algo types for use with the given contract.
          items:
            enum:
            - limit
            - stop_limit
            - lit
            - trailing_stop_limit
            - relative
            - marketonclose
            - limitonclose
            type: string
          type: array
        fraqTypes:
          description: Indicates permitted order types for use with fractional trading.
          items:
            enum:
            - limit
            - market
            - stop
            - stop_limit
            - mit
            - lit
            - trailing_stop
            - trailing_stop_limit
            type: string
          type: array
        forceOrderPreview:
          description: Indicates if the order preview is forced upon the user before
            submission.
          type: boolean
        cqtTypes:
          description: Indicates accepted order types for use with cash quantity.
          items:
            enum:
            - limit
            - market
            - stop
            - stop_limit
            - mit
            - lit
            - trailing_stop
            - trailing_stop_limit
            type: string
          type: array
        orderDefaults:
          $ref: '#/components/schemas/contractRules_orderDefaults'
        orderTypesOutside:
          description: Indicates permitted order types for use outside of regular
            trading hours.
          items:
            enum:
            - limit
            - stop_limit
            - lit
            - trailing_stop_limit
            - relative
            type: string
          type: array
        defaultSize:
          description: Default total quantity value for orders.
          format: int32
          type: integer
        cashSize:
          description: Default cash value quantity.
          format: int32
          type: integer
        sizeIncrement:
          description: Indicates quantity increase for the contract.
          format: int32
          type: integer
        tifTypes:
          description: Indicates allowed tif types supported for the contract.
          items:
            type: string
          type: array
        tifDefaults:
          $ref: '#/components/schemas/contractRules_tifDefaults'
        limitPrice:
          description: Default limit price for the given contract.
          format: int32
          type: integer
        stopPrice:
          description: Default stop price for the given contract.
          format: int32
          type: integer
        orderOrigination:
          description: Order origin designation for US securities options and Options
            Clearing Corporation
          nullable: true
          type: string
        preview:
          description: Indicates if the order preview is required (for client portal
            only)
          type: boolean
        displaySize:
          description: Standard display increment rule for the instrument.
          format: int32
          nullable: true
          type: integer
        fraqInt:
          description: Indicates decimal places for fractional order size.
          format: int32
          type: integer
        cashCcy:
          description: Indicates base currency for the instrument.
          type: string
        cashQtyIncr:
          description: Indicates cash quantity increment rules.
          format: int32
          type: integer
        priceMagnifier:
          description: |
            Signifies the magnifier of a given contract. This is separate from the price multiplier, and will typically return ‘null’
          format: int32
          nullable: true
          type: integer
        negativeCapable:
          description: Indicates if the value of the contract can be negative (true)
            or if it is always positive (false).
          type: boolean
        incrementType:
          description: Indicates the type of increment style.
          format: int32
          type: integer
        incrementRules:
          description: Indicates increment rule values including lowerEdge and increment
            value.
          items:
            $ref: '#/components/schemas/contractRules_incrementRules_inner'
          type: array
        hasSecondary:
          type: boolean
        modTypes:
          description: Lists the available order types supported when modifying the
            order.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        increment:
          description: Minimum increment values for prices
          format: int32
          type: integer
        incrementDigits:
          description: Number of decimal places to indicate the increment value.
          format: int32
          type: integer
      type: object
    currencyPairs:
      additionalProperties:
        items:
          $ref: '#/components/schemas/currencyPairs_value_inner'
        type: array
      type: object
    deliveryOptions:
      example:
        E:
        - E
        - E
        M: 0
      properties:
        M:
          description: Email option is enabled or not.
          format: int32
          type: integer
        E:
          description: Returns an array of device information.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    detailedContractInformation:
      additionalProperties:
        $ref: '#/components/schemas/detailedContractInformation_value'
      example:
        currencyType: currencyType
        rc: 0
        view:
        - view
        - view
        nd: 6
        id: id
        included:
        - included
        - included
        pm: pm
      properties:
        currencyType:
          description: "Confirms if the currency type. If trading exclusively in your\
            \ base currency, “base” will be returned."
          type: string
        rc:
          description: Returns the data identifier (Internal Use Only).
          format: int32
          type: integer
        view:
          description: Returns the accountIds being viewed and returned.
          items:
            type: string
          type: array
        nd:
          description: Returns the total data points.
          format: int32
          type: integer
        id:
          description: "Returns the request identifier, getPerformanceAllPeriods."
          type: string
        included:
          description: Returns an array containing accounts reviewed.
          items:
            type: string
          type: array
        pm:
          description: Portfolio Measure. Used to indicate TWR or MWR values returned.
          type: string
      type: object
    disclaimerInfo:
      example:
        DT: DT
        FC: FC
      properties:
        FC:
          description: Returns the Typecode for the given disclaimer.
          type: string
        DT:
          description: Returns the Disclaimer message.
          type: string
      type: object
    dynAccountSearchResponse:
      example:
        matchedAccounts:
        - accountId: accountId
          alias: alias
          allocationId: allocationId
        - accountId: accountId
          alias: alias
          allocationId: allocationId
        pattern: pattern
      properties:
        matchedAccounts:
          description: Contains a series of objects that pertain to the account information
            requested.
          items:
            $ref: '#/components/schemas/dynAccountSearchResponse_matchedAccounts_inner'
          type: array
        pattern:
          description: Displays the searchPattern used for the request.
          type: string
      type: object
    errorOnlyResponse:
      example:
        error: error
      properties:
        error:
          description: error reason
          type: string
      type: object
    errorResponse:
      example:
        error: error
        statusCode: statusCode
      properties:
        error:
          description: error reason
          type: string
        statusCode:
          description: mimic response status code
          type: string
      type: object
    failedTickleResponse:
      properties:
        error:
          description: reason why tickle was accepted by not processed
          type: string
      type: object
    features:
      example:
        symbol:
        - symbol
        - symbol
      properties:
        symbol:
          description: |
            Displayed as the string of your symbol Contains a series of objects for each symbol that matches the requested.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    funds:
      description: Contains commodities specific fund values.
      example:
        Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
        overnight_excess: overnight_excess
        Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
        overnight_available: overnight_available
        current_available: current_available
        current_excess: current_excess
      properties:
        current_available:
          description: Describes currently avialable funds in your account for trading.
          type: string
        current_excess:
          description: Describes total value of the account.
          type: string
        Prdctd Pst-xpry Excss:
          description: Displays predicted post-expiration account value.
          type: string
        Lk Ahd Avlbl Fnds:
          description: This value reflects your available funds at the next margin
            change.
          type: string
        overnight_available:
          description: Describes available funds for overnight trading.
          type: string
        overnight_excess:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * `Securities` - Equivalent to regular trading\
            \ hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight\
            \ Maintenance margin.\n"
          type: string
      type: object
    fyiEnableDeviceOption:
      properties:
        deviceName:
          type: string
        deviceId:
          type: string
        uiName:
          type: string
        enabled:
          description: enable or disable device
          type: boolean
      type: object
    fyiSettings:
      items:
        $ref: '#/components/schemas/fyiSettings_inner'
      type: array
    fyiVT:
      example:
        T: 6
        V: 0
      properties:
        V:
          description: Returns 1 to state message was acknowledged.
          format: int32
          type: integer
        T:
          description: Returns the time in ms to complete the edit.
          format: int32
          type: integer
      type: object
    hmdsHistoryResponse:
      description: Object containing the requested historical data and related metadata.
      example:
        data:
        - c: 5.637376656633329
          t: 1
          v: 9.301444243932576
          h: 2.3021358869347655
          l: 7.061401241503109
          o: 5.962133916683182
        - c: 5.637376656633329
          t: 1
          v: 9.301444243932576
          h: 2.3021358869347655
          l: 7.061401241503109
          o: 5.962133916683182
        mktDataDelay: 2
        endTimeVal: 6
        startTimeVal: 0
        startTime: startTime
        endTime: endTime
        points: 3
      properties:
        startTime:
          description: UTC date and time of the start (chronologically earlier) of
            the complete period in format YYYYMMDD-hh:mm:ss.
          type: string
        startTimeVal:
          description: Unix timestamp of the start (chronologically earlier) of the
            complete period.
          format: int32
          type: integer
        endTime:
          description: UTC date and time of the end (chronologically later) of the
            complete period in format YYYYMMDD-hh:mm:ss.
          type: string
        endTimeVal:
          description: Unix timestamp of the end (chronologically later) of the complete
            period.
          format: int32
          type: integer
        data:
          description: Array containing OHLC bars for the requested period.
          items:
            $ref: '#/components/schemas/singleHistoricalBar'
          type: array
        points:
          description: Count of the number of bars returned in the data array.
          format: int32
          type: integer
        mktDataDelay:
          description: Number of milliseconds taken to satisfy this historical data
            request.
          format: int32
          type: integer
      type: object
    hmdsScannerParams:
      example:
        scan_type_list:
        - scan_type_list
        - scan_type_list
        location_tree:
        - location_tree
        - location_tree
        instrument_list:
        - instrument_list
        - instrument_list
      properties:
        scan_type_list:
          description: Contains all values used as the scanner “type” in the request.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            display_name:
              description: Human readable name for the scanner “type”
              type: string
            code:
              description: Value used for the market scanner request.
              type: string
            instruments:
              description: Returns all instruments the scanner type can be used with.
              items:
                description: TODO default missing array inner type to string
                type: string
              type: array
          type: array
        instrument_list:
          description: Contains all values relevant to the scanner “instrument” request
            field.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            display_name:
              description: Human readable representation of the instrument type.
              type: string
            type:
              description: Value used for the market scanner request.
              type: string
            filters:
              description: Returns an array of all filters uniquely avaliable to that
                instrument type.
              items:
                description: TODO default missing array inner type to string
                type: string
              type: array
          type: array
        location_tree:
          description: Contains all values relevant to the location field of the market
            scanner request.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            display_name:
              description: Returns the overarching instrument type to designate the
                location.
              type: string
            type:
              description: Returns the code value of the market scanner instrument
                type value.
              type: string
            locations:
              items:
                description: TODO default missing array inner type to string
                type: string
              properties:
                display_name:
                  description: Returns the human-readable value of the market scanner’s
                    location value.
                  type: string
                type:
                  description: Returns the code value of the market scanner location
                    value.
                  type: string
                locations:
                  description: Always returns an empty array at this depth.
                  items:
                    description: TODO default missing array inner type to string
                    type: string
                  type: array
              type: array
          type: array
      type: object
    hmdsScannerRunRequest:
      properties:
        instrument:
          description: Specify the type of instrument for the request. Found under
            the “instrument_list” value of the /hmds/scanner/params request.
          type: string
        locations:
          description: Specify the type of location for the request. Found under the
            “location_tree” value of the /hmds/scanner/params request.
          type: string
        scanCode:
          description: Specify the scanner type for the request. Found under the “scan_type_list”
            value of the /hmds/scanner/params request.
          type: string
        secType:
          description: Specify the type of security type for the request. Found under
            the “location_tree” value of the /hmds/scanner/params request.
          type: string
        delayedLocations:
          type: string
        maxItems:
          default: 250
          description: Specify how many items should be returned.
          format: int32
          type: integer
        filters:
          description: |
            Array of objects containing all filters upon the scanner request. Content contains a series of key:value pairs. While “filters” must be specified in the body, no content in the array needs to be passed.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            '{filter key}':
              type: string
          type: array
      type: object
    individualPosition:
      description: A specific account's position in the requested conid.
      example:
        avgPrice: 6.027456183070403
        conExchMap:
        - conExchMap
        - conExchMap
        pageSize: 4
        assetClass: assetClass
        type: type
        mktValue: 7.457744773683766
        hasOptions: true
        lastTradingDay: lastTradingDay
        incrementRules:
        - increment: 1.0246457001441578
          lowerEdge: 1.4894159098541704
        - increment: 1.0246457001441578
          lowerEdge: 1.4894159098541704
        countryCode: countryCode
        sectorGroup: sectorGroup
        baseAvgPrice: 5.962133916683182
        currency: currency
        model: model
        baseMktValue: 2.3021358869347655
        baseUnrealizedPnl: 9.301444243932576
        expiry: expiry
        avgCost: 0.8008281904610115
        exchs: "{}"
        sector: sector
        allExchanges: allExchanges
        group: group
        contractDesc: contractDesc
        ticker: ticker
        multiplier: 1.1730742509559433
        strike: strike
        acctId: acctId
        fullName: fullName
        isEventContract: true
        undConid: 6
        baseMktPrice: 5.637376656633329
        baseRealizedPnl: 7.061401241503109
        putOrCall: P
        displayRule:
          magnification: 1
          displayRuleStep:
          - lowerEdge: 4.145608029883936
            decimalDigits: 2
            wholeDigits: 7
          - lowerEdge: 4.145608029883936
            decimalDigits: 2
            wholeDigits: 7
        unrealizedPnl: 8.762042012749001
        chineseName: chineseName
        name: name
        isUS: true
        realizedPnl: 9.965781217890562
        conid: 3
        mktPrice: 6.84685269835264
        position: 5.025004791520295
        time: 9
        listingExchange: listingExchange
        baseAvgCost: 1.4658129805029452
        exerciseStyle: exerciseStyle
      properties:
        acctId:
          description: IB accountId of an account with a position in the requested
            conid.
          type: string
        allExchanges:
          description: Comma separated all exchanges on which the instrument trades.
          type: string
        assetClass:
          description: Asset class of the requested instrument.
          type: string
        avgCost:
          description: The account's average cost for its position.
          type: number
        avgPrice:
          description: The account's average price for its position.
          type: number
        baseAvgCost:
          description: Average cost in the account's base currency.
          type: number
        baseAvgPrice:
          description: Average price in the account's base currency.
          type: number
        baseMktPrice:
          description: Market price of instrument in the account's base currency.
          type: number
        baseMktValue:
          description: Market value of the position in the account's base currency.
          type: number
        baseRealizedPnl:
          description: Realized PnL for the instrument in the account's base currency.
          type: number
        baseUnrealizedPnl:
          description: Unrealized PnL for the instrument in the account's base currency.
          type: number
        chineseName:
          description: Chinese name of the instrument.
          type: string
        conExchMap:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        conid:
          description: IB contract ID for the instrument.
          format: int32
          type: integer
        contractDesc:
          description: Human-readable description of the instrument.
          type: string
        countryCode:
          description: Country in which the instrument is issued.
          type: string
        currency:
          description: Currency in which the instrument trades.
          type: string
        displayRule:
          $ref: '#/components/schemas/individualPosition_displayRule'
        exchs:
          nullable: true
          type: object
        exerciseStyle:
          description: Style of exercise for options.
          nullable: true
          type: string
        expiry:
          description: "Expiration of instrument, if applicable."
          nullable: true
          type: string
        fullName:
          description: Full display name of the instrument.
          type: string
        group:
          description: Industry sub-categorization of the instrument.
          type: string
        hasOptions:
          description: Indicates whether instrument has options contracts available
            for trading at IB.
          type: boolean
        incrementRules:
          description: Array containing increment rules used when pricing orders for
            the instrument.
          items:
            $ref: '#/components/schemas/individualPosition_incrementRules_inner'
          type: array
        isEventContract:
          description: Indicates whether the instrument is an Event Contract.
          type: boolean
        isUS:
          description: Indicates whether the instrument is issued in the US.
          type: boolean
        lastTradingDay:
          description: "Last day of trading in the instrument, if applicable. Formatted\
            \ `YYYYMMDD`."
          type: string
        listingExchange:
          description: "The exchange on which the instrument is listed, or the primary\
            \ exchange recognized by IB for the instrument."
          type: string
        mktPrice:
          description: "Current market price of the instrument, in the instrument's\
            \ currency."
          type: number
        mktValue:
          description: "Current market value of the account's position in the instrument,\
            \ in the instrument's currency."
          type: number
        model:
          description: Name of the model portfolio in which the account is invested
            that contributes this position.
          type: string
        multiplier:
          description: "Instrument's multiplier, if applicable."
          type: number
        name:
          description: Formal name of the entity or asset to which the instrument
            relates.
          type: string
        pageSize:
          description: Maximum number of accounts that can be returned in a single
            request.
          format: int32
          type: integer
        position:
          description: Size of position in units of instrument.
          type: number
        putOrCall:
          description: "The right of an options contract, if applicable."
          enum:
          - P
          - C
          type: string
        realizedPnl:
          description: Realized PnL for the instrument in the instrument's currency.
          type: number
        sector:
          description: Industry sector categorization of the instrument.
          type: string
        sectorGroup:
          description: Industry sub-categorization of the instrument.
          type: string
        strike:
          description: "Strike price, if applicable. Returned as string."
          type: string
        ticker:
          description: Symbol associated with the instrument.
          type: string
        time:
          description: Time taken to retrieve position data in milliseconds.
          format: int32
          type: integer
        type:
          description: "Description of instrument, used to differentiate classes,\
            \ if applicable."
          type: string
        undConid:
          description: "Contract ID of underlying instrument, if applicable."
          format: int32
          type: integer
        unrealizedPnl:
          description: Unrealized PnL for the instrument in the account.
          type: number
      type: object
    individualPositionArray:
      items:
        $ref: '#/components/schemas/individualPosition'
      type: array
    iserverHistoryResponse:
      description: Object containing the requested historical data and related metadata.
      example:
        symbol: symbol
        priceDisplayRule: 5
        travelTime: 9
        data:
        - c: 5.637376656633329
          t: 1
          v: 9.301444243932576
          h: 2.3021358869347655
          l: 7.061401241503109
          o: 5.962133916683182
        - c: 5.637376656633329
          t: 1
          v: 9.301444243932576
          h: 2.3021358869347655
          l: 7.061401241503109
          o: 5.962133916683182
        mktDataDelay: 2
        negativeCapable: true
        barLength: 6
        mdAvailability: mdAvailability
        chartPanStartTime: chartPanStartTime
        serverId: serverId
        tradingDayDuration: 1
        priceFactor: 0
        points: 3
        outsideRth: true
        high: high
        low: low
        volumeFactor: 5
        timePeriod: timePeriod
        startTime: startTime
        text: text
        messageVersion: 7
        priceDisplayValue: priceDisplayValue
        direction: 2
      properties:
        serverId:
          description: Internal use. Identifier of the request.
          type: string
        symbol:
          description: Symbol of the request instrument.
          type: string
        text:
          description: Description or company name of the instrument.
          type: string
        priceFactor:
          description: Internal use. Used to scale Client Portal chart Y-axis.
          format: int32
          type: integer
        startTime:
          description: UTC date and time of the start (chronologically earlier) of
            the complete period in format YYYYMMDD-hh:mm:ss.
          type: string
        high:
          description: Internal use. Delivers highest price value in total interval.
            Used for chart scaling. A string constructed as 'highestPrice*priceFactor/totalVolume*volumeFactor/minutesFromStartTime'.
          type: string
        low:
          description: Internal use. Delivers lowest price value in total interval.
            Used for chart scaling. A string constructed as 'lowestPrice*priceFactor/totalVolume*volumeFactor/minutesFromStartTime'.
          type: string
        timePeriod:
          description: The client-specified period value.
          type: string
        barLength:
          description: "The client-specified bar width, represented in seconds."
          format: int32
          type: integer
        mdAvailability:
          description: "A three-character string reflecting the nature of available\
            \ data. R = Realtime, D = Delayed, Z = Frozen, Y = Frozen Delayed, N =\
            \ Not Subscribed. P = Snapshot, p = Consolidated. B = Top of book."
          type: string
        outsideRth:
          description: Indicates whether data from outside regular trading hours is
            included in the response.
          type: boolean
        tradingDayDuration:
          description: Length of instrument's trading day in seconds.
          format: int32
          type: integer
        volumeFactor:
          description: Internal use. Used to scale volume histograms.
          format: int32
          type: integer
        priceDisplayRule:
          description: Internal use. Governs application of pricing display rule.
          format: int32
          type: integer
        priceDisplayValue:
          description: Internal use. Governs rendering of displayed pricing.
          type: string
        chartPanStartTime:
          description: Internal use. UTC datetime string used to center Client Portal
            charts. Format YYYYMMDD-hh:mm:ss.
          type: string
        direction:
          description: "Indicates how the period is applied in relation to the startTime.\
            \ Value will always be -1, indicating that the period extends from the\
            \ startTime forward into the future."
          format: int32
          type: integer
        negativeCapable:
          description: Indicates whether instrument is capable of negative pricing.
          type: boolean
        messageVersion:
          description: Internal use. Reflects the version of the response schema used.
          format: int32
          type: integer
        travelTime:
          description: Internal time in flight to serve the request.
          format: int32
          type: integer
        data:
          description: Array containing OHLC bars for the requested period.
          items:
            $ref: '#/components/schemas/singleHistoricalBar'
          type: array
        points:
          description: Count of the number of bars returned in the data array.
          format: int32
          type: integer
        mktDataDelay:
          description: Number of milliseconds taken to satisfy this historical data
            request.
          format: int32
          type: integer
      type: object
    iserverScannerParams:
      example:
        scan_type_list:
        - code: code
          instruments:
          - instruments
          - instruments
          display_name: display_name
        - code: code
          instruments:
          - instruments
          - instruments
          display_name: display_name
        location_tree:
        - locations:
          - locations:
            - display_name: display_name
              type: type
            - display_name: display_name
              type: type
            display_name: display_name
            type: type
          - locations:
            - display_name: display_name
              type: type
            - display_name: display_name
              type: type
            display_name: display_name
            type: type
          display_name: display_name
          type: type
        - locations:
          - locations:
            - display_name: display_name
              type: type
            - display_name: display_name
              type: type
            display_name: display_name
            type: type
          - locations:
            - display_name: display_name
              type: type
            - display_name: display_name
              type: type
            display_name: display_name
            type: type
          display_name: display_name
          type: type
        instrument_list:
        - filters:
          - filters
          - filters
          display_name: display_name
          type: type
        - filters:
          - filters
          - filters
          display_name: display_name
          type: type
        filter_list:
        - code: code
          display_name: display_name
          type: type
          group: group
          combo_values:
          - default: true
            vendor: "{}"
          - default: true
            vendor: "{}"
        - code: code
          display_name: display_name
          type: type
          group: group
          combo_values:
          - default: true
            vendor: "{}"
          - default: true
            vendor: "{}"
      properties:
        scan_type_list:
          description: Contains all values used as the scanner “type” in the request.
          items:
            $ref: '#/components/schemas/iserverScannerParams_scan_type_list_inner'
          type: array
        instrument_list:
          description: Contains all values relevant to the scanner “instrument” request
            field.
          items:
            $ref: '#/components/schemas/iserverScannerParams_instrument_list_inner'
          type: array
        filter_list:
          items:
            $ref: '#/components/schemas/iserverScannerParams_filter_list_inner'
          type: array
        location_tree:
          description: Contains all values relevant to the location field of the market
            scanner request.
          items:
            $ref: '#/components/schemas/iserverScannerParams_location_tree_inner'
          type: array
      type: object
    iserverScannerRunRequest:
      properties:
        instrument:
          description: Instrument type as the target of the market scanner request.
            Found in the “instrument_list” section of the /iserver/scanner/params
            response.
          type: string
        type:
          description: Scanner value the market scanner is sorted by. Based on the
            “scan_type_list” section of the /iserver/scanner/params response.
          type: string
        location:
          description: Location value the market scanner is searching through. Based
            on the “location_tree” section of the /iserver/scanner/params response.
          type: string
        filter:
          description: Contains any additional filters that should apply to response.
          items:
            $ref: '#/components/schemas/iserverScannerRunRequest_filter_inner'
          type: array
      type: object
    iserverScannerRunResponse:
      example:
        contracts:
        - symbol: symbol
          conidex: conidex
          contract_description_1: contract_description_1
          sec_type: sec_type
          con_id: 0
          available_chart_periods: available_chart_periods
          company_name: company_name
          column_name: column_name
          listing_exchange: listing_exchange
          server_id: server_id
        - symbol: symbol
          conidex: conidex
          contract_description_1: contract_description_1
          sec_type: sec_type
          con_id: 0
          available_chart_periods: available_chart_periods
          company_name: company_name
          column_name: column_name
          listing_exchange: listing_exchange
          server_id: server_id
        scan_data_column_name: scan_data_column_name
      properties:
        contracts:
          description: Contains contracts related to the market scanner request.
          items:
            $ref: '#/components/schemas/iserverScannerRunResponse_contracts_inner'
          type: array
        scan_data_column_name:
          description: Internal Use Only
          type: string
      type: object
    ledger:
      additionalProperties:
        $ref: '#/components/schemas/ledger_value'
      description: Contains objects reflecting all currencies in which the account's
        positions trade.
      type: object
    liveOrdersResponse:
      example:
        orders:
        - remainingQuantity: remainingQuantity
          orderType: orderType
          fgColor: fgColor
          orderId: 0
          avgPrice: avgPrice
          companyName: companyName
          origOrderType: origOrderType
          secType: secType
          lastExecutionTime_r: lastExecutionTime_r
          filledQuantity: filledQuantity
          description1: description1
          isEventTrading: "0"
          bgColor: bgColor
          price: price
          supportsTaxOpt: "0"
          lastExecutionTime: lastExecutionTime
          timeInForce: timeInForce
          orderDesc: orderDesc
          conidex: conidex
          ticker: ticker
          side: side
          totalSize: totalSize
          order_ccp_status: order_ccp_status
          cashCcy: cashCcy
          exchange: exchange
          conid: conid
          totalCashSize: totalCashSize
          listingExchange: listingExchange
          acct: acct
          account: account
          sizeAndFills: sizeAndFills
          status: Inactive
        - remainingQuantity: remainingQuantity
          orderType: orderType
          fgColor: fgColor
          orderId: 0
          avgPrice: avgPrice
          companyName: companyName
          origOrderType: origOrderType
          secType: secType
          lastExecutionTime_r: lastExecutionTime_r
          filledQuantity: filledQuantity
          description1: description1
          isEventTrading: "0"
          bgColor: bgColor
          price: price
          supportsTaxOpt: "0"
          lastExecutionTime: lastExecutionTime
          timeInForce: timeInForce
          orderDesc: orderDesc
          conidex: conidex
          ticker: ticker
          side: side
          totalSize: totalSize
          order_ccp_status: order_ccp_status
          cashCcy: cashCcy
          exchange: exchange
          conid: conid
          totalCashSize: totalCashSize
          listingExchange: listingExchange
          acct: acct
          account: account
          sizeAndFills: sizeAndFills
          status: Inactive
        snapshot: true
      properties:
        orders:
          description: "Array of orders that are currently working, or were filled/cancelled\
            \ in the current brokerage session."
          items:
            $ref: '#/components/schemas/liveOrdersResponse_orders_inner'
          type: array
        snapshot:
          description: Whether the response is a snapshot.
          type: boolean
      type: object
    mdFields:
      description: "Many FYI endpoints reference a “typecode” value. The table below\
        \ lists the available codes and what they correspond to.\n  * `31` - Last\
        \ Price. The last price at which the contract traded. May contain one of the\
        \ following prefixes: C - Previous day's closing price. H - Trading has halted.\n\
        \  * `55` - Symbol. \n  * `58` - Text. \n  * `70` - High. Current day high\
        \ price\n  * `71` - Low. Current day low price\n  * `73` - Market Value. The\
        \ current market value of your position in the security. Market Value is calculated\
        \ with real time market data (even when not subscribed to market data).\n\
        \  * `74` - Avg Price. The average price of the position.\n  * `75` - Unrealized\
        \ PnL. Unrealized profit or loss. Unrealized PnL is calculated with real time\
        \ market data (even when not subscribed to market data).\n  * `76` - Formatted\
        \ position. \n  * `77` - Formatted Unrealized PnL. \n  * `78` - Daily PnL.\
        \ Your profit or loss of the day since prior close. Daily PnL is calculated\
        \ with real time market data (even when not subscribed to market data).\n\
        \  * `79` - Realized PnL. Realized profit or loss. Realized PnL is calculated\
        \ with real time market data (even when not subscribed to market data).\n\
        \  * `80` - Unrealized PnL %. Unrealized profit or loss expressed in percentage.\n\
        \  * `82` - Change. The difference between the last price and the close on\
        \ the previous trading day\n  * `83` - Change %. The difference between the\
        \ last price and the close on the previous trading day in percentage.\n  *\
        \ `84` - Bid Price. The highest-priced bid on the contract.\n  * `85` - Ask\
        \ Size. The number of contracts or shares offered at the ask price. For US\
        \ stocks\n  * `86` - Ask Price. The lowest-priced offer on the contract.\n\
        \  * `87` - Volume. Volume for the day\n  * `88` - Bid Size. The number of\
        \ contracts or shares bid for at the bid price. For US stocks\n  * `6004`\
        \ - Exchange. \n  * `6008` - Conid. Contract identifier from IBKR's database.\n\
        \  * `6070` - SecType. The asset class of the instrument.\n  * `6072` - Months.\
        \ \n  * `6073` - Regular Expiry. \n  * `6119` - Marker for market data delivery\
        \ method (similar to request id). \n  * `6457` - Underlying Conid. Use /trsrv/secdef\
        \ to get more information about the security. \n  * `6508` - Service Params..\
        \ \n  * `6509` - Market Data Availability. The field may contain three chars.\
        \ First char defines: R = RealTime, D = Delayed, Z = Frozen, Y = Frozen Delayed,\
        \ N = Not Subscribed, i - incomplete, v - VDR Exempt (Vendor Display Rule\
        \ 603c). Second char defines: P = Snapshot, p = Consolidated. Third char defines:\
        \ B = Book. RealTime Data is relayed back in real time without delay, market\
        \ data subscription(s) are required. Delayed - Data is relayed back 15-20\
        \ min delayed. Frozen - Last recorded data at market close.  relayed back\
        \ in real time. Frozen Delayed - Last recorded data at market close, relayed\
        \ back delayed. Not Subscribed - User does not have the required market data\
        \ subscription(s) to relay back either real time or delayed data. Snapshot\
        \ - Snapshot request is available for contract. Consolidated - Market data\
        \ is aggregated across multiple exchanges or venues. Book - Top of the book\
        \ data is available for contract.\n  * `7051` - Company name. \n  * `7057`\
        \ - Ask Exch. Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE,\
        \ I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX,\
        \ H=GEMINI, E=EDGX, J=MERCURY\n  * `7058` - Last Exch. Displays the exchange(s)\
        \ offering the SMART price. A=AMEX, C=CBOE, I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM,\
        \ Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX, H=GEMINI, E=EDGX, J=MERCURY\n  * `7059`\
        \ - Last Size. The number of unites traded at the last price\n  * `7068` -\
        \ Bid Exch. Displays the exchange(s) offering the SMART price. A=AMEX, C=CBOE,\
        \ I=ISE, X=PHLX, N=PSE, B=BOX, Q=NASDAQOM, Z=BATS, W=CBOE2, T=NASDAQBX, M=MIAX,\
        \ H=GEMINI, E=EDGX, J=MERCURY\n  * `7084` - Implied Vol./Hist. Vol %. The\
        \ ratio of the implied volatility over the historical volatility, expressed\
        \ as a percentage.\n  * `7085` - Put/Call Interest. Put option open interest/call\
        \ option open interest for the trading day.\n  * `7086` - Put/Call Volume.\
        \ Put option volume/call option volume for the trading day.\n  * `7087` -\
        \ Hist. Vol. %. 30-day real-time historical volatility.\n  * `7088` - Hist.\
        \ Vol. Close %. Shows the historical volatility based on previous close price.\n\
        \  * `7089` - Opt. Volume. Option Volume\n  * `7094` - Conid + Exchange.\n\
        \  * `7184` - canBeTraded. If contract is a trade-able instrument. Returns\
        \ 1(true) or 0(false).\n  * `7219` - Contract Description.\n  * `7220` - Contract\
        \ Description.\n  * `7221` - Listing Exchange.\n  * `7280` - Industry. Displays\
        \ the type of industry under which the underlying company can be categorized.\n\
        \  * `7281` - Category. Displays a more detailed level of description within\
        \ the industry under which the underlying company can be categorized.\n  *\
        \ `7282` - Average Volume. The average daily trading volume over 90 days.\n\
        \  * `7283` - Option Implied Vol. %. A prediction of how volatile an underlying\
        \ will be in the future.At the market volatility estimated for a maturity\
        \ thirty calendar days forward of the current trading day, and based on option\
        \ prices from two consecutive expiration months. To query the Implied Vol.\
        \ % of a specific strike refer to field 7633.\n  * `7284` - Historical volatility\
        \ %. Deprecated\n  * `7285` - Put/Call Ratio.\n  * `7286` - Dividend Amount.\
        \ Displays the amount of the next dividend.\n  * `7287` - Dividend Yield %.\
        \ This value is the toal of the expected dividend payments over the next twelve\
        \ months per share divided by the Current Price and is expressed as a percentage.\
        \ For derivatives\n  * `7288` - Ex-date of the dividend.\n  * `7289` - Market\
        \ Cap.\n  * `7290` - P/E.\n  * `7291` - EPS.\n  * `7292` - Cost Basis. Your\
        \ current position in this security multiplied by the average price and multiplier.\
        \        \n  * `7293` - 52 Week High. The highest price for the past 52 weeks.\n\
        \  * `7294` - 52 Week Low. The lowest price for the past 52 weeks.\n  * `7295`\
        \ - Open. Today's opening price.\n  * `7296` - Close. Today's closing price.\n\
        \  * `7308` - Delta. The ratio of the change in the price of the option to\
        \ the corresponding change in the price of the underlying.\n  * `7309` - Gamma.\
        \ The rate of change for the delta with respect to the underlying asset's\
        \ price.\n  * `7310` - Theta. A measure of the rate of decline the value of\
        \ an option due to the passage of time.\n  * `7311` - Vega. The amount that\
        \ the price of an option changes compared to a 1% change in the volatility.\n\
        \  * `7607` - Opt. Volume Change %. Today's option volume as a percentage\
        \ of the average option volume.\n  * `7633` - Implied Vol. %. The implied\
        \ volatility for the specific strike of the option in percentage. To query\
        \ the Option Implied Vol. % from the underlying refer to field 7283.\n  *\
        \ `7635` - Mark. The mark price is\n  * `7636` - Shortable Shares. Number\
        \ of shares available for shorting.\n  * `7637` - Fee Rate. Interest rate\
        \ charged on borrowed shares.\n  * `7638` - Option Open Interest.\n  * `7639`\
        \ - % of Mark Value. Displays the market value of the contract as a percentage\
        \ of the total market value of the account. Mark Value is calculated with\
        \ real time market data (even when not subscribed to market data).\n  * `7644`\
        \ - Shortable. Describes the level of difficulty with which the security can\
        \ be sold short.\n  * `7655` - Morningstar Rating. Displays Morningstar Rating\
        \ provided value. Requires Morningstar subscription.        \n  * `7671` -\
        \ Dividends. This value is the total of the expected dividend payments over\
        \ the next twelve months per share.\n  * `7672` - Dividends TTM. This value\
        \ is the total of the expected dividend payments over the last twelve months\
        \ per share.\n  * `7674` - EMA(200). Exponential moving average (N=200).\n\
        \  * `7675` - EMA(100). Exponential moving average (N=100).\n  * `7676` -\
        \ EMA(50). Exponential moving average (N=50).\n  * `7677` - EMA(20). Exponential\
        \ moving average (N=20).\n  * `7678` - Price/EMA(200). Price to Exponential\
        \ moving average (N=200) ratio -1\n  * `7679` - Price/EMA(100). Price to Exponential\
        \ moving average (N=100) ratio -1\n  * `7724` - Price/EMA(50). Price to Exponential\
        \ moving average (N=50) ratio -1\n  * `7681` - Price/EMA(20). Price to Exponential\
        \ moving average (N=20) ratio -1\n  * `7682` - Change Since Open. The difference\
        \ between the last price and the open price.\n  * `7683` - Upcoming Event.\
        \ Shows the next major company event. Requires Wall Street Horizon subscription.\n\
        \  * `7684` - Upcoming Event Date. The date of the next major company event.\
        \ Requires Wall Street Horizon subscription. \n  * `7685` - Upcoming Analyst\
        \ Meeting. The date and time of the next scheduled analyst meeting. Requires\
        \ Wall Street Horizon subscription.\n  * `7686` - Upcoming Earnings. The date\
        \ and time of the next scheduled earnings/earnings call event. Requires Wall\
        \ Street Horizon subscription.\n  * `7687` - Upcoming Misc Event. The date\
        \ and time of the next shareholder meeting\n  * `7688` - Recent Analyst Meeting.\
        \ The date and time of the most recent analyst meeting. Requires Wall Street\
        \ Horizon subscription.\n  * `7689` - Recent Earnings. The date and time of\
        \ the most recent earnings/earning call event. Requires Wall Street Horizon\
        \ subscription.\n  * `7690` - Recent Misc Event. The date and time of the\
        \ most recent shareholder meeting\n  * `7694` - Probability of Max Return.\
        \ Customer implied probability of maximum potential gain.\n  * `7695` - Break\
        \ Even. Break even points\n  * `7696` - SPX Delta. Beta Weighted Delta is\
        \ calculated using the formula; Delta x dollar adjusted beta\n  * `7697` -\
        \ Futures Open Interest. Total number of outstanding futures contracts\n \
        \ * `7698` - Last Yield. Implied yield of the bond if it is purchased at the\
        \ current last price. Last yield is calculated using the Last price on all\
        \ possible call dates. It is assumed that prepayment occurs if the bond has\
        \ call or put provisions and the issuer can offer a lower coupon rate based\
        \ on current market rates. The yield to worst will be the lowest of the yield\
        \ to maturity or yield to call (if the bond has prepayment provisions). Yield\
        \ to worse may be the same as yield to maturity but never higher.\n  * `7699`\
        \ - Bid Yield. Implied yield of the bond if it is purchased at the current\
        \ bid price. Bid yield is calculated using the Ask on all possible call dates.\
        \ It is assumed that prepayment occurs if the bond has call or put provisions\
        \ and the issuer can offer a lower coupon rate based on current market rates.\
        \ The yield to worst will be the lowest of the yield to maturity or yield\
        \ to call (if the bond has prepayment provisions). Yield to worse may be the\
        \ same as yield to maturity but never higher.\n  * `7700` - Probability of\
        \ Max Return. Customer implied probability of maximum potential gain.\n  *\
        \ `7702` - Probability of Max Loss. Customer implied probability of maximum\
        \ potential loss.\n  * `7703` - Profit Probability. Customer implied probability\
        \ of any gain.\n  * `7704` - Organization Type.\n  * `7705` - Debt Class.\n\
        \  * `7706` - Ratings. Ratings issued for bond contract.\n  * `7707` - Bond\
        \ State Code.\n  * `7708` - Bond Type.\n  * `7714` - Last Trading Date.\n\
        \  * `7715` - Issue Date.\n  * `7718` - Beta. Beta is against standard index.\n\
        \  * `7720` - Ask Yield. Implied yield of the bond if it is purchased at the\
        \ current offer. Ask yield is calculated using the Bid on all possible call\
        \ dates. It is assumed that prepayment occurs if the bond has call or put\
        \ provisions and the issuer can offer a lower coupon rate based on current\
        \ market rates. The yield to worst will be the lowest of the yield to maturity\
        \ or yield to call (if the bond has prepayment provisions). Yield to worse\
        \ may be the same as yield to maturity but never higher.\n  * `7741` - Prior\
        \ Close. Yesterday's closing price\n  * `7762` - Volume Long. High precision\
        \ volume for the day. For formatted volume refer to field 87.\n  * `7768`\
        \ - hasTradingPermissions. if user has trading permissions for specified contract.\
        \ Returns 1(true) or 0(false).\n  * `7920` - Daily PnL Raw. Your profit or\
        \ loss of the day since prior close. Daily PnL is calculated with real-time\
        \ market data (even when not subscribed to market data).\n  * `7921` - Cost\
        \ Basis Raw. Your current position in this security multiplied by the average\
        \ price and and multiplier.\n"
      enum:
      - "31"
      - "55"
      - "58"
      - "70"
      - "71"
      - "73"
      - "74"
      - "75"
      - "76"
      - "77"
      - "78"
      - "79"
      - "80"
      - "82"
      - "83"
      - "84"
      - "85"
      - "86"
      - "87"
      - "88"
      - "6004"
      - "6008"
      - "6070"
      - "6072"
      - "6073"
      - "6119"
      - "6457"
      - "6508"
      - "6509"
      - "7051"
      - "7057"
      - "7058"
      - "7059"
      - "7068"
      - "7084"
      - "7085"
      - "7086"
      - "7087"
      - "7088"
      - "7089"
      - "7094"
      - "7184"
      - "7219"
      - "7220"
      - "7221"
      - "7280"
      - "7281"
      - "7282"
      - "7283"
      - "7284"
      - "7285"
      - "7286"
      - "7287"
      - "7288"
      - "7289"
      - "7290"
      - "7291"
      - "7292"
      - "7293"
      - "7294"
      - "7295"
      - "7296"
      - "7308"
      - "7309"
      - "7310"
      - "7311"
      - "7607"
      - "7633"
      - "7635"
      - "7636"
      - "7637"
      - "7638"
      - "7639"
      - "7644"
      - "7655"
      - "7671"
      - "7672"
      - "7674"
      - "7675"
      - "7676"
      - "7677"
      - "7678"
      - "7679"
      - "7724"
      - "7681"
      - "7682"
      - "7683"
      - "7684"
      - "7685"
      - "7686"
      - "7687"
      - "7688"
      - "7689"
      - "7690"
      - "7694"
      - "7695"
      - "7696"
      - "7697"
      - "7698"
      - "7699"
      - "7700"
      - "7702"
      - "7703"
      - "7704"
      - "7705"
      - "7706"
      - "7707"
      - "7708"
      - "7714"
      - "7715"
      - "7718"
      - "7720"
      - "7741"
      - "7762"
      - "7768"
      - "7920"
      - "7921"
      type: string
    notificationReadAcknowledge:
      example:
        P:
          R: 1
          ID: ID
        T: 6
        V: 0
      properties:
        V:
          description: Returns 1 to state message was acknowledged.
          format: int32
          type: integer
        T:
          description: Returns the time in ms to complete the edit.
          format: int32
          type: integer
        P:
          $ref: '#/components/schemas/notificationReadAcknowledge_P'
      type: object
    notifications:
      items:
        $ref: '#/components/schemas/notifications_inner'
      type: array
    orderCancelSuccess:
      description: Acknowledges IB's acceptance of the request to cancel the order.
        Does not report whether the cancellation can or will ultimately be enacted.
      example:
        msg: Request was submitted
        conid: conid
        order_id: order_id
        account: account
      properties:
        msg:
          description: Indicates success with value 'Request was submitted'
          enum:
          - Request was submitted
          type: string
        order_id:
          description: IB order ID of the order ticket requested for cancellation.
          type: string
        conid:
          description: IB contract ID of the order ticket's instrument.
          type: string
        account:
          description: IB account to which the order was originally set to clear.
          type: string
      type: object
    orderPreview:
      description: "Projected costs and changes to margin and equity values in the\
        \ account, if the order ticket were executed in full."
      example:
        warn: warn
        amount:
          amount: amount
          total: total
          commission: commission
        initial:
          current: current
          change: change
          after: after
        position:
          current: current
          change: change
          after: after
        error: error
        equity:
          current: current
          change: change
          after: after
        maintenance:
          current: current
          change: change
          after: after
      properties:
        amount:
          $ref: '#/components/schemas/orderPreview_amount'
        equity:
          $ref: '#/components/schemas/orderPreview_equity'
        initial:
          $ref: '#/components/schemas/orderPreview_initial'
        maintenance:
          $ref: '#/components/schemas/orderPreview_maintenance'
        position:
          $ref: '#/components/schemas/orderPreview_position'
        warn:
          description: "Human-readable text of warning message, if applicable. Otherwise\
            \ null."
          type: string
        error:
          description: "Human-readable text of an error message, if applicable. Otherwise\
            \ null."
          type: string
      type: object
    orderReplyMessage:
      description: An array containing objects that each deliver the order reply messages
        emitted against one order ticket in the submission request's array. Indicies
        of the order reply message objects in this array correspond to the indicies
        of the order tickets in the submission request's array.
      items:
        $ref: '#/components/schemas/orderReplyMessage_inner'
      type: array
    orderStatus:
      description: Object containing information about the status of an order ticket.
      example:
        symbol: symbol
        fgColor: fgColor
        exit_strategy_display_price: exit_strategy_display_price
        order_description_with_contract: order_description_with_contract
        option_acct: option_acct
        allowed_duplicate_opposite: true
        order_description: order_description
        listing_exchange: listing_exchange
        order_time: order_time
        tif: DAY
        order_status: Inactive
        bgColor: bgColor
        editable_fields: editable_fields
        sub_type: sub_type
        available_chart_periods: available_chart_periods
        cannot_cancel_order: true
        currency: currency
        order_type: order_type
        conidex: conidex
        side: BUY
        contract_description_1: contract_description_1
        order_not_editable: true
        deactivate_order: true
        size_and_fills: size_and_fills
        total_size: total_size
        average_price: average_price
        server_id: server_id
        alert_active: 6
        child_order_type: "0"
        order_status_description: order_status_description
        order_ccp_status: order_ccp_status
        size: size
        sec_type: STK
        company_name: company_name
        order_clearing_account: order_clearing_account
        conid: conid
        exit_strategy_tool_availability: exit_strategy_tool_availability
        request_id: request_id
        order_id: 0
        exit_strategy_chart_description: exit_strategy_chart_description
        account: account
        cum_fill: cum_fill
      properties:
        sub_type:
          description: Internal use only.
          type: string
        request_id:
          description: Internal use only. IB-assigned identifier for the status request.
          type: string
        server_id:
          description: IB-assigned meta-identifier used to associate rejected and
            resubmitted orders following Server Prompts.
          type: string
        order_id:
          description: "The IB-assigned order identifier of the order, as provided\
            \ in the request path."
          format: int32
          type: integer
        conidex:
          description: Contract ID and routing destination in format 123456@EXCHANGE.
          type: string
        conid:
          description: Contract ID of the order's instrument.
          type: string
        symbol:
          description: Symbol of the order ticket's instrument.
          type: string
        side:
          description: Side of the order ticket.
          enum:
          - BUY
          - SELL
          type: string
        contract_description_1:
          description: Human-readable description of the order's instrument.
          type: string
        listing_exchange:
          description: Primary listing exchange of the order ticket's instrument.
          type: string
        option_acct:
          description: Internal use only.
          type: string
        company_name:
          description: Name of the company or asset associated with the instrument.
          type: string
        size:
          description: "Remaining unfilled size of the order ticket. Will reflect\
            \ 0.0 if order is filled in full, cancelled, or otherwise resolved and\
            \ no longer working."
          type: string
        total_size:
          description: The total size of the order ticket.
          type: string
        currency:
          description: The currency in which the instrument trades and executions
            are conducted.
          type: string
        account:
          description: The account receiving executions against this order ticket.
          type: string
        order_type:
          description: The order's  IB order type.
          type: string
        cum_fill:
          description: Cumulative filled quantity of the instrument against the order
            ticket.
          type: string
        order_status:
          description: Status of the order ticket.
          enum:
          - Inactive
          - PendingSubmit
          - PreSubmitted
          - Submitted
          - Filled
          - PendingCancel
          - Cancelled
          - WarnState
          type: string
        order_ccp_status:
          description: IB internal order status.
          type: string
        order_status_description:
          description: Human-readable rendering of the order's status meant for presentation
            in UI.
          type: string
        tif:
          description: Time in force of the order ticket.
          enum:
          - DAY
          - IOC
          - GTC
          - OPG
          - PAX
          type: string
        fgColor:
          description: Internal use. IB's UI foreground color in hex.
          type: string
        bgColor:
          description: Internal use. IB's UI background color in hex.
          type: string
        order_not_editable:
          description: Indicates whether the order ticket can be modified.
          type: boolean
        editable_fields:
          description: Indicates which fields of the order ticket can be modified
            currently.
          type: string
        cannot_cancel_order:
          description: Indicates whether the order ticket can be cancelled.
          type: boolean
        deactivate_order:
          description: Indicates whether the order ticket can be deactivated.
          type: boolean
        sec_type:
          description: IB asset class identifier.
          enum:
          - STK
          - OPT
          - FUT
          - FOP
          - CASH
          - CRYPTO
          - BOND
          - WAR
          - FUND
          type: string
        available_chart_periods:
          description: Internal use. Indicates chart periods available for the instrument.
          type: string
        order_description:
          description: "Human-readable description of the status or current result\
            \ of the order ticket, meant for UI presentation."
          type: string
        order_description_with_contract:
          description: "Human-readable description of the status or current result\
            \ of the order ticket, meant for UI presentation. Includes instrument\
            \ name."
          type: string
        alert_active:
          description: Indicates that an alert is active for the order ticket.
          format: int32
          type: integer
        child_order_type:
          description: "Indicates if the order ticket is hedged, and if so, in what\
            \ way. 0 = No hedge, A = Attached child hedge order, B = Beta/portfolio\
            \ hedge"
          enum:
          - "0"
          - A
          - B
          type: string
        order_clearing_account:
          description: The IB account to which the order ticket clears.
          type: string
        size_and_fills:
          description: A string reflecting the cumulative fills and total size of
            the order.
          type: string
        exit_strategy_display_price:
          description: Internal use. The UI-displayed price associated with a Client
            Portal exist strategy.
          type: string
        exit_strategy_chart_description:
          description: "Internal use. A string describing an active Client Portal\
            \ exit strategy, or the result of its execution."
          type: string
        average_price:
          description: "Average price of fills against the order, if any."
          type: string
        exit_strategy_tool_availability:
          description: Internal use. Indicates the availability of Client Portal exit
            strategy tool for the order.
          type: string
        allowed_duplicate_opposite:
          description: Indicates whether an identical order on the opposite side can
            be placed.
          type: boolean
        order_time:
          description: Time of the order's submission in format YYMMDDhhmmss.
          type: string
      type: object
    orderSubmitError:
      description: Indicates that the order reply message or submission was not accepted.
      properties:
        error:
          description: Message indicating that order submission was not successful.
          type: string
      type: object
    orderSubmitSuccess:
      description: A successful submission of one or more order tickets.
      items:
        $ref: '#/components/schemas/orderSubmitSuccess_inner'
      type: array
    ordersSubmissionRequest:
      description: "Array of order tickets objects. Only one order ticket object may\
        \ be submitted per request, unless constructing a bracket."
      items:
        $ref: '#/components/schemas/singleOrderSubmissionRequest'
      type: array
    performanceResponse:
      example:
        currencyType: currencyType
        rc: 0
        nav:
          data:
          - idType: idType
            navs:
            - navs
            - navs
            start: start
            end: end
            id: id
            startNAV:
              date: date
              val: 6
            baseCurrency: baseCurrency
          - idType: idType
            navs:
            - navs
            - navs
            start: start
            end: end
            id: id
            startNAV:
              date: date
              val: 6
            baseCurrency: baseCurrency
          freq: freq
          dates:
          - dates
          - dates
        nd: 1
        cps:
          data:
          - idType: idType
            start: start
            end: end
            returns:
            - returns
            - returns
            id: id
            baseCurrency: baseCurrency
          - idType: idType
            start: start
            end: end
            returns:
            - returns
            - returns
            id: id
            baseCurrency: baseCurrency
          freq: freq
          dates:
          - dates
          - dates
        tpps:
          data:
          - idType: idType
            start: start
            end: end
            returns:
            - returns
            - returns
            id: id
            baseCurrency: baseCurrency
          - idType: idType
            start: start
            end: end
            returns:
            - returns
            - returns
            id: id
            baseCurrency: baseCurrency
          freq: freq
          dates:
          - dates
          - dates
        id: id
        included:
        - included
        - included
        pm: pm
      properties:
        currencyType:
          description: "Confirms if the currency type. If trading exclusively in your\
            \ base currency, “base” will be returned."
          type: string
        rc:
          description: Returns the data identifier (Internal Use Only).
          format: int32
          type: integer
        nav:
          $ref: '#/components/schemas/performanceResponse_nav'
        nd:
          description: Returns the total data points.
          format: int32
          type: integer
        cps:
          $ref: '#/components/schemas/performanceResponse_cps'
        tpps:
          $ref: '#/components/schemas/performanceResponse_tpps'
        id:
          description: "Returns the request identifier, getPerformanceData."
          type: string
        included:
          description: Returns an array containing accounts reviewed.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        pm:
          description: Portfolio Measure. Used to indicate TWR or MWR values returned.
          type: string
      type: object
    pnlPartitionedResponse:
      example:
        upnl:
          U1234567.Core:
            upl: 5
            rowType: 0
            dpl: 6
            el: 5
            mv: 2
            nl: 1
      properties:
        upnl:
          $ref: '#/components/schemas/pnlPartitionedResponse_upnl'
      type: object
    portfolioAllocations:
      example:
        assetClass:
          short:
            key: 6.027456183070403
          long:
            key: 0.8008281904610115
        sector:
          short:
            key: 2.3021358869347655
          long:
            key: 5.637376656633329
        group:
          short:
            key: 5.962133916683182
          long:
            key: 1.4658129805029452
      properties:
        assetClass:
          $ref: '#/components/schemas/portfolioAllocations_assetClass'
        group:
          $ref: '#/components/schemas/portfolioAllocations_group'
        sector:
          $ref: '#/components/schemas/portfolioAllocations_sector'
      type: object
    portfolioSummary:
      example:
        lookaheadavailablefunds-c:
          severity: 8
          amount: 7.541803065493349
          isNull: true
          currency: 7.437703257022269
          value: value
          timestamp: 7
        segmenttitle-s:
          severity: 0
          amount: 4.3376880751882485
          isNull: true
          currency: 2.6951501062053085
          value: value
          timestamp: 0
        physicalcertificatevalue-s:
          severity: 4
          amount: 3.4925370028432345
          isNull: true
          currency: 3.4360986237728
          value: value
          timestamp: 8
        buyingpower:
          severity: 9
          amount: 3.7814124730767915
          isNull: true
          currency: 3.111202833403195
          value: value
          timestamp: 5
        availabletotrade:
          severity: 0
          amount: 3.2588565619047607
          isNull: true
          currency: 4.078845849666752
          value: value
          timestamp: 6
        fullmaintmarginreq:
          severity: 8
          amount: 2.008994665592807
          isNull: true
          currency: 2.924533207692744
          value: value
          timestamp: 2
        guarantee-c:
          severity: 1
          amount: 1.4793631642421967
          isNull: true
          currency: 2.719219329469812
          value: value
          timestamp: 7
        regtmargin-s:
          severity: 4
          amount: 0.17140212201104066
          isNull: true
          currency: 2.354928013202764
          value: value
          timestamp: 2
        physicalcertificatevalue-c:
          severity: 5
          amount: 2.729215612801924
          isNull: true
          currency: 9.774932085941137
          value: value
          timestamp: 8
        previousdayequitywithloanvalue:
          severity: 5
          amount: 6.232321224432258
          isNull: true
          currency: 9.511386032684477
          value: value
          timestamp: 7
        tradingtype-s:
          severity: 5
          amount: 2.3351791640726405
          isNull: true
          currency: 6.670927598965964
          value: value
          timestamp: 7
        billable-c:
          severity: 8
          amount: 3.502657762086401
          isNull: true
          currency: 9.183123594773994
          value: value
          timestamp: 0
        lookaheadexcessliquidity-c:
          severity: 0
          amount: 7.701777079007398
          isNull: true
          currency: 2.1871588311421153
          value: value
          timestamp: 4
        daytradesremainingt+1:
          severity: 9
          amount: 4.8789878742268815
          isNull: true
          currency: 6.966044574347761
          value: value
          timestamp: 1
        guarantee-s:
          severity: 4
          amount: 7.135782839148426
          isNull: true
          currency: 1.0348002257634148
          value: value
          timestamp: 4
        regtmargin:
          severity: 8
          amount: 3.982133794311513
          isNull: true
          currency: 6.378183218175566
          value: value
          timestamp: 2
        lookaheadmaintmarginreq-c:
          severity: 2
          amount: 4.075306827525243
          isNull: true
          currency: 2.674423984487264
          value: value
          timestamp: 6
        postexpirationmargin:
          severity: 5
          amount: 8.776709848030322
          isNull: true
          currency: 9.576768325858186
          value: value
          timestamp: 2
        accruedcash-c:
          severity: 4
          amount: 7.457744773683766
          isNull: true
          currency: 1.1730742509559433
          value: value
          timestamp: 5
        totalcashvalue-c:
          severity: 5
          amount: 6.774773446112395
          isNull: true
          currency: 1.4846432231348183
          value: value
          timestamp: 5
        segmenttitle-c:
          severity: 8
          amount: 5.7830383063264374
          isNull: true
          currency: 6.895551869522899
          value: value
          timestamp: 9
        indianstockhaircut-s:
          severity: 9
          amount: 7.014147440046284
          isNull: true
          currency: 0.8972273556195443
          value: value
          timestamp: 1
        nlvandmargininreview:
          severity: 3
          amount: 7.062107048540267
          isNull: true
          currency: 8.474710856151638
          value: value
          timestamp: 6
        lookaheadmaintmarginreq-s:
          severity: 9
          amount: 1.4985931822280574
          isNull: true
          currency: 7.338782761819433
          value: value
          timestamp: 0
        accruedcash-s:
          severity: 6
          amount: 9.965781217890562
          isNull: true
          currency: 9.369310271410669
          value: value
          timestamp: 8
        daytradesremainingt+4:
          severity: 9
          amount: 1.0639121808530916
          isNull: true
          currency: 3.2841216543560217
          value: value
          timestamp: 7
        accountcode:
          severity: 1
          amount: 0.8008281904610115
          isNull: true
          currency: 6.027456183070403
          value: value
          timestamp: 5
        daytradesremainingt+2:
          severity: 5
          amount: 1.2555055362323109
          isNull: true
          currency: 3.812761638325517
          value: value
          timestamp: 1
        availabletotrade-c:
          severity: 4
          amount: 4.258773108174356
          isNull: true
          currency: 1.041444916118296
          value: value
          timestamp: 7
        daytradesremainingt+3:
          severity: 5
          amount: 4.372688051310086
          isNull: true
          currency: 5.7911894223693885
          value: value
          timestamp: 3
        lookaheadinitmarginreq:
          severity: 9
          amount: 8.638367073739522
          isNull: true
          currency: 5.948961008630453
          value: value
          timestamp: 9
        sma:
          severity: 2
          amount: 8.42304692221817
          isNull: true
          currency: 1.9004860169272697
          value: value
          timestamp: 5
        accounttype:
          severity: 4
          amount: 3.616076749251911
          isNull: true
          currency: 2.027123023002322
          value: value
          timestamp: 7
        guarantee:
          severity: 6
          amount: 8.036294790673514
          isNull: true
          currency: 8.310924482277276
          value: value
          timestamp: 7
        postexpirationexcess-s:
          severity: 2
          amount: 2.4062866311545816
          isNull: true
          currency: 5.799021278474435
          value: value
          timestamp: 1
        regtequity:
          severity: 8
          amount: 7.466737793199883
          isNull: true
          currency: 5.41284683118604
          value: value
          timestamp: 9
        availabletotrade-s:
          severity: 9
          amount: 9.132027271330688
          isNull: true
          currency: 0.8774076871421566
          value: value
          timestamp: 0
        postexpirationmargin-s:
          severity: 7
          amount: 9.616627406338315
          isNull: true
          currency: 9.660013839736129
          value: value
          timestamp: 0
        cushion:
          severity: 4
          amount: 0.35262192099236644
          isNull: true
          currency: 7.203794749804894
          value: value
          timestamp: 2
        totalcashvalue-s:
          severity: 5
          amount: 6.405285049610643
          isNull: true
          currency: 7.511806028923345
          value: value
          timestamp: 8
        daytradingstatus-s:
          severity: 9
          amount: 7.726998920545485
          isNull: true
          currency: 7.92839742024475
          value: value
          timestamp: 1
        lookaheadmaintmarginreq:
          severity: 5
          amount: 3.8463127686084055
          isNull: true
          currency: 0.6052866655822231
          value: value
          timestamp: 4
        physicalcertificatevalue:
          severity: 1
          amount: 5.22975523929469
          isNull: true
          currency: 8.67132933794674
          value: value
          timestamp: 6
        initmarginreq-s:
          severity: 3
          amount: 0.6895265584691002
          isNull: true
          currency: 9.290244967928562
          value: value
          timestamp: 5
        postexpirationmargin-c:
          severity: 2
          amount: 6.434791978928281
          isNull: true
          currency: 3.93938484566677
          value: value
          timestamp: 8
        excessliquidity:
          severity: 4
          amount: 7.3842318535314
          isNull: true
          currency: 6.749525837406151
          value: value
          timestamp: 0
        accrueddividend-s:
          severity: 3
          amount: 5.944895607614016
          isNull: true
          currency: 6.704019297950036
          value: value
          timestamp: 3
        leverage-s:
          severity: 9
          amount: 8.331741856019029
          isNull: true
          currency: 7.6528347060559
          value: value
          timestamp: 8
        lookaheadavailablefunds-s:
          severity: 5
          amount: 1.6056289151258096
          isNull: true
          currency: 6.720288821326667
          value: value
          timestamp: 8
        equitywithloanvalue:
          severity: 8
          amount: 9.146339979307802
          isNull: true
          currency: 4.010300976654761
          value: value
          timestamp: 6
        accrueddividend-c:
          severity: 6
          amount: 1.284659006116532
          isNull: true
          currency: 2.8841621266687802
          value: value
          timestamp: 6
        postexpirationexcess-c:
          severity: 2
          amount: 8.128958126729998
          isNull: true
          currency: 8.897844438448299
          value: value
          timestamp: 5
        availablefunds-c:
          severity: 8
          amount: 0.10263654006109402
          isNull: true
          currency: 4.652396432933246
          value: value
          timestamp: 7
        fullavailablefunds-c:
          severity: 3
          amount: 4.1661834558007
          isNull: true
          currency: 2.026856458177285
          value: value
          timestamp: 5
        excessliquidity-c:
          severity: 9
          amount: 0.4867146239815201
          isNull: true
          currency: 9.456612101333725
          value: value
          timestamp: 7
        maintmarginreq:
          severity: 9
          amount: 9.551762125042277
          isNull: true
          currency: 5.3152834658745505
          value: value
          timestamp: 4
        accountready:
          severity: 7
          amount: 5.637376656633329
          isNull: true
          currency: 2.3021358869347655
          value: value
          timestamp: 9
        equitywithloanvalue-s:
          severity: 5
          amount: 0.8411762798681321
          isNull: true
          currency: 2.9679475177256287
          value: value
          timestamp: 0
        fullexcessliquidity-c:
          severity: 4
          amount: 0.4008378390304357
          isNull: true
          currency: 2.5524281586707875
          value: value
          timestamp: 3
        lookaheadavailablefunds:
          severity: 4
          amount: 0.29551818216563164
          isNull: true
          currency: 0.7370530802760489
          value: value
          timestamp: 9
        fullavailablefunds-s:
          severity: 5
          amount: 3.8156682252305574
          isNull: true
          currency: 1.9626702727164813
          value: value
          timestamp: 3
        initmarginreq-c:
          severity: 7
          amount: 6.460213024504889
          isNull: true
          currency: 6.8668894011844035
          value: value
          timestamp: 6
        totalcashvalue:
          severity: 7
          amount: 2.7431796149713437
          isNull: true
          currency: 9.50383278592512
          value: value
          timestamp: 7
        fullexcessliquidity:
          severity: 2
          amount: 8.250639315618633
          isNull: true
          currency: 7.273019311111276
          value: value
          timestamp: 8
        equitywithloanvalue-c:
          severity: 2
          amount: 4.141296055235948
          isNull: true
          currency: 8.910869026866926
          value: value
          timestamp: 6
        totaldebitcardpendingcharges:
          severity: 7
          amount: 9.587002134135785
          isNull: true
          currency: 5.801995216106667
          value: value
          timestamp: 9
        fullmaintmarginreq-s:
          severity: 8
          amount: 0.7242789830362995
          isNull: true
          currency: 1.2786903972794905
          value: value
          timestamp: 2
        fullexcessliquidity-s:
          severity: 2
          amount: 5.726375546151009
          isNull: true
          currency: 9.721046668148785
          value: value
          timestamp: 7
        netliquidationuncertainty:
          severity: 0
          amount: 7.224413148959403
          isNull: true
          currency: 1.633699845078339
          value: value
          timestamp: 4
        pasharesvalue-c:
          severity: 4
          amount: 5.201737367852583
          isNull: true
          currency: 6.614319261836819
          value: value
          timestamp: 0
        lookaheadexcessliquidity:
          severity: 4
          amount: 0.8164256701298711
          isNull: true
          currency: 4.13177941962639
          value: value
          timestamp: 0
        fullavailablefunds:
          severity: 6
          amount: 7.390706075830692
          isNull: true
          currency: 1.0502890910539986
          value: value
          timestamp: 2
        maintmarginreq-c:
          severity: 1
          amount: 2.4977456046390434
          isNull: true
          currency: 0.391063602337155
          value: value
          timestamp: 2
        netliquidation:
          severity: 6
          amount: 6.090696483578148
          isNull: true
          currency: 9.852147203726787
          value: value
          timestamp: 1
        fullmaintmarginreq-c:
          severity: 8
          amount: 6.345503614942988
          isNull: true
          currency: 5.499986845135928
          value: value
          timestamp: 5
        fullinitmarginreq:
          severity: 6
          amount: 7.129168897240568
          isNull: true
          currency: 6.370609851066415
          value: value
          timestamp: 9
        fullinitmarginreq-c:
          severity: 6
          amount: 8.768153453040833
          isNull: true
          currency: 2.684056218962324
          value: value
          timestamp: 1
        postexpirationexcess:
          severity: 7
          amount: 3.6300678941289712
          isNull: true
          currency: 2.1305968583238744
          value: value
          timestamp: 2
        lookaheadinitmarginreq-s:
          severity: 2
          amount: 7.321091499885957
          isNull: true
          currency: 7.686670838404092
          value: value
          timestamp: 6
        accrueddividend:
          severity: 3
          amount: 9.018348186070783
          isNull: true
          currency: 6.438423552598547
          value: value
          timestamp: 6
        pasharesvalue-s:
          severity: 3
          amount: 3.0237995775442372
          isNull: true
          currency: 5.2388109661003055
          value: value
          timestamp: 3
        depositoncredithold:
          severity: 8
          amount: 4.4935252719377825
          isNull: true
          currency: 3.209082285545927
          value: value
          timestamp: 2
        grosspositionvalue:
          severity: 9
          amount: 8.257837395465918
          isNull: true
          currency: 5.547564904556697
          value: value
          timestamp: 2
        maintmarginreq-s:
          severity: 2
          amount: 2.9691650858515217
          isNull: true
          currency: 8.018039914932286
          value: value
          timestamp: 7
        daytradesremaining:
          severity: 2
          amount: 9.386524999783381
          isNull: true
          currency: 0.58919091925136
          value: value
          timestamp: 6
        fullinitmarginreq-s:
          severity: 1
          amount: 3.7846852362095262
          isNull: true
          currency: 9.007961177824221
          value: value
          timestamp: 4
        indianstockhaircut-c:
          severity: 9
          amount: 5.616380282218067
          isNull: true
          currency: 9.966789814889403
          value: value
          timestamp: 6
        initmarginreq:
          severity: 9
          amount: 6.79368409560902
          isNull: true
          currency: 9.0012452339701
          value: value
          timestamp: 8
        netliquidation-c:
          severity: 4
          amount: 1.822577900073098
          isNull: true
          currency: 5.083590215108117
          value: value
          timestamp: 2
        pasharesvalue:
          severity: 6
          amount: 6.711221582652969
          isNull: true
          currency: 5.305668385940959
          value: value
          timestamp: 6
        regtequity-s:
          severity: 7
          amount: 7.006584564525956
          isNull: true
          currency: 9.127829562770723
          value: value
          timestamp: 6
        availabletowithdraw-c:
          severity: 3
          amount: 8.251625748923757
          isNull: true
          currency: 4.459605034958679
          value: value
          timestamp: 0
        whatifpmenabled:
          severity: 6
          amount: 8.456690786865144
          isNull: true
          currency: 7.280139268854917
          value: value
          timestamp: 1
        availablefunds:
          severity: 7
          amount: 7.143538047012306
          isNull: true
          currency: 0.8851374739011653
          value: value
          timestamp: 6
        totaldebitcardpendingcharges-s:
          severity: 3
          amount: 1.1424055936677446
          isNull: true
          currency: 4.798043284589512
          value: value
          timestamp: 3
        columnprio-c:
          severity: 3
          amount: 7.835035282970782
          isNull: true
          currency: 0.4768402382624515
          value: value
          timestamp: 2
        accruedcash:
          severity: 1
          amount: 1.2315135367772556
          isNull: true
          currency: 1.0246457001441578
          value: value
          timestamp: 6
        availabletowithdraw:
          severity: 4
          amount: 7.933506881737151
          isNull: true
          currency: 5.507386964179881
          value: value
          timestamp: 6
        availabletowithdraw-s:
          severity: 8
          amount: 2.9409642974827896
          isNull: true
          currency: 1.7325933120207193
          value: value
          timestamp: 6
        lookaheadinitmarginreq-c:
          severity: 7
          amount: 8.81377937009168
          isNull: true
          currency: 4.39343993729625
          value: value
          timestamp: 4
        previousdayequitywithloanvalue-s:
          severity: 5
          amount: 8.450344513152825
          isNull: true
          currency: 4.949269391876654
          value: value
          timestamp: 3
        totaldebitcardpendingcharges-c:
          severity: 8
          amount: 1.165800116953516
          isNull: true
          currency: 7.99596378710894
          value: value
          timestamp: 4
        columnprio-s:
          severity: 4
          amount: 3.804112695731078
          isNull: true
          currency: 8.675064425986758
          value: value
          timestamp: 0
        indianstockhaircut:
          severity: 0
          amount: 4.5403315819302215
          isNull: true
          currency: 8.262575023052213
          value: value
          timestamp: 8
        sma-s:
          severity: 9
          amount: 7.569248658043499
          isNull: true
          currency: 3.390745157937628
          value: value
          timestamp: 4
        billable-s:
          severity: 8
          amount: 5.299143560275359
          isNull: true
          currency: 5.312489704336296
          value: value
          timestamp: 7
        billable:
          severity: 9
          amount: 4.573936264232251
          isNull: true
          currency: 8.863729185622827
          value: value
          timestamp: 1
        lookaheadexcessliquidity-s:
          severity: 2
          amount: 6.936499209818381
          isNull: true
          currency: 4.035133329541982
          value: value
          timestamp: 3
        availablefunds-s:
          severity: 7
          amount: 3.0205796992916243
          isNull: true
          currency: 3.0576100241049344
          value: value
          timestamp: 5
        excessliquidity-s:
          severity: 4
          amount: 6.918231485891953
          isNull: true
          currency: 0.11859130807119977
          value: value
          timestamp: 0
        highestseverity:
          severity: 3
          amount: 1.1864130338603074
          isNull: true
          currency: 3.8601930294054942
          value: value
          timestamp: 1
        netliquidation-s:
          severity: 3
          amount: 9.693372334146686
          isNull: true
          currency: 2.6249013358703053
          value: value
          timestamp: 0
        grosspositionvalue-s:
          severity: 8
          amount: 5.5569822283364845
          isNull: true
          currency: 5.412786966532157
          value: value
          timestamp: 4
        lookaheadnextchange:
          severity: 3
          amount: 5.099298781640682
          isNull: true
          currency: 9.728706165995554
          value: value
          timestamp: 8
      properties:
        accountcode:
          $ref: '#/components/schemas/portfolioSummary_accountcode'
        accountready:
          $ref: '#/components/schemas/portfolioSummary_accountready'
        accounttype:
          $ref: '#/components/schemas/portfolioSummary_accounttype'
        accruedcash:
          $ref: '#/components/schemas/portfolioSummary_accruedcash'
        accruedcash-c:
          $ref: '#/components/schemas/portfolioSummary_accruedcash_c'
        accruedcash-s:
          $ref: '#/components/schemas/portfolioSummary_accruedcash_s'
        accrueddividend:
          $ref: '#/components/schemas/portfolioSummary_accrueddividend'
        accrueddividend-c:
          $ref: '#/components/schemas/portfolioSummary_accrueddividend_c'
        accrueddividend-s:
          $ref: '#/components/schemas/portfolioSummary_accrueddividend_s'
        availablefunds:
          $ref: '#/components/schemas/portfolioSummary_availablefunds'
        availablefunds-c:
          $ref: '#/components/schemas/portfolioSummary_availablefunds_c'
        availablefunds-s:
          $ref: '#/components/schemas/portfolioSummary_availablefunds_s'
        availabletotrade:
          $ref: '#/components/schemas/portfolioSummary_availabletotrade'
        availabletotrade-c:
          $ref: '#/components/schemas/portfolioSummary_availabletotrade_c'
        availabletotrade-s:
          $ref: '#/components/schemas/portfolioSummary_availabletotrade_s'
        availabletowithdraw:
          $ref: '#/components/schemas/portfolioSummary_availabletowithdraw'
        availabletowithdraw-c:
          $ref: '#/components/schemas/portfolioSummary_availabletowithdraw_c'
        availabletowithdraw-s:
          $ref: '#/components/schemas/portfolioSummary_availabletowithdraw_s'
        billable:
          $ref: '#/components/schemas/portfolioSummary_billable'
        billable-c:
          $ref: '#/components/schemas/portfolioSummary_billable_c'
        billable-s:
          $ref: '#/components/schemas/portfolioSummary_billable_s'
        buyingpower:
          $ref: '#/components/schemas/portfolioSummary_buyingpower'
        columnprio-c:
          $ref: '#/components/schemas/portfolioSummary_columnprio_c'
        columnprio-s:
          $ref: '#/components/schemas/portfolioSummary_columnprio_s'
        cushion:
          $ref: '#/components/schemas/portfolioSummary_cushion'
        daytradesremaining:
          $ref: '#/components/schemas/portfolioSummary_daytradesremaining'
        daytradesremainingt+1:
          $ref: '#/components/schemas/portfolioSummary_daytradesremainingt_1'
        daytradesremainingt+2:
          $ref: '#/components/schemas/portfolioSummary_daytradesremainingt_2'
        daytradesremainingt+3:
          $ref: '#/components/schemas/portfolioSummary_daytradesremainingt_3'
        daytradesremainingt+4:
          $ref: '#/components/schemas/portfolioSummary_daytradesremainingt_4'
        daytradingstatus-s:
          $ref: '#/components/schemas/portfolioSummary_daytradingstatus_s'
        depositoncredithold:
          $ref: '#/components/schemas/portfolioSummary_depositoncredithold'
        equitywithloanvalue:
          $ref: '#/components/schemas/portfolioSummary_equitywithloanvalue'
        equitywithloanvalue-c:
          $ref: '#/components/schemas/portfolioSummary_equitywithloanvalue_c'
        equitywithloanvalue-s:
          $ref: '#/components/schemas/portfolioSummary_equitywithloanvalue_s'
        excessliquidity:
          $ref: '#/components/schemas/portfolioSummary_excessliquidity'
        excessliquidity-c:
          $ref: '#/components/schemas/portfolioSummary_excessliquidity_c'
        excessliquidity-s:
          $ref: '#/components/schemas/portfolioSummary_excessliquidity_s'
        fullavailablefunds:
          $ref: '#/components/schemas/portfolioSummary_fullavailablefunds'
        fullavailablefunds-c:
          $ref: '#/components/schemas/portfolioSummary_fullavailablefunds_c'
        fullavailablefunds-s:
          $ref: '#/components/schemas/portfolioSummary_fullavailablefunds_s'
        fullexcessliquidity:
          $ref: '#/components/schemas/portfolioSummary_fullexcessliquidity'
        fullexcessliquidity-c:
          $ref: '#/components/schemas/portfolioSummary_fullexcessliquidity_c'
        fullexcessliquidity-s:
          $ref: '#/components/schemas/portfolioSummary_fullexcessliquidity_s'
        fullinitmarginreq:
          $ref: '#/components/schemas/portfolioSummary_fullinitmarginreq'
        fullinitmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_fullinitmarginreq_c'
        fullinitmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_fullinitmarginreq_s'
        fullmaintmarginreq:
          $ref: '#/components/schemas/portfolioSummary_fullmaintmarginreq'
        fullmaintmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_fullmaintmarginreq_c'
        fullmaintmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_fullmaintmarginreq_s'
        grosspositionvalue:
          $ref: '#/components/schemas/portfolioSummary_grosspositionvalue'
        grosspositionvalue-s:
          $ref: '#/components/schemas/portfolioSummary_grosspositionvalue_s'
        guarantee:
          $ref: '#/components/schemas/portfolioSummary_guarantee'
        guarantee-c:
          $ref: '#/components/schemas/portfolioSummary_guarantee_c'
        guarantee-s:
          $ref: '#/components/schemas/portfolioSummary_guarantee_s'
        highestseverity:
          $ref: '#/components/schemas/portfolioSummary_highestseverity'
        indianstockhaircut:
          $ref: '#/components/schemas/portfolioSummary_indianstockhaircut'
        indianstockhaircut-c:
          $ref: '#/components/schemas/portfolioSummary_indianstockhaircut_c'
        indianstockhaircut-s:
          $ref: '#/components/schemas/portfolioSummary_indianstockhaircut_s'
        initmarginreq:
          $ref: '#/components/schemas/portfolioSummary_initmarginreq'
        initmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_initmarginreq_c'
        initmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_initmarginreq_s'
        leverage-s:
          $ref: '#/components/schemas/portfolioSummary_leverage_s'
        lookaheadavailablefunds:
          $ref: '#/components/schemas/portfolioSummary_lookaheadavailablefunds'
        lookaheadavailablefunds-c:
          $ref: '#/components/schemas/portfolioSummary_lookaheadavailablefunds_c'
        lookaheadavailablefunds-s:
          $ref: '#/components/schemas/portfolioSummary_lookaheadavailablefunds_s'
        lookaheadexcessliquidity:
          $ref: '#/components/schemas/portfolioSummary_lookaheadexcessliquidity'
        lookaheadexcessliquidity-c:
          $ref: '#/components/schemas/portfolioSummary_lookaheadexcessliquidity_c'
        lookaheadexcessliquidity-s:
          $ref: '#/components/schemas/portfolioSummary_lookaheadexcessliquidity_s'
        lookaheadinitmarginreq:
          $ref: '#/components/schemas/portfolioSummary_lookaheadinitmarginreq'
        lookaheadinitmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_lookaheadinitmarginreq_c'
        lookaheadinitmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_lookaheadinitmarginreq_s'
        lookaheadmaintmarginreq:
          $ref: '#/components/schemas/portfolioSummary_lookaheadmaintmarginreq'
        lookaheadmaintmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_lookaheadmaintmarginreq_c'
        lookaheadmaintmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_lookaheadmaintmarginreq_s'
        lookaheadnextchange:
          $ref: '#/components/schemas/portfolioSummary_lookaheadnextchange'
        maintmarginreq:
          $ref: '#/components/schemas/portfolioSummary_maintmarginreq'
        maintmarginreq-c:
          $ref: '#/components/schemas/portfolioSummary_maintmarginreq_c'
        maintmarginreq-s:
          $ref: '#/components/schemas/portfolioSummary_maintmarginreq_s'
        netliquidation:
          $ref: '#/components/schemas/portfolioSummary_netliquidation'
        netliquidation-c:
          $ref: '#/components/schemas/portfolioSummary_netliquidation_c'
        netliquidation-s:
          $ref: '#/components/schemas/portfolioSummary_netliquidation_s'
        netliquidationuncertainty:
          $ref: '#/components/schemas/portfolioSummary_netliquidationuncertainty'
        nlvandmargininreview:
          $ref: '#/components/schemas/portfolioSummary_nlvandmargininreview'
        pasharesvalue:
          $ref: '#/components/schemas/portfolioSummary_pasharesvalue'
        pasharesvalue-c:
          $ref: '#/components/schemas/portfolioSummary_pasharesvalue_c'
        pasharesvalue-s:
          $ref: '#/components/schemas/portfolioSummary_pasharesvalue_s'
        physicalcertificatevalue:
          $ref: '#/components/schemas/portfolioSummary_physicalcertificatevalue'
        physicalcertificatevalue-c:
          $ref: '#/components/schemas/portfolioSummary_physicalcertificatevalue_c'
        physicalcertificatevalue-s:
          $ref: '#/components/schemas/portfolioSummary_physicalcertificatevalue_s'
        postexpirationexcess:
          $ref: '#/components/schemas/portfolioSummary_postexpirationexcess'
        postexpirationexcess-c:
          $ref: '#/components/schemas/portfolioSummary_postexpirationexcess_c'
        postexpirationexcess-s:
          $ref: '#/components/schemas/portfolioSummary_postexpirationexcess_s'
        postexpirationmargin:
          $ref: '#/components/schemas/portfolioSummary_postexpirationmargin'
        postexpirationmargin-c:
          $ref: '#/components/schemas/portfolioSummary_postexpirationmargin_c'
        postexpirationmargin-s:
          $ref: '#/components/schemas/portfolioSummary_postexpirationmargin_s'
        previousdayequitywithloanvalue:
          $ref: '#/components/schemas/portfolioSummary_previousdayequitywithloanvalue'
        previousdayequitywithloanvalue-s:
          $ref: '#/components/schemas/portfolioSummary_previousdayequitywithloanvalue_s'
        regtequity:
          $ref: '#/components/schemas/portfolioSummary_regtequity'
        regtequity-s:
          $ref: '#/components/schemas/portfolioSummary_regtequity_s'
        regtmargin:
          $ref: '#/components/schemas/portfolioSummary_regtmargin'
        regtmargin-s:
          $ref: '#/components/schemas/portfolioSummary_regtmargin_s'
        segmenttitle-c:
          $ref: '#/components/schemas/portfolioSummary_segmenttitle_c'
        segmenttitle-s:
          $ref: '#/components/schemas/portfolioSummary_segmenttitle_s'
        sma:
          $ref: '#/components/schemas/portfolioSummary_sma'
        sma-s:
          $ref: '#/components/schemas/portfolioSummary_sma_s'
        totalcashvalue:
          $ref: '#/components/schemas/portfolioSummary_totalcashvalue'
        totalcashvalue-c:
          $ref: '#/components/schemas/portfolioSummary_totalcashvalue_c'
        totalcashvalue-s:
          $ref: '#/components/schemas/portfolioSummary_totalcashvalue_s'
        totaldebitcardpendingcharges:
          $ref: '#/components/schemas/portfolioSummary_totaldebitcardpendingcharges'
        totaldebitcardpendingcharges-c:
          $ref: '#/components/schemas/portfolioSummary_totaldebitcardpendingcharges_c'
        totaldebitcardpendingcharges-s:
          $ref: '#/components/schemas/portfolioSummary_totaldebitcardpendingcharges_s'
        tradingtype-s:
          $ref: '#/components/schemas/portfolioSummary_tradingtype_s'
        whatifpmenabled:
          $ref: '#/components/schemas/portfolioSummary_whatifpmenabled'
      type: object
    portfolioSummaryValue:
      properties:
        amount:
          description: Numerical data for the associated key.
          type: number
        currency:
          description: The currency in which the value of the 'amount' field is denominated.
          type: number
        isNull:
          description: "Indicates whether the associated key's value does not exist,\
            \ as opposed to a value of zero."
          type: boolean
        severity:
          description: severity
          format: int32
          type: integer
        timestamp:
          description: Unix epoch timestamp of returned data in milliseconds.
          format: int32
          type: integer
        value:
          description: String and boolean (non-numerical) data for the associated
            key.
          type: string
      type: object
    presets:
      example:
        group_auto_close_positions: true
        default_method_for_all: AvailableEquity
        profiles_auto_close_positions: true
        strict_credit_check: true
        group_proportional_allocation: true
      properties:
        group_auto_close_positions:
          description: Determines if allocation groups should prioritize closing positions
            over equal distribution.
          type: boolean
        default_method_for_all:
          description: |
            Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified. IB-computed allocation methods:
              * `A` - Available Equity
              * `E` - Equal
              * `N` - Net Liquidation Value

            User-specified allocation methods:
              * `C` - Cash Quantity
              * `P` - Percentage
              * `R` - Ratios
              * `S` - Shares
          enum:
          - AvailableEquity
          - E
          - "N"
          - C
          - P
          - R
          - S
          type: string
        profiles_auto_close_positions:
          description: Determines if allocation profiles should prioritize closing
            positions over equal distribution.
          type: boolean
        strict_credit_check:
          description: "Determines if the system should always check user credit before\
            \ beginning the order process every time, or only at the time of order\
            \ placement and execution."
          type: boolean
        group_proportional_allocation:
          description: Determines if the system should keep allocation groups proportional
            for scaling.
          type: boolean
    regsnapshotData:
      description: Object containing regulatory snapshot data.
      example:
        "88": 1
        BestAskExch: 2
        BboExchange: BboExchange
        conidEx: conidEx
        "7057": "7057"
        "7068": "7068"
        "7059": "7059"
        "7058": "7058"
        BestBidExch: 5
        HasDelayed: true
        LastExch: 7
        conid: 0
        "84": "84"
        "85": 5
        "86": "86"
        "31": "31"
        sizeMinTick: 6.027456183070403
      properties:
        conid:
          description: IB contract ID.
          format: int32
          type: integer
        conidEx:
          description: Contract ID and routing destination in format 123456@EXCHANGE.
          type: string
        sizeMinTick:
          description: Internal use. Minimum size display increment.
          type: number
        BboExchange:
          description: Internal use. Exchange map code.
          type: string
        HasDelayed:
          description: Indicates whether delayed data is available.
          type: boolean
        "84":
          description: Bid price.
          type: string
        "86":
          description: Ask price.
          type: string
        "88":
          description: Bid size in round lots (100 shares).
          format: int32
          type: integer
        "85":
          description: Ask size in round lots (100 shares).
          format: int32
          type: integer
        BestBidExch:
          description: Internal use. Equivalent binary encoding of field 7068.
          format: int32
          type: integer
        BestAskExch:
          description: Internal use. Equivalent binary encoding of field 7057.
          format: int32
          type: integer
        "31":
          description: Last traded price.
          type: string
        "7059":
          description: Last traded size in round lots (100 shares).
          type: string
        LastExch:
          description: Internal use. Equivalent binary encoding of field 7058.
          format: int32
          type: integer
        "7057":
          description: "Best ask exchanges(s). String of single, capital-letter MCOIDs."
          type: string
        "7068":
          description: "Best bid exchange(s). String of single, capital-letter MCOIDs."
          type: string
        "7058":
          description: "Exchange of last trade. A single, capital-letter MCOID."
          type: string
      type: object
    secDefInfoResponse:
      example:
        ticker: ticker
        priceRendering: ""
        maturityDate: maturityDate
        companyName: companyName
        strike: 6.027456183070403
        conid: 0
        secType: secType
        exchange: exchange
        currency: currency
        right: P
        listingExchange: listingExchange
        validExchanges: validExchanges
      properties:
        conid:
          description: Contract Identifier of the given contract.
          format: int32
          type: integer
        ticker:
          description: Ticker symbol for the given contract
          type: string
        secType:
          description: Security type for the given contract.
          type: string
        listingExchange:
          description: Primary listing exchange for the given contract.
          type: string
        exchange:
          description: Exchange requesting data for.
          type: string
        companyName:
          description: Name of the company for the given contract.
          type: string
        currency:
          description: Traded currency allowed for the given contract.
          type: string
        validExchanges:
          description: Series of all valid exchanges the contract can be traded on
            in a single comma-separated string.
          type: string
        priceRendering:
          nullable: true
        maturityDate:
          description: Date of expiration for the given contract.
          nullable: true
          type: string
        right:
          description: |
            Set the right for the given contract. * `C` - for Call options. * `P` - for Put options.
          enum:
          - P
          - C
          type: string
        strike:
          description: Returns the given strike value for the given contract.
          type: number
    secdefSearchResponse:
      items:
        $ref: '#/components/schemas/secdefSearchResponse_inner'
      type: array
    setAccountResponse:
      example:
        set: true
        acctId: acctId
      properties:
        set:
          description: Confirms that the account change was set
          type: boolean
        acctId:
          description: Confirms the account switched to.
          type: string
      type: object
    signatureAndOwners:
      example:
        accountId: accountId
        users:
        - roleId: roleId
          hasRightCodeInd: true
          entity:
            firstName: firstName
            lastName: lastName
            entityName: entityName
            entityType: INDIVIDUAL
        - roleId: roleId
          hasRightCodeInd: true
          entity:
            firstName: firstName
            lastName: lastName
            entityName: entityName
            entityType: INDIVIDUAL
        applicant:
          signatures:
          - signatures
          - signatures
      properties:
        accountId:
          description: Account identifier
          type: string
        users:
          items:
            $ref: '#/components/schemas/user'
          type: array
        applicant:
          $ref: '#/components/schemas/signatureAndOwners_applicant'
      type: object
    singleHistoricalBar:
      description: Object containing data for a single OHLC bar.
      example:
        c: 5.637376656633329
        t: 1
        v: 9.301444243932576
        h: 2.3021358869347655
        l: 7.061401241503109
        o: 5.962133916683182
      properties:
        t:
          description: Unix timestamp of the start (chronologically earlier) of the
            bar.
          format: int32
          type: integer
        o:
          description: Opening value of the bar.
          type: number
        c:
          description: Closing value of the bar.
          type: number
        h:
          description: High value of the bar.
          type: number
        l:
          description: Low value of the bar.
          type: number
        v:
          description: "Volume value of the bar, returned only for \"Last\" barType."
          type: number
      type: object
    singleOrderSubmissionRequest:
      description: A single order ticket.
      properties:
        acctId:
          description: Receiving account of the order ticket.
          type: string
        conid:
          description: IB contract ID of the instrument.
          format: int32
          type: integer
        conidex:
          description: Contract ID and routing destination together in format 123456@EXCHANGE.
          type: string
        secType:
          description: IB asset class identifier.
          type: string
        cOID:
          description: Client-configurable order identifier.
          type: string
        parentId:
          description: "If the order ticket is a child order in a bracket, the parentId\
            \ field must be set equal to the cOID provided for the parent order."
          type: string
        listingExchange:
          description: The listing exchange of the instrument.
          type: string
        isSingleGroup:
          description: Indicates that all orders in the containing array are to be
            treated as an OCA group.
          type: boolean
        outsideRTH:
          description: Instructs IB to permit the order to execute outside of regular
            trading hours.
          type: boolean
        auxPrice:
          description: "Additional price value used in certain order types, such as\
            \ stop orders."
          type: number
        ticker:
          description: Ticker symbol of the instrument.
          type: string
        trailingAmt:
          description: Offset used with Trailing orders.
          type: number
        trailingType:
          description: Specifies the type of trailing used with a Trailing order.
          enum:
          - amt
          - '%'
          type: string
        referrer:
          description: IB internal identifier for order entry UI element.
          type: string
        cashQty:
          description: Quantity of currency used with cash quantity orders.
          type: number
        useAdaptive:
          description: Instructs IB to apply the Price Management Algo.
          type: boolean
        isCcyConv:
          description: "Indicates that a forex order is for currency conversion and\
            \ should not entail a virtual forex position in the account, where applicable."
          type: boolean
        orderType:
          description: IB order type identifier.
          type: string
        price:
          description: "Price of the order ticket, where applicable."
          type: number
        side:
          description: Side of the order ticket.
          enum:
          - BUY
          - SELL
          type: string
        tif:
          description: Time in force of the order ticket.
          enum:
          - DAY
          - IOC
          - GTC
          - OPG
          - PAX
          type: string
        quantity:
          description: Quantity of the order ticket in units of the instrument.
          type: number
        strategy:
          description: The name of an execution algorithm.
          type: string
        strategyParameters:
          $ref: '#/components/schemas/singleOrderSubmissionRequest_strategyParameters'
      required:
      - conid
      - orderType
      - quantity
      - side
      - tif
      type: object
    singleWatchlist:
      description: Object detailing a single watchlist.
      example:
        instruments:
        - ST: STK
          ticker: ticker
          C: C
          name: name
          chineseName: chineseName
          fullName: fullName
          conid: 0
          assetClass: STK
        - ST: STK
          ticker: ticker
          C: C
          name: name
          chineseName: chineseName
          fullName: fullName
          conid: 0
          assetClass: STK
        name: name
        readOnly: true
        id: id
        hash: hash
      properties:
        id:
          description: Identifier of the watchlist.
          type: string
        hash:
          description: Internal use. Unique hash of the watchlist.
          type: string
        name:
          description: Human-readable display name of the watchlist.
          type: string
        readOnly:
          description: Indicates whether the watchlist can be edited.
          type: boolean
        instruments:
          description: Array of instruments contained in the watchlist.
          items:
            $ref: '#/components/schemas/singleWatchlistEntry'
          type: array
      type: object
    singleWatchlistEntry:
      description: Object containing watchlist entry for a single instrument.
      example:
        ST: STK
        ticker: ticker
        C: C
        name: name
        chineseName: chineseName
        fullName: fullName
        conid: 0
        assetClass: STK
      properties:
        ST:
          description: "All-capital, shorthand security type identifier of the instrument."
          enum:
          - STK
          - OPT
          - FUT
          - BOND
          - FUND
          - WAR
          - CASH
          - CRYPTO
          type: string
        C:
          description: Instrument conid as a string.
          type: string
        conid:
          description: IB contract ID of the instrument.
          format: int32
          type: integer
        name:
          description: Complete display name of the instrument.
          type: string
        fullName:
          description: Full display presentation of the instrument symbol.
          type: string
        assetClass:
          description: "All-capital, shorthand security type identifier of the instrument."
          enum:
          - STK
          - OPT
          - FUT
          - BOND
          - FUND
          - WAR
          - CASH
          - CRYPTO
          type: string
        ticker:
          description: Symbol of the instrument.
          type: string
        chineseName:
          description: Rendering of the instrument name in Chinese.
          type: string
      type: object
    ssoValidateResponse:
      example:
        PAPER_USER_NAME: PAPER_USER_NAME
        IS_MASTER: true
        SF_ENABLED: true
        loginType: 5
        IP: IP
        USER_ID: 0
        AUTH_TIME: 6
        USER_NAME: USER_NAME
        IS_FREE_TRIAL: true
        features:
          calendar: true
          realtime: true
          newMf: true
          envs: envs
          wlms: true
          bond: true
          optionChains: true
        LANDING_APP: LANDING_APP
        EXPIRES: 1
        CREDENTIAL: CREDENTIAL
        lastAccessed: 5
        region: region
        RESULT: true
        QUALIFIED_FOR_MOBILE_AUTH: true
      properties:
        USER_ID:
          description: Internal user identifier.
          format: int32
          type: integer
        USER_NAME:
          description: current username logged in for the session.
          type: string
        RESULT:
          description: Confirms if validation was successful. True if session was
            validated; false if not.
          type: boolean
        AUTH_TIME:
          description: Returns the time of authentication in epoch time.
          format: int32
          type: integer
        SF_ENABLED:
          description: (Internal use only)
          type: boolean
        IS_FREE_TRIAL:
          description: Returns if the account is a trial account or a funded account.
          type: boolean
        CREDENTIAL:
          description: Returns the underlying username of the account.
          type: string
        IP:
          description: Internal use only. Does not reflect the IP address of the user.
          type: string
        EXPIRES:
          description: Returns the time until SSO session expiration in milliseconds.
          format: int32
          type: integer
        QUALIFIED_FOR_MOBILE_AUTH:
          description: Returns if the customer requires two factor authentication.
          type: boolean
        LANDING_APP:
          description: Used for Client Portal (Internal use only)
          type: string
        IS_MASTER:
          description: Returns whether the account is a master account (true) or subaccount
            (false).
          type: boolean
        lastAccessed:
          description: Returns the last time the user was accessed in epoch time.
          format: int32
          type: integer
        loginType:
          description: "Returns the login type. 1 for Live, 2 for Paper"
          format: int32
          type: integer
        PAPER_USER_NAME:
          description: Returns the paper username for the account.
          type: string
        features:
          $ref: '#/components/schemas/ssoValidateResponse_features'
        region:
          description: Returns the region connected to internally.
          type: string
      type: object
    stocks:
      additionalProperties:
        items:
          $ref: '#/components/schemas/stocks_value_inner'
        type: array
      type: object
    subAccounts:
      example:
        accounts:
        - data:
          - data
          - data
          name: name
        - data:
          - data
          - data
          name: name
      properties:
        accounts:
          description: An array containing all sub-accounts held by the advisor.
          items:
            $ref: '#/components/schemas/subAccounts_accounts_inner'
          type: array
      type: object
    successfulTickleResponse:
      example:
        collission: true
        hmds:
          authStatus:
          - authStatus
          - authStatus
          error: error
        session: session
        ssoExpires: 0
        iserver:
          authStatus:
            competing: true
            connected: true
            authenticated: true
            serverInfo:
              fail: fail
              serverVersion: serverVersion
              serverName: serverName
            message: message
            MAC: MAC
        userId: 6
      properties:
        session:
          description: Returns the session token of the contract.
          type: string
        ssoExpires:
          description: Returns the number of milliseconds until the current sso session
            expires.
          format: int32
          type: integer
        collission:
          description: (Internal Use Only)
          type: boolean
        userId:
          description: (Internal Use Only)
          format: int32
          type: integer
        hmds:
          $ref: '#/components/schemas/successfulTickleResponse_hmds'
        iserver:
          $ref: '#/components/schemas/successfulTickleResponse_iserver'
      type: object
    summaryMarketValueResponse:
      example:
        currency:
          cfd: cfd
          commodity: commodity
          total_cash: total_cash
          issuer_option: issuer_option
          t_bills: t_bills
          bonds: bonds
          settled_cash: settled_cash
          futures: futures
          Exchange Rate: Exchange Rate
          future_options: future_options
          MTD Interest: MTD Interest
          Govt Bonds: Govt Bonds
          warrants: warrants
          options: options
          mutual_funds: mutual_funds
          realized_pnl: realized_pnl
          funds: funds
          dividends_receivable: dividends_receivable
          Notional CFD: Notional CFD
          net_liquidation: net_liquidation
          unrealized_pnl: unrealized_pnl
          stock: stock
          money_market: money_market
      properties:
        currency:
          $ref: '#/components/schemas/summaryMarketValueResponse_currency'
      type: object
    summaryOfAccountBalancesResponse:
      example:
        total:
          equity_with_loan: equity_with_loan
          net_liquidation: net_liquidation
          Prvs Dy Eqty Wth Ln Vl: Prvs Dy Eqty Wth Ln Vl
          Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
          Nt Lqdtn Uncrtnty: Nt Lqdtn Uncrtnty
          sec_gross_pos_val: sec_gross_pos_val
          cash: cash
          MTD Interest: MTD Interest
        commodities:
          equity_with_loan: equity_with_loan
          net_liquidation: net_liquidation
          Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
          cash: cash
          MTD Interest: MTD Interest
        securities:
          equity_with_loan: equity_with_loan
          net_liquidation: net_liquidation
          Prvs Dy Eqty Wth Ln Vl: Prvs Dy Eqty Wth Ln Vl
          Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
          sec_gross_pos_val: sec_gross_pos_val
          cash: cash
          MTD Interest: MTD Interest
      properties:
        total:
          $ref: '#/components/schemas/summaryOfAccountBalancesResponse_total'
        commodities:
          $ref: '#/components/schemas/summaryOfAccountBalancesResponse_commodities'
        securities:
          $ref: '#/components/schemas/summaryOfAccountBalancesResponse_securities'
      type: object
    summaryOfAccountMarginResponse:
      example:
        total:
          Prjctd Lk Ahd Mntnnc Mrgn: Prjctd Lk Ahd Mntnnc Mrgn
          Prdctd Pst-xpry Mrgn @ Opn: Prdctd Pst-xpry Mrgn @ Opn
          projected_overnight_initial_margin: projected_overnight_initial_margin
          current_maint: current_maint
          projected_liquidity_inital_margin: projected_liquidity_inital_margin
          current_initial: current_initial
          Prjctd Ovrnght Mntnnc Mrgn: Prjctd Ovrnght Mntnnc Mrgn
        commodities:
          Prjctd Lk Ahd Mntnnc Mrgn: Prjctd Lk Ahd Mntnnc Mrgn
          Prdctd Pst-xpry Mrgn @ Opn: Prdctd Pst-xpry Mrgn @ Opn
          projected_overnight_initial_margin: projected_overnight_initial_margin
          current_maint: current_maint
          projected_liquidity_inital_margin: projected_liquidity_inital_margin
          current_initial: current_initial
          Prjctd Ovrnght Mntnnc Mrgn: Prjctd Ovrnght Mntnnc Mrgn
        securities:
          Prjctd Lk Ahd Mntnnc Mrgn: Prjctd Lk Ahd Mntnnc Mrgn
          Prdctd Pst-xpry Mrgn @ Opn: Prdctd Pst-xpry Mrgn @ Opn
          projected_overnight_initial_margin: projected_overnight_initial_margin
          current_maint: current_maint
          projected_liquidity_inital_margin: projected_liquidity_inital_margin
          current_initial: current_initial
          Prjctd Ovrnght Mntnnc Mrgn: Prjctd Ovrnght Mntnnc Mrgn
      properties:
        total:
          $ref: '#/components/schemas/summaryOfAccountMarginResponse_total'
        commodities:
          $ref: '#/components/schemas/summaryOfAccountMarginResponse_total'
        securities:
          $ref: '#/components/schemas/summaryOfAccountMarginResponse_securities'
      type: object
    tickleResponse:
      oneOf:
      - $ref: '#/components/schemas/successfulTickleResponse'
      - $ref: '#/components/schemas/failedTickleResponse'
    tradesResponse:
      description: Array of objects representing executions.
      items:
        $ref: '#/components/schemas/tradesResponse_inner'
      type: array
    tradingSchedule:
      description: trading's schedules
      items:
        $ref: '#/components/schemas/tradingSchedule_inner'
      type: array
    transactionsResponse:
      example:
        rc: 0
        nd: 6
        rpnl:
          data:
          - data
          - data
          amt: amt
          items:
            date: date
            cur: cur
            fxRate: 1
            side: L
            acctid: acctid
            amt: amt
            conid: conid
        currency: currency
        from: 5
        id: id
        to: 5
        includesRealTime: true
        transactions:
        - date: date
          cur: cur
          fxRate: 2
          pr: 7
          qty: 9
          acctid: acctid
          amt: 3
          conid: 2
          type: type
          desc: desc
        - date: date
          cur: cur
          fxRate: 2
          pr: 7
          qty: 9
          acctid: acctid
          amt: 3
          conid: 2
          type: type
          desc: desc
      properties:
        rc:
          description: Client portal use only
          format: int32
          type: integer
        nd:
          description: Client portal use only
          format: int32
          type: integer
        rpnl:
          $ref: '#/components/schemas/transactionsResponse_rpnl'
        currency:
          description: Returns the currency the account is traded in.
          type: string
        from:
          description: Returns the epoch time for the start of requests.
          format: int32
          type: integer
        id:
          description: "Returns the request identifier, getTransactions."
          type: string
        to:
          description: Returns the epoch time for the end of requests.
          format: int32
          type: integer
        includesRealTime:
          description: Returns if the trades are up to date or not.
          type: boolean
        transactions:
          description: Lists all supported transaction values.
          items:
            $ref: '#/components/schemas/transactionsResponse_transactions_inner'
          type: array
      type: object
    trsrvSecDefResponse:
      description: a contract's security definition
      example:
        secdef:
        - secdef
        - secdef
      properties:
        secdef:
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    typecodes:
      description: |
        Many FYI endpoints reference a “typecode” value. The table below lists the available codes and what they correspond to.
          * `BA` - Borrow Availability
          * `CA` - Comparable Algo
          * `DA` - Dividends Advisory
          * `EA` - Upcoming Earnings
          * `MF` - Mutual Fund Advisory
          * `OE` - Option Expiration
          * `PR` - Portfolio Builder Rebalance
          * `SE` - Suspend Order on Economic Event
          * `SG` - Short Term Gain turning Long Term
          * `SM` - System Messages
          * `T2` - Assignment Realizing Long-Term Gains
          * `TO` - Takeover
          * `UA` - User Alert
          * `M8` - M871 Trades
          * `PS` - Platform Use Suggestions
          * `DL` - Unexercised Option Loss Prevention Reminder
          * `PT` - Position Transfer
          * `CB` - Missing Cost Basis
          * `MS` - Milestones
          * `TD` - MiFID || 10% Deprecation Notice
          * `ST` - Save Taxes
          * `TI` - Trade Idea
          * `CT` - Cash Transfer
      enum:
      - BA
      - CA
      - DA
      - EA
      - MF
      - OE
      - PR
      - SE
      - SG
      - SM
      - T2
      - TO
      - UA
      - M8
      - PS
      - DL
      - PT
      - CB
      - MS
      - TD
      - ST
      - TI
      - CT
      type: string
    user:
      example:
        roleId: roleId
        hasRightCodeInd: true
        entity:
          firstName: firstName
          lastName: lastName
          entityName: entityName
          entityType: INDIVIDUAL
      properties:
        roleId:
          description: The role of the username as it relates to the account
          type: string
        hasRightCodeInd:
          description: Internally used
          type: boolean
        entity:
          $ref: '#/components/schemas/user_entity'
      type: object
    userAccountsResponse:
      example:
        chartPeriods:
          CFD:
          - CFD
          - CFD
          CRYPTO:
          - CRYPTO
          - CRYPTO
          FUT:
          - FUT
          - FUT
          FUND:
          - FUND
          - FUND
          FOP:
          - FOP
          - FOP
          IOPT:
          - IOPT
          - IOPT
          PHYSS:
          - PHYSS
          - PHYSS
          WAR:
          - WAR
          - WAR
          STK:
          - STK
          - STK
          CMDTY:
          - CMDTY
          - CMDTY
          CASH:
          - CASH
          - CASH
          OPT:
          - OPT
          - OPT
          BOND:
          - BOND
          - BOND
          IND:
          - IND
          - IND
        isPaper: true
        aliases:
          U1234567: U1234567
        serverInfo:
          serverVersion: serverVersion
          serverName: serverName
        acctProps:
          U1234567:
            hasChildAccounts: true
            supportsCashQty: true
            noFXConv: true
            isProp: true
            supportsFractions: true
            allowCustomerTime: true
        allowFeatures:
          allowEventContract: true
          allowMTA: true
          showGFIS: true
          showWebNews: true
          allowDynAccount: true
          allowEventTrading: true
          showImpactDashboard: true
          liteUser: true
          research: true
          allowedAssetTypes: allowedAssetTypes
          showEUCostReport: true
          allowCrypto: true
          allowTypeAhead: true
          allowFXConv: true
          allowFinancialLens: true
          debugPnl: true
          showTaxOpt: true
          snapshotRefreshTimeout: 30
        profiles:
        - profiles
        - profiles
        groups:
        - groups
        - groups
        isFt: true
        selectedAccount: selectedAccount
        accounts:
        - accounts
        - accounts
        sessionId: sessionId
      properties:
        accounts:
          description: Returns an array of all accessible accountIds.
          items:
            description: An accessible accountId
            type: string
          type: array
        acctProps:
          $ref: '#/components/schemas/userAccountsResponse_acctProps'
        aliases:
          $ref: '#/components/schemas/userAccountsResponse_aliases'
        allowFeatures:
          $ref: '#/components/schemas/userAccountsResponse_allowFeatures'
        chartPeriods:
          $ref: '#/components/schemas/userAccountsResponse_chartPeriods'
        groups:
          items:
            type: string
          type: array
        profiles:
          items:
            type: string
          type: array
        selectedAccount:
          type: string
        serverInfo:
          $ref: '#/components/schemas/userAccountsResponse_serverInfo'
        sessionId:
          type: string
        isFt:
          type: boolean
        isPaper:
          type: boolean
      type: object
    utcDateTime:
      description: UTC datetime string in format YYYYMMDD-hh:mm:ss.
      example: 20231018-16:00:00
      type: string
    watchlistDeleteSuccess:
      description: Object detailing the successful deletion of a watchlist.
      example:
        data:
          deleted: deleted
        action: context
        MID: MID
      properties:
        data:
          $ref: '#/components/schemas/watchlistDeleteSuccess_data'
        action:
          description: Internal use. Always has value 'context'.
          enum:
          - context
          type: string
        MID:
          description: Internal use. Number of times endpoint has been visited during
            session.
          type: string
      type: object
    watchlistsResponse:
      description: Object containing a successful query for watchlists saved for the
        username in use in the current Web API session.
      example:
        data:
          scanners_only: true
          show_scanners: true
          bulk_delete: true
          user_lists:
          - is_open: true
            read_only: true
            name: name
            modified: 0
            id: id
            type: watchlist
          - is_open: true
            read_only: true
            name: name
            modified: 0
            id: id
            type: watchlist
        action: content
        MID: MID
      properties:
        data:
          $ref: '#/components/schemas/watchlistsResponse_data'
        action:
          description: Internal use. Always has value 'content'.
          enum:
          - content
          type: string
        MID:
          description: Internal use. Number of times endpoint has been visited during
            session.
          type: string
      type: object
    _fyi_settings__typecode__post_request:
      properties:
        enabled:
          description: the notification should be enabled or disabled.
          type: boolean
    _fyi_unreadnumber_get_200_response:
      example:
        BN: 0
      properties:
        BN:
          description: Returns the number of unread bulletins.
          format: int32
          type: integer
    _fyi_unreadnumber_get_423_response:
      example:
        status: status
      properties:
        status:
          type: string
    _gw_api_v1_accounts_get_200_response:
      oneOf:
      - $ref: '#/components/schemas/FileDetailsResponse'
      - $ref: '#/components/schemas/ResponseFileResponse'
    _gw_api_v1_accounts_close_post_request:
      properties:
        instructionType:
          enum:
          - ACCOUNT_CLOSE
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/AccountCloseInstruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_accounts__accountId__tasks_get_200_response:
      oneOf:
      - $ref: '#/components/schemas/RegistrationTasksResponse'
      - $ref: '#/components/schemas/PendingTasksResponse'
    _gw_api_v1_bank_instructions_post_request_instruction:
      oneOf:
      - $ref: '#/components/schemas/TraditionalBankInstructionVerification'
      - $ref: '#/components/schemas/AchInstruction'
      - $ref: '#/components/schemas/DeleteBankInstruction'
      - $ref: '#/components/schemas/PredefinedDestinationInstruction'
      - $ref: '#/components/schemas/EddaInstruction'
    _gw_api_v1_bank_instructions_post_request:
      properties:
        instructionType:
          enum:
          - ACH_INSTRUCTION
          - TRADITIONAL_BANK_INSTRUCTION_VERIFICATION
          - DELETE_BANK_INSTRUCTION
          - PREDEFINED_DESTINATION_INSTRUCTION
          - EDDA_INSTRUCTION
          type: string
        instruction:
          $ref: '#/components/schemas/_gw_api_v1_bank_instructions_post_request_instruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_bank_instructions_query_post_request_instruction:
      oneOf:
      - $ref: '#/components/schemas/QueryBankInstruction'
      - $ref: '#/components/schemas/QueryRecentRecurringEvents'
      - $ref: '#/components/schemas/QueryRecurringInstructions'
    _gw_api_v1_bank_instructions_query_post_request:
      properties:
        instructionType:
          enum:
          - QUERY_BANK_INSTRUCTION
          - QUERY_RECENT_RECURRING_EVENTS
          - QUERY_RECURRING_INSTRUCTIONS
          type: string
        instruction:
          $ref: '#/components/schemas/_gw_api_v1_bank_instructions_query_post_request_instruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_bank_instructions_query_post_201_response:
      oneOf:
      - $ref: '#/components/schemas/QueryRecentRecurringEventResult'
      - $ref: '#/components/schemas/QueryBankInstructionResult'
      - $ref: '#/components/schemas/QueryRecurringInstructionsResult'
    _gw_api_v1_client_instructions__clientInstructionId__get_200_response:
      oneOf:
      - $ref: '#/components/schemas/InstructionPollingResponse'
      - $ref: '#/components/schemas/InstructionResponse'
      - $ref: '#/components/schemas/QueryRecentInstructionResponse'
      - $ref: '#/components/schemas/DepositFundsPollingResponse'
      - $ref: '#/components/schemas/QueryIRAContributionsResponse'
    _gw_api_v1_external_asset_transfers_post_request_instruction:
      oneOf:
      - $ref: '#/components/schemas/FopInstruction'
      - $ref: '#/components/schemas/DwacInstruction'
      - $ref: '#/components/schemas/ComplexAssetTransferInstruction'
      - $ref: '#/components/schemas/ExternalPositionTransfer'
    _gw_api_v1_external_asset_transfers_post_request:
      properties:
        instructionType:
          enum:
          - DWAC
          - FOP
          - COMPLEX_ASSET_TRANSFER
          - EXTERNAL_POSITION_TRANSFER
          type: string
        instruction:
          $ref: '#/components/schemas/_gw_api_v1_external_asset_transfers_post_request_instruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_external_cash_transfers_post_request_instruction:
      oneOf:
      - $ref: '#/components/schemas/DepositFundsInstruction'
      - $ref: '#/components/schemas/WithdrawFundsInstruction'
    _gw_api_v1_external_cash_transfers_post_request:
      properties:
        instructionType:
          enum:
          - DEPOSIT
          - WITHDRAWAL
          type: string
        instruction:
          $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_post_request_instruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_external_cash_transfers_query_post_request_instruction:
      oneOf:
      - $ref: '#/components/schemas/QueryWithdrawableFunds'
      - $ref: '#/components/schemas/QueryWithdrawableWithoutOriginHoldFunds'
      - $ref: '#/components/schemas/QueryIRAContributions'
    _gw_api_v1_external_cash_transfers_query_post_request:
      properties:
        instructionType:
          enum:
          - QUERY_WITHDAWABLE_FUNDS
          - QUERY_IRA_CONTRIBUTIONS
          type: string
        instruction:
          $ref: '#/components/schemas/_gw_api_v1_external_cash_transfers_query_post_request_instruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_external_cash_transfers_query_post_201_response:
      oneOf:
      - $ref: '#/components/schemas/QueryWithdrawableAmountsResponse'
      - $ref: '#/components/schemas/QueryWithdrawableAmountsWithoutOriginHoldResponse'
    _gw_api_v1_external_cash_transfers_query_post_202_response:
      oneOf:
      - $ref: '#/components/schemas/AsynchronousInstructionResponse'
    _gw_api_v1_fee_templates_post_request:
      properties:
        instructionType:
          enum:
          - APPLY_FEE_TEMPLATE
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/ApplyFeeTemplateInstruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_fee_templates_query_post_request:
      properties:
        instructionType:
          enum:
          - QUERY_FEE_TEMPLATE
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/QueryFeeTemplate'
      required:
      - instruction
      - instructionType
    _gw_api_v1_instructions_cancel_post_request:
      properties:
        instructionType:
          enum:
          - CANCEL_INSTRUCTION
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/CancelInstruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_instructions_query_post_request:
      properties:
        instructionType:
          enum:
          - QUERY_RECENT_INSTRUCTIONS
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/QueryRecentInstructions'
      required:
      - instruction
      - instructionType
    _gw_api_v1_internal_asset_transfers_post_request:
      properties:
        instructionType:
          enum:
          - INTERNAL_POSITION_TRANSFER
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/InternalPositionTransferInstruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_internal_cash_transfers_post_request:
      properties:
        instructionType:
          enum:
          - INTERNAL_CASH_TRANSFER
          type: string
        instruction:
          allOf:
          - $ref: '#/components/schemas/InternalCashTransferInstruction'
      required:
      - instruction
      - instructionType
    _gw_api_v1_requests__requestId__status_get_200_response:
      oneOf:
      - $ref: '#/components/schemas/AmRequestStatusResponse'
      - $ref: '#/components/schemas/StatusResponse'
    _hmds_scanner_run_post_200_response_Contracts:
      description: Contains a Contract array which appears to hold all contracts.
      example:
        Contract:
        - Contract
        - Contract
      properties:
        Contract:
          description: Contains all contracts matching the market scanner.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            inScanTime:
              description: Returns the UTC datetime when the contract was retrieved.
              type: string
            contractID:
              description: Returns a contract identifier that matches the market scanner
                parameters.
              format: int32
              type: integer
          type: array
      type: object
    _hmds_scanner_run_post_200_response:
      example:
        total: 0
        size: 6
        offset: 1
        scanTime: scanTime
        id: id
        position: position
        warningText: warningText
        Contracts:
          Contract:
          - Contract
          - Contract
      properties:
        total:
          description: Returns the total number of bonds that match the indicated
            search.
          format: int32
          type: integer
        size:
          description: Returns the total size of the return.
          format: int32
          type: integer
        offset:
          description: Returns the distance displaced from the starting 0 value.
          format: int32
          type: integer
        scanTime:
          description: Returns the UTC datetime value of when the request took place.
          type: string
        id:
          description: "Returns the market scanner name. Automatically generates an\
            \ incremental scanner name for each request formatted as \"scanner{ N\
            \ }\""
          type: string
        position:
          description: (Internal use only)
          type: string
        warningText:
          description: Returns the number of contracts returned out of total contracts
            that match.
          type: string
        Contracts:
          $ref: '#/components/schemas/_hmds_scanner_run_post_200_response_Contracts'
      type: object
    _iserver_account_post_request:
      properties:
        acctId:
          description: Identifier for the unique account to retrieve information from.
          example: U1234567
          type: string
      type: object
    _iserver_account_allocation_group_put_request:
      properties:
        name:
          description: "Name used to refer to your allocation group. If prev_name\
            \ is specified, this will become the new name of the group."
          example: Group_1_NetLiq
          type: string
        prev_name:
          description: "Can be used to rename a group. Using this field will recognize\
            \ the previous name, while the \"name\" filed will mark the updated name."
          example: Group_0_NetLiq
          type: string
        accounts:
          description: "An array of accounts that should be held in the allocation\
            \ group and, if using a User-specified allocaiton method, the value correlated\
            \ to the allocation."
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        default_method:
          $ref: '#/components/schemas/allocationMethod'
      required:
      - accounts
      - default_method
      - name
      type: object
    _iserver_account_allocation_group_put_200_response:
      example:
        success: true
      properties:
        success:
          type: boolean
    _iserver_account_allocation_group_post_request:
      properties:
        name:
          description: "Name used to refer to your allocation group. If prev_name\
            \ is specified, this will become the new name of the group."
          example: Group_1_NetLiq
          type: string
        accounts:
          description: "An array of accounts that should be held in the allocation\
            \ group and, if using a User-specified allocaiton method, the value correlated\
            \ to the allocation."
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        default_method:
          $ref: '#/components/schemas/allocationMethod'
      required:
      - accounts
      - default_method
      - name
      type: object
    _iserver_account_allocation_group_delete_post_request:
      properties:
        name:
          description: Name of an existing allocation group.
          example: Group_1_NetLiq
          type: string
      required:
      - name
      type: object
    _iserver_account_allocation_presets_post_200_response:
      example:
        success: true
      properties:
        success:
          description: Signifies that the request was successfully submitted.
          type: boolean
    _iserver_account_order_status__orderId__get_200_response:
      oneOf:
      - $ref: '#/components/schemas/orderStatus'
    _iserver_account__accountId__order__orderId__post_200_response:
      oneOf:
      - $ref: '#/components/schemas/orderSubmitSuccess'
      - $ref: '#/components/schemas/orderSubmitError'
      - $ref: '#/components/schemas/orderReplyMessage'
      - $ref: '#/components/schemas/advancedOrderReject'
    _iserver_account__accountId__order__orderId__delete_200_response:
      oneOf:
      - $ref: '#/components/schemas/orderCancelSuccess'
      - $ref: '#/components/schemas/orderSubmitError'
    _iserver_contract_rules_post_request:
      properties:
        conid:
          description: Contract identifier for the interested contract.
          format: int32
          type: integer
        isBuy:
          default: true
          description: "Side of the market rules apply too. Set to true for Buy Orders,\
            \ set to false for Sell orders."
          type: boolean
        modifyOrder:
          default: false
          description: Used to find trading rules related to an existing order.
          type: boolean
        orderId:
          description: Specify the order identifier used for tracking a given order.
          format: int32
          type: integer
      type: object
    _iserver_contract__conid__info_and_rules_get_200_response:
      allOf:
      - $ref: '#/components/schemas/contractInfo'
      - properties:
          rules:
            $ref: '#/components/schemas/contractRules'
      example:
        cfi_code: cfi_code
        symbol: symbol
        cusip: cusip
        expiry_full: expiry_full
        con_id: 0
        maturity_date: maturity_date
        industry: industry
        rules:
          preview: true
          tifDefaults:
            TIF: TIF
            DEFAULT_ACCT: DEFAULT_ACCT
            SIZE: SIZE
            PMALGO: true
          increment: 1
          error: error
          displaySize: 2
          incrementDigits: 1
          canTradeAcctIds:
          - canTradeAcctIds
          - canTradeAcctIds
          incrementRules:
          - lowerEdge: 4
            increment: 7
          - lowerEdge: 4
            increment: 7
          algoEligible: true
          defaultSize: 0
          fraqInt: 7
          costReport: true
          forceOrderPreview: true
          ibAlgoTypes:
          - limit
          - limit
          overnightEligible: true
          limitPrice: 5
          cashQtyIncr: 9
          incrementType: 2
          sizeIncrement: 1
          orderOrigination: orderOrigination
          negativeCapable: true
          modTypes:
          - modTypes
          - modTypes
          priceMagnifier: 3
          cqtTypes:
          - limit
          - limit
          fraqTypes:
          - limit
          - limit
          stopPrice: 5
          orderDefaults:
            LMT:
              LP: LP
          tifTypes:
          - tifTypes
          - tifTypes
          cashCcy: cashCcy
          orderTypes:
          - limit
          - limit
          orderTypesOutside:
          - limit
          - limit
          cashSize: 6
          hasSecondary: true
        instrument_type: instrument_type
        trading_class: trading_class
        valid_exchanges: valid_exchanges
        allow_sell_long: true
        is_zero_commission_security: true
        local_symbol: local_symbol
        contract_clarification_type: contract_clarification_type
        classifier: classifier
        currency: currency
        text: text
        underlying_con_id: 6
        r_t_h: true
        multiplier: multiplier
        underlying_issuer: underlying_issuer
        contract_month: contract_month
        company_name: company_name
        smart_available: true
        exchange: exchange
        category: category
    _iserver_dynaccount_post_request:
      properties:
        acctId:
          description: The account ID that should be set for future requests.
          example: U1234567
          type: string
      required:
      - acctId
      type: object
    _iserver_exchangerate_get_200_response:
      example:
        rate: 0.8008281904610115
      properties:
        rate:
          description: Returns the exchange rate for the currency pair.
          type: number
    _iserver_marketdata_unsubscribe_post_request:
      properties:
        conid:
          description: The IB contract ID of the instrument whose market data feed
            is to be unsubscribed.
          example: 265598
          format: int32
          type: integer
      type: object
    _iserver_marketdata_unsubscribe_post_200_response:
      description: Acknowledges a successful request.
      example:
        success: true
      properties:
        success:
          description: The sole key 'success' will have boolean value true.
          type: boolean
      type: object
    _iserver_marketdata_unsubscribeall_get_200_response:
      description: Indicates a successful request to unsubscribe all streams.
      example:
        unsubscribed: true
      properties:
        unsubscribed:
          description: The sole key 'unsubscribed' will have boolean value true.
          type: boolean
      type: object
    _iserver_notification_post_request:
      properties:
        orderId:
          description: IB-assigned order identifier obtained from the ntf websocket
            message that delivered the server prompt.
          example: 987654321
          format: int32
          type: integer
        reqId:
          description: IB-assigned request identifier obtained from the ntf websocket
            message that delivered the server prompt.
          example: "12345"
          type: string
        text:
          description: The selected value from the "options" array delivered in the
            server prompt ntf websocket message.
          example: "Yes"
          type: string
      type: object
    _iserver_questions_suppress_post_request:
      properties:
        messageIds:
          description: Array of order reply messageId identifier strings to be suppressed.
          items:
            description: A single order reply message messageId.
            example: o354
            type: string
          type: array
      type: object
    _iserver_questions_suppress_post_200_response:
      description: Confirms successful reply to the server prompt.
      example:
        status: status
      properties:
        status:
          description: Confirms the successful suppression of specified messageIds.
            Always returns "Submitted".
          type: string
      type: object
    _iserver_questions_suppress_reset_post_200_response:
      description: Confirms successful removal of suppression.
      example:
        status: status
      properties:
        status:
          description: Confirms the successful removal of suppression. Always returns
            "Submitted".
          type: string
      type: object
    _iserver_reauthenticate_get_200_response:
      example:
        message: message
      properties:
        message:
          description: Indicates that the reauthenticate action was performed successfully.
          type: string
      type: object
    _iserver_reply__replyId__post_request:
      properties:
        confirmed:
          description: Value of true answers the question in the affirmative and proceeds
            with order submission.
          type: boolean
      type: object
    _iserver_reply__replyId__post_200_response:
      oneOf:
      - $ref: '#/components/schemas/orderSubmitSuccess'
      - $ref: '#/components/schemas/orderReplyMessage'
      - $ref: '#/components/schemas/orderSubmitError'
      - $ref: '#/components/schemas/advancedOrderReject'
    _iserver_secdef_search_post_request:
      properties:
        symbol:
          description: "The ticker symbol, bond issuer type, or company name of the\
            \ equity you are looking to trade."
          example: AAPL
          type: string
        secType:
          default: STK
          description: |
            Available underlying security types:
              * `STK` - Represents an underlying as a Stock security type.
              * `IND` - Represents an underlying as an Index security type.
              * `BOND` - Represents an underlying as a Bond security type.
          enum:
          - STK
          - IND
          - BOND
          type: string
        name:
          description: Denotes if the symbol value is the ticker symbol or part of
            the company's name.
          type: boolean
        more:
          type: boolean
        fund:
          description: fund search
          type: boolean
        fundFamilyConidEx:
          type: string
        pattern:
          description: pattern search
          type: boolean
        referrer:
          type: string
      required:
      - symbol
      type: object
    _iserver_secdef_strikes_get_200_response:
      example:
        call:
        - 0.8008281904610115
        - 0.8008281904610115
        put:
        - 6.027456183070403
        - 6.027456183070403
      properties:
        call:
          description: Array containing a series of comma separated values representing
            potential call strikes for the instrument.
          items:
            description: strike price
            type: number
          type: array
        put:
          description: Array containing a series of comma separated values representing
            potential put strikes for the instrument.
          items:
            description: strike price
            type: number
          type: array
    _iserver_watchlist_post_request:
      properties:
        id:
          description: "Must be a number, digits 0-9 only. Must be unique relative\
            \ to other watchlist IDs."
          type: string
        name:
          description: Arbitrary human-readable name to be displayed in TWS and Client
            Portal.
          type: string
        rows:
          description: "Array of JSON objects corresponding to watchlist rows, one\
            \ per instruments."
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
          uniqueItems: true
      required:
      - id
      - name
      - rows
      type: object
    _iserver_watchlist_post_200_response:
      example:
        instruments: []
        name: name
        readOnly: true
        id: id
        hash: hash
      properties:
        id:
          description: The submitted watchlist ID.
          type: string
        hash:
          description: IB's internal hash of the submitted watchlist.
          type: string
        name:
          description: The submitted human-readable watchlist name.
          type: string
        readOnly:
          description: Indicates whether watchlist is write-restricted. User-created
            watchlists will always show false.
          type: boolean
        instruments:
          description: Array will always be empty. Contents can be queried via GET
            /iserver/watchlist?id=
          items:
            type: string
          maxItems: 0
          type: array
      type: object
    _logout_post_200_response:
      example:
        status: true
      properties:
        status:
          description: Confirms that the logout action was performed successfully.
          type: boolean
      type: object
    _oauth_access_token_post_200_response:
      example:
        oauth_token: oauth_token
        oauth_token_secret: oauth_token_secret
        is_true: true
      properties:
        is_true:
          description: Indicates whether the authorizing username is paper or not.
          type: boolean
        oauth_token:
          description: Permanent OAuth access token for the consumer with respect
            to the authorizing username. 20 character hex value.
          type: string
        oauth_token_secret:
          description: OAuth token secret value. Base64-encoded string.
          type: string
      type: object
    _oauth_live_session_token_post_200_response:
      example:
        live_session_token_signature: live_session_token_signature
        diffie_hellman_challenge: diffie_hellman_challenge
        live_session_token_expiration: 0
      properties:
        diffie_hellman_challenge:
          description: Diffie-Hellman challenge value used to compute live session
            token locally by client.
          type: string
        live_session_token_signature:
          description: Signature value used to validate successful client-side computation
            of live session token.
          type: string
        live_session_token_expiration:
          description: Unix timestamp in milliseconds of time of live session token
            computation by IB. Live session tokens are valid for 24 hours from this
            time.
          format: int32
          type: integer
      type: object
    _oauth_request_token_post_200_response:
      example:
        oauth_token: oauth_token
      properties:
        oauth_token:
          description: Temporary OAuth access token. 20 character hex value.
          type: string
      type: object
    _pa_allperiods_post_request:
      properties:
        acctIds:
          description: An array of strings containing each account identifier to retrieve
            performance details for.
          items:
            type: string
          type: array
      type: object
    _pa_performance_post_request:
      properties:
        acctIds:
          description: An array of strings containing each account identifier to retrieve
            performance details for.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        period:
          default: 12M
          description: |
            Specify the period for which the account should be analyzed. Available period lengths:
              * `1D` - The last 24 hours.
              * `7D` - The last 7 full days.
              * `MTD` - Performance since the 1st of the month.
              * `1M` - A full calendar month from the last full trade day.
              * `3M` - 3 full calendar months from the last full trade day.
              * `6M` - 6 full calendar months from the last full trade day.
              * `12M` - 12 full calendar month from the last full trade day.
              * `YTD` - Performance since January 1st.
          enum:
          - 1D
          - 7D
          - MTD
          - 1M
          - 3M
          - 6M
          - 12M
          - YTD
          type: string
    _pa_transactions_post_request:
      properties:
        acctIds:
          description: Include each account ID as a string to receive data for.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        conids:
          description: |
            Include contract ID to receive data for.  Conids may be passed as integers or strings. Only supports one contract id at a time.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        currency:
          default: USD
          description: Define the currency to display price amounts with.
          type: string
        days:
          default: 90
          description: Specify the number of days to receive transaction data for.
          format: int32
          type: integer
    _portfolio__accountId__positions_invalidate_post_200_response:
      example:
        message: message
      properties:
        message:
          description: Indicates success or failure of request to discard cached positions.
          type: string
      type: object
    _trsrv_all_conids_get_200_response_inner:
      example:
        ticker: ticker
        conid: 0
        exchange: exchange
      properties:
        ticker:
          description: The ticker symbol of the contract.
          type: string
        conid:
          description: The contract identifier of the returned contract.
          format: int32
          type: integer
        exchange:
          description: The primary exchange of the returned contract.
          type: string
      type: object
    AccountCloseInstruction_withdrawalInfo:
      maxProperties: 2
      minProperties: 0
      properties:
        bankInstructionName:
          example: Bank Instruction Name
          maxLength: 150
          minLength: 1
          type: string
        bankInstructionMethod:
          enum:
          - ACH
          - WIRE
          - CHECK
          example: WIRE
          type: string
      required:
      - bankInstructionMethod
      - bankInstructionName
      type: object
    AchInstruction_clientAccountInfo:
      maxProperties: 4
      minProperties: 4
      properties:
        bankRoutingNumber:
          example: "202012983"
          maxLength: 24
          minLength: 1
          type: string
        bankAccountNumber:
          example: "-1811638121"
          maxLength: 32
          minLength: 1
          type: string
        bankName:
          example: JPM Chase
          maxLength: 100
          minLength: 1
          type: string
        bankAccountTypeCode:
          enum:
          - 0
          - 1
          - 2
          type: number
      required:
      - bankAccountNumber
      - bankAccountTypeCode
      - bankName
      - bankRoutingNumber
      type: object
    AvailableStatementDatesData_value_daily:
      example:
        endDate: endDate
        startDate: startDate
      properties:
        startDate:
          description: daily report start date
          type: string
        endDate:
          description: daily report end date
          type: string
      type: object
    AvailableStatementDatesData_value:
      example:
        daily:
          endDate: endDate
          startDate: startDate
        monthly:
        - monthly
        - monthly
        annual:
        - annual
        - annual
      properties:
        daily:
          $ref: '#/components/schemas/AvailableStatementDatesData_value_daily'
        monthly:
          description: monthly available reports
          items:
            type: string
          type: array
        annual:
          description: annual available reports
          items:
            type: string
          type: array
      type: object
    AvailableTaxFormsData_value:
      example:
        forms:
        - formats:
          - PDF
          - PDF
          taxFormName: "1099"
          isForm: true
        - formats:
          - PDF
          - PDF
          taxFormName: "1099"
          isForm: true
      properties:
        forms:
          description: available tax forms
          items:
            $ref: '#/components/schemas/TaxFormType'
          type: array
      type: object
    DepositFundsInstruction_iraDepositDetail:
      properties:
        iraContributionType:
          enum:
          - ROLLOVER
          - LATE_ROLLOVER
          - DIRECT_ROLLOVER
          - CONTRIBUTION
          - SPOUSAL_CONTRIBUTION
          - EMPLOYER_SEP_CONTRIBUTION
          example: ROLLOVER
          type: string
        iraTaxYearType:
          enum:
          - CURRENT
          - PRIOR
          example: CURRENT
          type: string
        fromIraType:
          enum:
          - NONE
          - TRADITIONAL
          - ROLLOVER
          - ROTH
          - SEP
          - EDUCATION
          - TRADITIONAL_INHERITED
          - ROTH_INHERITED
          - SEP_INHERITED
          - RETIREMENT_SAVING_PLAN
          - SPOUSAL_RETIREMENT_SAVING_PLAN
          - TAX_FREE_SAVING_ACCOUNT
          example: TRADITIONAL
          type: string
      required:
      - fromIraType
      - iraContributionType
      - iraTaxYearType
      type: object
    DepositFundsPollingResult_allOf_depositDetails:
      properties:
        amount:
          type: number
        currency:
          type: string
        whenAvailable:
          type: string
      required:
      - amount
      - currency
      - whenAvailable
      type: object
    GetParticipatingListResponse_participatingBanks:
      example:
        institutionName: WELAB BANK LIMITED
        clearingCode: "390"
        BIC: WEDIHKHHXXX
      properties:
        institutionName:
          example: WELAB BANK LIMITED
          type: string
        clearingCode:
          example: "390"
          type: string
        BIC:
          example: WEDIHKHHXXX
          type: string
      required:
      - BIC
      - clearingCode
      - institutionName
      type: object
    GetStatementsResponse_data:
      example:
        dataType: dataType
        gzip: true
        mimeType: mimeType
        encoding: encoding
        value: value
        accept: accept
      properties:
        dataType:
          description: the data type of the value after decoding
          type: string
        encoding:
          description: encoding used for the value
          type: string
        value:
          description: "Base 64 encoded String of byte[]. Byte[] represents compressed\
            \ data when gzip is true"
          type: string
        mimeType:
          description: mimeType of document after decoding and serializing the value
          type: string
        gzip:
          description: content encoding flag. Represents whether the response is compressed
          type: boolean
        accept:
          description: specify response media types that are acceptable
          type: string
      type: object
    PollingInstructionResult_error:
      example:
        errorMessage: errorMessage
        errorCode: errorCode
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
      required:
      - errorCode
      - errorMessage
      type: object
    PredefinedDestinationInstruction_financialInstitution:
      maxProperties: 5
      minProperties: 4
      properties:
        name:
          example: SBI BANK
          maxLength: 100
          minLength: 1
          type: string
        branchCode:
          maxLength: 32
          minLength: 0
          type: string
        branchCodeType:
          enum:
          - BSB_AUD
          - BANK_CODE_CAD
          - NONE
          type: string
        identifier:
          example: SBIN001000
          maxLength: 24
          minLength: 1
          type: string
        identifierType:
          example: IFSC
          maxLength: 16
          minLength: 1
          type: string
        clientAccountId:
          example: "132456789"
          maxLength: 32
          minLength: 1
          type: string
      required:
      - clientAccountId
      - identifier
      - identifierType
      - name
      type: object
    QueryIRAContributionsResult_allOf_contributions:
      properties:
        maximumContributionLimit:
          type: number
        yearToDateContribution:
          type: number
        allowedContributionLimit:
          type: number
      required:
      - allowedContributionLimit
      - maximumContributionLimit
      - yearToDateContribution
      type: object
    QueryRecentInstructionResult_allOf_instructionHistory_result:
      properties:
        clientInstructionId:
          type: number
        ibInstructionId:
          type: number
        instructionType:
          type: string
        requestDate:
          type: string
        status:
          type: string
        instructionSetId:
          type: number
      required:
      - clientInstructionId
      - ibInstructionId
      - instructionSetId
      - instructionType
      - requestDate
      - status
      type: object
    QueryRecentInstructionResult_allOf_instructionHistory:
      properties:
        historyMaxDepthNumberOfDays:
          format: int32
          type: integer
        historyMaxDepthNumberOfInstruction:
          format: int32
          type: integer
        result:
          $ref: '#/components/schemas/QueryRecentInstructionResult_allOf_instructionHistory_result'
      required:
      - historyMaxDepthNumberOfDays
      - historyMaxDepthNumberOfInstruction
      - result
      type: object
    QueryRecentInstructions_transactionHistory:
      properties:
        daysToGoBack:
          example: 5
          type: number
        transactionType:
          example: INTERNAL_CASH_TRANSFER
          type: string
      required:
      - daysToGoBack
      type: object
    WithdrawFundsInstruction_iraWithdrawalDetail:
      maxProperties: 4
      minProperties: 4
      properties:
        fedIncomeTaxPercentage:
          example: 12
          exclusiveMinimum: true
          minimum: 0
          type: number
        stateIncomeTaxPercentage:
          example: 10
          exclusiveMinimum: true
          minimum: 0
          type: number
        stateCd:
          example: TE
          maxLength: 2
          minLength: 1
          type: string
        iraWithholdType:
          enum:
          - DIRECT_ROLLOVER
          - ROTH_DISTRIBUTION
          - NORMAL
          - EARLY
          - DEATH
          - EXCESS_CY
          - EXCESS_PY
          - EXCESS_SC
          example: NORMAL
          type: string
      type: object
    accountAttributes_parent:
      description: Describes account relations in partitioned or multiplexed (segemented)
        account structures.
      example:
        accountId: accountId
        mmc:
        - mmc
        - mmc
        isMParent: true
        isMChild: true
        isMultiplex: true
      properties:
        mmc:
          description: Money manager client.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        accountId:
          description: Account ID of the parent account in a multiplex account structure.
          type: string
        isMChild:
          description: Indicates that the given account is a multiplex child account.
          type: boolean
        isMParent:
          description: Indicates that the given account is itself a multiplex parent
            account.
          type: boolean
        isMultiplex:
          description: Indicates that the account is a multiplex account.
          type: boolean
      type: object
    accountSummaryResponse_cashBalances_inner:
      example:
        settledCash: 6
        balance: 1
        currency: currency
      properties:
        currency:
          description: |
            The currency the values represent. Base currency represented as "Total (in {BaseCurrency})"
          type: string
        balance:
          description: The total available currency held in the account.
          format: int32
          type: integer
        settledCash:
          description: The available settled cash that can be withdrawn from the account.
          format: int32
          type: integer
      type: object
    availableFundsResponse_total:
      description: total values
      example:
        Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
        leverage: leverage
        overnight_excess: overnight_excess
        Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
        overnight_available: overnight_available
        day_trades_left: day_trades_left
        Lk Ahd Excss Lqdty: Lk Ahd Excss Lqdty
        current_available: current_available
        current_excess: current_excess
        Lk Ahd Nxt Chng: Lk Ahd Nxt Chng
        buying_power: buying_power
      properties:
        current_available:
          description: Describes currently avialable funds in your account for trading.
          type: string
        current_excess:
          description: Describes total value of the account.
          type: string
        Prdctd Pst-xpry Excss:
          description: Displays predicted post-expiration account value.
          type: string
        Lk Ahd Avlbl Fnds:
          description: This value reflects your available funds at the next margin
            change.
          type: string
        Lk Ahd Excss Lqdty:
          description: |
            * `Securities` - Equity with loan value. Look ahead maintenance margin.
             * `Commodities` - Net Liquidation value. Look ahead maintenance margin.
          type: string
        overnight_available:
          description: Describes available funds for overnight trading.
          type: string
        overnight_excess:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * `Securities` - Equivalent to regular trading\
            \ hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight\
            \ Maintenance margin.\n"
          type: string
        buying_power:
          description: Describes the total buying power of the account including existing
            balance with margin.
          type: string
        leverage:
          description: Describes the total combined leverage.
          type: string
        Lk Ahd Nxt Chng:
          description: Describes when the next 'Look Ahead' calculation will take
            place.
          type: string
        day_trades_left:
          description: Describes the number of trades remaining before flagging the
            Pattern Day Trader status. "Unlimited" is used for existing Pattern Day
            Traders.
          type: string
      type: object
    availableFundsResponse_securities:
      description: Contains an overview of Security specific fund values.
      example:
        Lk Ahd Avlbl Fnds: Lk Ahd Avlbl Fnds
        leverage: leverage
        overnight_excess: overnight_excess
        Prdctd Pst-xpry Excss: Prdctd Pst-xpry Excss
        overnight_available: overnight_available
        SMA: SMA
        Lk Ahd Excss Lqdty: Lk Ahd Excss Lqdty
        current_available: current_available
        current_excess: current_excess
      properties:
        current_available:
          description: Describes currently avialable funds in your account for trading.
          type: string
        current_excess:
          description: Describes total value of the account.
          type: string
        Prdctd Pst-xpry Excss:
          description: Displays predicted post-expiration account value.
          type: string
        SMA:
          type: string
        Lk Ahd Avlbl Fnds:
          description: This value reflects your available funds at the next margin
            change.
          type: string
        Lk Ahd Excss Lqdty:
          description: |
            * `Securities` - Equity with loan value. Look ahead maintenance margin.
             * `Commodities` - Net Liquidation value. Look ahead maintenance margin.
          type: string
        overnight_available:
          description: Describes available funds for overnight trading.
          type: string
        overnight_excess:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * `Securities` - Equivalent to regular trading\
            \ hours. \n   * `Commodities` - Commodities Net Liquidation value. Overnight\
            \ Maintenance margin.\n"
          type: string
        leverage:
          description: Describes the total combined leverage.
          type: string
      type: object
    bondFiltersResponse_bondFilters_inner_options_inner:
      example:
        text: text
        value: value
      properties:
        text:
          description: "In some instances, a text value will be returned, which indicates\
            \ the standardized value format such as plaintext dates, rather than solely\
            \ numerical values."
          type: string
        value:
          description: "Returns value directly correlating to the displayText key.\
            \ This may include exchange, maturity date, issue date, coupon, or currency."
          type: string
      required:
      - value
      type: object
    bondFiltersResponse_bondFilters_inner:
      example:
        displayText: Maturity Date
        columnId: 0
        options:
        - text: text
          value: value
        - text: text
          value: value
      properties:
        displayText:
          description: An identifier used to document returned options/values. This
            can be thought of as a key value.
          enum:
          - Maturity Date
          - Issue Date
          - Coupon
          - Currency
          type: string
        columnId:
          description: Used for user interfaces. Internal use only.
          format: int32
          type: integer
        options:
          description: Contains all objects with values corresponding to the parent
            displayText key.
          items:
            $ref: '#/components/schemas/bondFiltersResponse_bondFilters_inner_options_inner'
          type: array
      type: object
    brokerageSessionStatus_serverInfo:
      example:
        fail: fail
        serverVersion: serverVersion
        serverName: serverName
      properties:
        serverName:
          description: IBKR server information. Internal use only.
          type: string
        serverVersion:
          description: IBKR version information. Internal use only.
          type: string
        fail:
          description: Returns the reason for failing to retrieve authentication status.
          type: string
      type: object
    contractRules_orderDefaults_LMT:
      example:
        LP: LP
      properties:
        LP:
          description: Indicates a Limit Price default value.
          type: string
    contractRules_orderDefaults:
      description: Indicates default order type for the given security type.
      example:
        LMT:
          LP: LP
      properties:
        LMT:
          $ref: '#/components/schemas/contractRules_orderDefaults_LMT'
      type: object
    contractRules_tifDefaults:
      description: |
        Object containing details about your TIF value defaults. These defaults can be viewed and modified in TWS’s within the Global Configuration.
      example:
        TIF: TIF
        DEFAULT_ACCT: DEFAULT_ACCT
        SIZE: SIZE
        PMALGO: true
      properties:
        TIF:
          description: The default TIF type for orders.
          type: string
        SIZE:
          description: The default size value for orders.
          type: string
        DEFAULT_ACCT:
          description: default account (multi account only)
          type: string
        PMALGO:
          type: boolean
      type: object
    contractRules_incrementRules_inner:
      example:
        lowerEdge: 4
        increment: 7
      properties:
        lowerEdge:
          description: "If the current mark price of the instrument is at or above\
            \ the lower edge, the given increment value is used for order prices."
          format: int32
          type: integer
        increment:
          description: The price of the instrument must be submitted as a mulitple
            of the increment value.
          format: int32
          type: integer
      type: object
    currencyPairs_value_inner:
      properties:
        symbol:
          description: The official symbol of the given currency pair.
          type: string
        conid:
          description: The official contract identifier of the given currency pair.
          format: int32
          type: integer
        ccyPair:
          description: Returns the symbol counterpart.
          format: int32
          type: integer
      type: object
    detailedContractInformation_value_value_startNav:
      description: Returns the starting data for the current NAV details.
      properties:
        date:
          description: Returns the starting date for the current period's NAV range.
          type: string
        val:
          description: "Returns the inital NAV value of {Period Range} from the current\
            \ date."
          format: int32
          type: integer
      type: object
    detailedContractInformation_value_value:
      description: Returns the performance data for the given period value.
      properties:
        nav:
          description: Net asset value data for the account or consolidated accounts.
            NAV data is not applicable to benchmarks.
          items:
            type: number
          type: array
        cps:
          description: Returns the object containing the Cumulative performance data.
            Correlates to the same index position of data reutnred by the "nav" field.
          items:
            type: number
          type: array
        freq:
          description: Returns the determining frequency of the data range.
          type: string
        dates:
          description: Returns the dates corresponding to the frequency of data.
          items:
            type: string
          type: array
        startNav:
          $ref: '#/components/schemas/detailedContractInformation_value_value_startNav'
      type: object
    detailedContractInformation_value:
      additionalProperties:
        $ref: '#/components/schemas/detailedContractInformation_value_value'
      description: Contains the relevant performance data for the specified accountId.
      properties:
        lastSuccessfulUpdate:
          description: Returns the datetime in EST of the last successful call to
            the /pa endpoint.
          type: string
        start:
          description: Returns the start date of the request range.
          type: string
        periods:
          description: Returns the valid period values returned by the /pa/allperiods
            endpoint.
          items:
            type: string
          type: array
        end:
          description: Returns the end date of the request range.
          type: string
        baseCurrency:
          description: Clarifies the base currency of the primary accountId.
          type: string
      type: object
    dynAccountSearchResponse_matchedAccounts_inner:
      example:
        accountId: accountId
        alias: alias
        allocationId: allocationId
      properties:
        accountId:
          description: Returns a matching account ID that corresponds to the matching
            value.
          type: string
        alias:
          description: Returns the corresponding alias or alternative name for the
            specific account ID. May be a duplicate of the accountId value in most
            cases.
          type: string
        allocationId:
          description: Returns the allocation identifier used internally for the account.
          type: string
      type: object
    fyiSettings_inner:
      example:
        A: 0
        H: 6
        FN: FN
        FC: FC
        FD: FD
      properties:
        A:
          description: |
            Returns ony if the subscription can be disabled/enabled manually. See /fyi/settings/{typecode} for how to enable/disable.
          format: int32
          type: integer
        FC:
          description: Fyi code for enabling or disabling the notification.
          type: string
        H:
          description: Disclaimer if the notification was read.
          format: int32
          type: integer
        FD:
          description: Returns a detailed description of the topic.
          type: string
        FN:
          description: Returns a human readable title for the notification.
          type: string
      type: object
    individualPosition_displayRule_displayRuleStep_inner:
      description: A single display rule increment.
      example:
        lowerEdge: 4.145608029883936
        decimalDigits: 2
        wholeDigits: 7
      properties:
        decimalDigits:
          description: Number of decimal digits to display.
          format: int32
          type: integer
        lowerEdge:
          description: Lower edge from which the display rule is effective.
          type: number
        wholeDigits:
          description: Number of integer digits to display.
          format: int32
          type: integer
      type: object
    individualPosition_displayRule:
      description: Object defining minimum increments used in displaying market data
        for the instrument.
      example:
        magnification: 1
        displayRuleStep:
        - lowerEdge: 4.145608029883936
          decimalDigits: 2
          wholeDigits: 7
        - lowerEdge: 4.145608029883936
          decimalDigits: 2
          wholeDigits: 7
      properties:
        displayRuleStep:
          description: Array containing objects corresponding to display rule increments.
          items:
            $ref: '#/components/schemas/individualPosition_displayRule_displayRuleStep_inner'
          type: array
        magnification:
          description: "Magnifier applied to pricing, if applicable."
          format: int32
          type: integer
      type: object
    individualPosition_incrementRules_inner:
      description: Objects describing a single increment rule.
      example:
        increment: 1.0246457001441578
        lowerEdge: 1.4894159098541704
      properties:
        increment:
          description: The pricing increment.
          type: number
        lowerEdge:
          description: Lower edge from which the price increment rule is effective.
          type: number
      type: object
    iserverScannerParams_scan_type_list_inner:
      example:
        code: code
        instruments:
        - instruments
        - instruments
        display_name: display_name
      properties:
        display_name:
          description: Human readable name for the scanner “type”
          type: string
        code:
          description: Value used for the market scanner request.
          type: string
        instruments:
          description: Returns all instruments the scanner type can be used with.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    iserverScannerParams_instrument_list_inner:
      example:
        filters:
        - filters
        - filters
        display_name: display_name
        type: type
      properties:
        display_name:
          description: Human readable representation of the instrument type.
          type: string
        type:
          description: Value used for the market scanner request.
          type: string
        filters:
          description: Returns an array of all filters uniquely avaliable to that
            instrument type.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    iserverScannerParams_filter_list_inner_combo_values_inner:
      example:
        default: true
        vendor: "{}"
      properties:
        default:
          type: boolean
        vendor:
          type: object
      type: object
    iserverScannerParams_filter_list_inner:
      example:
        code: code
        display_name: display_name
        type: type
        group: group
        combo_values:
        - default: true
          vendor: "{}"
        - default: true
          vendor: "{}"
      properties:
        group:
          description: Returns the group of filters the request is affiliated with.
          type: string
        display_name:
          description: Returns the human-readable identifier for the filter.
          type: string
        code:
          description: Value used for the market scanner request.
          type: string
        type:
          description: "Returns the type of value to be used in the request. This\
            \ can indicate a range based value, or if it should be a single value."
          type: string
        combo_values:
          description: combo values when type equals to combo
          items:
            $ref: '#/components/schemas/iserverScannerParams_filter_list_inner_combo_values_inner'
          type: array
      type: object
    iserverScannerParams_location_tree_inner_locations_inner_locations_inner:
      example:
        display_name: display_name
        type: type
      properties:
        display_name:
          type: string
        type:
          type: string
      type: object
    iserverScannerParams_location_tree_inner_locations_inner:
      example:
        locations:
        - display_name: display_name
          type: type
        - display_name: display_name
          type: type
        display_name: display_name
        type: type
      properties:
        display_name:
          description: Returns the human-readable value of the market scanner’s location
            value.
          type: string
        type:
          description: Returns the code value of the market scanner location value.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/iserverScannerParams_location_tree_inner_locations_inner_locations_inner'
          type: array
      type: object
    iserverScannerParams_location_tree_inner:
      example:
        locations:
        - locations:
          - display_name: display_name
            type: type
          - display_name: display_name
            type: type
          display_name: display_name
          type: type
        - locations:
          - display_name: display_name
            type: type
          - display_name: display_name
            type: type
          display_name: display_name
          type: type
        display_name: display_name
        type: type
      properties:
        display_name:
          description: Returns the overarching instrument type to designate the location.
          type: string
        type:
          description: Returns the code value of the market scanner instrument type
            value.
          type: string
        locations:
          items:
            $ref: '#/components/schemas/iserverScannerParams_location_tree_inner_locations_inner'
          type: array
      type: object
    iserverScannerRunRequest_filter_inner_value:
      description: Value corresponding to the input for “code”.
      oneOf:
      - type: string
      - format: int32
        type: integer
      - type: boolean
      - type: number
    iserverScannerRunRequest_filter_inner:
      properties:
        code:
          description: Code value of the filter. Based on the “code” value within
            the “filter_list” section of the /iserver/scanner/params response.
          type: string
        value:
          $ref: '#/components/schemas/iserverScannerRunRequest_filter_inner_value'
      type: object
    iserverScannerRunResponse_contracts_inner:
      example:
        symbol: symbol
        conidex: conidex
        contract_description_1: contract_description_1
        sec_type: sec_type
        con_id: 0
        available_chart_periods: available_chart_periods
        company_name: company_name
        column_name: column_name
        listing_exchange: listing_exchange
        server_id: server_id
      properties:
        server_id:
          description: Contract’s index in relation to the market scanner type’s sorting
            priority.
          type: string
        column_name:
          description: Always returned for the first contract.
          type: string
        symbol:
          description: Returns the contract’s ticker symbol.
          type: string
        conidex:
          description: Returns the contract ID of the contract.
          type: string
        con_id:
          description: Returns the contract ID of the contract.
          format: int32
          type: integer
        available_chart_periods:
          description: Internal Use Only
          type: string
        company_name:
          description: Returns the company long name.
          type: string
        contract_description_1:
          description: "For derivatives like Futures, the local symbol of the contract\
            \ will be returned."
          type: string
        listing_exchange:
          description: Returns the primary listing exchange of the contract.
          type: string
        sec_type:
          description: Returns the security type of the contract.
          type: string
      type: object
    ledger_value:
      description: "Object describing the account's balances in its base currency,\
        \ by asset class and account segments. Will be duplicated by another object\
        \ in response bearing the currency's name."
      properties:
        acctcode:
          description: The Account ID of the requested account.
          type: string
        cashbalance:
          description: The given account's cash balance in this currency.
          type: number
        cashbalancefxsegment:
          description: "The given account's cash balance in its dedicated forex segment\
            \ in this currency, if applicable."
          type: number
        commoditymarketvalue:
          description: Market value of the given account's commodity positions in
            this currency.
          type: number
        corporatebondsmarketvalue:
          description: Market value of the given account's corporate bond positions
            in this currency.
          type: number
        currency:
          description: "Three-letter name of the currency reflected by this object,\
            \ or 'BASE' for the account's base currency."
          type: string
        dividends:
          description: The given account's receivable (not yet disbursed) dividend
            balance in this currency.
          type: number
        exchangerate:
          description: Exchange rate of this currency relative to the account's base
            currency.
          format: int32
          type: integer
        funds:
          description: The value of the given account's mutual fund holdings in this
            currency.
          type: number
        futuremarketvalue:
          description: Market value of the given account's futures positions in this
            currency.
          type: number
        futureoptionmarketvalue:
          description: Market value of the given account's futures options positions
            in this currency.
          type: number
        futuresonlypnl:
          description: PnL of the given account's futures positions in this currency.
          type: number
        interest:
          description: The given account's receivable interest balance in this currency.
          type: number
        issueroptionsmarketvalue:
          description: Market value of the given account's issuer options positions
            in this currency.
          type: number
        key:
          description: Identifies the nature of data. Always takes values 'LedgerList'.
          enum:
          - LedgerList
          type: string
        moneyfunds:
          description: The value of the given account's money market fund holdings
            in this currency.
          type: number
        netliquidationvalue:
          description: The given account's net liquidation value of positions in this
            currency.
          type: number
        realizedpnl:
          description: The given account's realized PnL for positions in this currency.
          type: number
        secondkey:
          description: Additional identifier of the currency reflected in this object.
            Always matches 'currency' field.
          type: string
        sessionid:
          format: int32
          type: integer
        settledcash:
          description: The given account's settled cash balance in this currency.
          type: number
        severity:
          format: int32
          type: integer
        stockmarketvalue:
          description: Market value of the given account's stock positions in this
            currency.
          type: number
        stockoptionmarketvalue:
          description: Market value of the given account's stock options positions
            in this currency.
          type: number
        tbillsmarketvalue:
          description: Market value of the given account's treasury bill positions
            in this currency.
          type: number
        tbondsmarketvalue:
          description: Market value of the given account's treasury bond positions
            in this currency.
          type: number
        timestamp:
          description: Timestamp of retrievable of this account ledger data.
          format: int32
          type: integer
        unrealizedpnl:
          description: The given account's unrealied PnL for positions in this currency.
          type: number
        warrantsmarketvalue:
          description: Market value of the given account's warrant positions in this
            currency.
          type: number
      type: object
    liveOrdersResponse_orders_inner:
      description: Object representing one order.
      example:
        remainingQuantity: remainingQuantity
        orderType: orderType
        fgColor: fgColor
        orderId: 0
        avgPrice: avgPrice
        companyName: companyName
        origOrderType: origOrderType
        secType: secType
        lastExecutionTime_r: lastExecutionTime_r
        filledQuantity: filledQuantity
        description1: description1
        isEventTrading: "0"
        bgColor: bgColor
        price: price
        supportsTaxOpt: "0"
        lastExecutionTime: lastExecutionTime
        timeInForce: timeInForce
        orderDesc: orderDesc
        conidex: conidex
        ticker: ticker
        side: side
        totalSize: totalSize
        order_ccp_status: order_ccp_status
        cashCcy: cashCcy
        exchange: exchange
        conid: conid
        totalCashSize: totalCashSize
        listingExchange: listingExchange
        acct: acct
        account: account
        sizeAndFills: sizeAndFills
        status: Inactive
      properties:
        acct:
          description: IB account ID to which the order was placed.
          type: string
        exchange:
          description: Routing destination of the order ticket.
          type: string
        conidex:
          description: Contract ID and routing destination in format 123456@EXCHANGE.
          type: string
        conid:
          description: Contract ID of the order's instrument.
          type: string
        account:
          description: IB account ID to which the order was placed.
          type: string
        orderId:
          description: IB-assigned order identifier.
          format: int32
          type: integer
        cashCcy:
          description: "Currency of the order ticket's Cash Quantity, if applicable."
          type: string
        sizeAndFills:
          description: Human-readable shorthand rendering of the filled and total
            quantities of the order.
          type: string
        orderDesc:
          description: Human-readable shorthand rendering of the order ticket.
          type: string
        description1:
          description: "Descriptive text, or additional details that specific the\
            \ instrument."
          type: string
        ticker:
          description: Symbol or base product code of the instrument.
          type: string
        secType:
          description: Asset class of the instrument.
          type: string
        listingExchange:
          description: Exchange on which the instrument is listed.
          type: string
        remainingQuantity:
          description: Quantity remaining to be filled in units of the instrument.
          type: string
        filledQuantity:
          description: Quantity filled in units of the instrument.
          type: string
        totalSize:
          description: Total size of an order in the instrument's units.
          type: string
        totalCashSize:
          description: Total size of a cash quantity order.
          type: string
        companyName:
          description: "Name of business associated with instrument, or otherwise\
            \ description of instrument."
          type: string
        status:
          description: Status of the order ticket.
          enum:
          - Inactive
          - PendingSubmit
          - PreSubmitted
          - Submitted
          - Filled
          - PendingCancel
          - Cancelled
          - WarnState
          type: string
        order_ccp_status:
          description: IB internal order status.
          type: string
        origOrderType:
          description: Order type of a filled order.
          type: string
        supportsTaxOpt:
          description: Indicates whether the order is supported by IB's Tax Optimization
            tool.
          enum:
          - "0"
          - "1"
          type: string
        lastExecutionTime:
          description: Time of last execution against the order in format YYMMDDhhmmss.
          type: string
        orderType:
          description: Order type of a working order ticket.
          type: string
        bgColor:
          description: Internal use. IB's UI background color in hex.
          type: string
        fgColor:
          description: Internal use. IB's UI foreground color in hex.
          type: string
        isEventTrading:
          description: Indicates whether the order ticket is an Event Trading order.
          enum:
          - "0"
          - "1"
          type: string
        price:
          description: "Price of the order, if applicable to the order type."
          type: string
        timeInForce:
          description: Time of force of the order.
          type: string
        lastExecutionTime_r:
          description: Unix timestamp of the last execution against the order.
          type: string
        side:
          description: Side of the order.
          type: string
        avgPrice:
          description: "Average price of fills against the order, if any."
          type: string
      type: object
    notificationReadAcknowledge_P:
      description: Returns details about the notification read status.
      example:
        R: 1
        ID: ID
      properties:
        R:
          description: Returns if the message was read (1) or unread (0).
          format: int32
          type: integer
        ID:
          description: Returns the ID for the notification.
          type: string
      type: object
    notifications_inner:
      example:
        R: R
        D: D
        MS: MS
        MD: MD
        ID: ID
        FC: FC
      properties:
        D:
          description: Notification date as an epoch string.
          type: string
        ID:
          description: Unique way to reference the notification.
          type: string
        FC:
          description: "FYI code, we can use it to find whether the disclaimer is\
            \ accepted or not in settings"
          type: string
        MD:
          description: Content of notification.
          type: string
        MS:
          description: Title of notification.
          type: string
        R:
          description: |
            Return if the notification was read or not. Value Format: 0: Disabled; 1: Enabled.
          type: string
      type: object
    orderPreview_amount:
      description: Describes the projected costs associated with the order ticket.
      example:
        amount: amount
        total: total
        commission: commission
      properties:
        amount:
          description: "Projected cost of the order, current reference price times\
            \ total quantity."
          type: string
        commission:
          description: Projected commissions and fees associated with the order.
          type: string
        total:
          description: Sum of projected cost and commission values for the order.
          type: string
      type: object
    orderPreview_equity:
      description: Describes the projected change to the account's equity.
      example:
        current: current
        change: change
        after: after
      properties:
        current:
          description: Current equity.
          type: string
        change:
          description: Difference between current and projected equity values.
          type: string
        after:
          description: Projected equity after execution of the order.
          type: string
      type: object
    orderPreview_initial:
      description: Describes the projected change to initial margin.
      example:
        current: current
        change: change
        after: after
      properties:
        current:
          description: Current initial margin.
          type: string
        change:
          description: Difference between current and projected initial margin values.
          type: string
        after:
          description: Projected initial margin after execution of the order.
          type: string
      type: object
    orderPreview_maintenance:
      description: Describes the projected change to maintenance margin.
      example:
        current: current
        change: change
        after: after
      properties:
        current:
          description: Current maintenance margin.
          type: string
        change:
          description: Difference between current and projected maintenance margin
            values.
          type: string
        after:
          description: Projected maintenance margin after execution of the order.
          type: string
      type: object
    orderPreview_position:
      description: Describes the projected change to the account's position in the
        instrument.
      example:
        current: current
        change: change
        after: after
      properties:
        current:
          description: Current position in the instrument.
          type: string
        change:
          description: Difference between current and projected position sizes.
          type: string
        after:
          description: Projected position size after execution of the order.
          type: string
      type: object
    orderReplyMessage_inner:
      description: An object containing order reply messages emitted against a single
        order ticket.
      properties:
        id:
          description: "The replyId UUID of the order ticket's emitted order reply\
            \ messages, used to confirm them and proceed."
          type: string
        isSuppressed:
          description: Internal use. Always delivers value 'false'.
          type: boolean
        message:
          description: An array containing the human-readable text of all order reply
            messages emitted for the order ticket.
          items:
            description: A single human-readable order reply message.
            type: string
          type: array
        messageIds:
          description: An array containing identifiers that categorize the types of
            order reply messages that have been emitted. Elements of this array are
            ordered so that indicies match the corresponding human-readable text strings
            in the 'message' array.
          items:
            description: A single messageId identifier.
            type: string
          type: array
      type: object
    orderSubmitSuccess_inner:
      description: Result of successful submission of one order ticket.
      example:
        order_status: order_status
        encrypt_message: encrypt_message
        order_id: order_id
      properties:
        order_id:
          description: The order ID assigned to your order ticket by IB. Contains
            only numerals.
          type: string
        order_status:
          description: Status describing where the order stands in its lifecycle.
          type: string
        encrypt_message:
          description: Internal use only.
          type: string
      type: object
    performanceResponse_nav_data_inner_startNAV:
      description: Returns the intiial NAV available.
      example:
        date: date
        val: 6
      properties:
        date:
          description: Returns the starting date for the request.
          type: string
        val:
          description: Returns the Net Asset Value of the account.
          format: int32
          type: integer
      type: object
    performanceResponse_nav_data_inner:
      example:
        idType: idType
        navs:
        - navs
        - navs
        start: start
        end: end
        id: id
        startNAV:
          date: date
          val: 6
        baseCurrency: baseCurrency
      properties:
        idType:
          description: Returns how identifiers are determined.
          type: string
        navs:
          description: Returns sequential data points corresponding to the net asset
            value between the "start" and "end" days.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        start:
          description: Returns the first available date for data.
          type: string
        end:
          description: Returns the end of the available frequency.
          type: string
        id:
          description: Returns the account identifier.
          type: string
        startNAV:
          $ref: '#/components/schemas/performanceResponse_nav_data_inner_startNAV'
        baseCurrency:
          description: Returns the base currency used in the account.
          type: string
      type: object
    performanceResponse_nav:
      description: Net asset value data for the account or consolidated accounts.
        NAV data is not applicable to benchmarks.
      example:
        data:
        - idType: idType
          navs:
          - navs
          - navs
          start: start
          end: end
          id: id
          startNAV:
            date: date
            val: 6
          baseCurrency: baseCurrency
        - idType: idType
          navs:
          - navs
          - navs
          start: start
          end: end
          id: id
          startNAV:
            date: date
            val: 6
          baseCurrency: baseCurrency
        freq: freq
        dates:
        - dates
        - dates
      properties:
        data:
          description: Contains the affiliated ‘nav’ data.
          items:
            $ref: '#/components/schemas/performanceResponse_nav_data_inner'
          type: array
        freq:
          description: Displays the values corresponding to a given frequency.
          type: string
        dates:
          description: "Returns the array of dates formatted as strings corresponding\
            \ to your frequency, the length should be same as the length of returns\
            \ inside data."
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    performanceResponse_cps_data_inner:
      example:
        idType: idType
        start: start
        end: end
        returns:
        - returns
        - returns
        id: id
        baseCurrency: baseCurrency
      properties:
        idType:
          description: Returns the key value of the request.
          type: string
        start:
          description: Returns the starting value of the value range.
          type: string
        end:
          description: Returns the ending value of the value range.
          type: string
        returns:
          description: Returns all cps values in order between the start and end times.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        id:
          description: Returns the account identifier.
          type: string
        baseCurrency:
          description: Returns the base curency for the account.
          type: string
      type: object
    performanceResponse_cps:
      description: Returns the object containing the Cumulative performance data.
      example:
        data:
        - idType: idType
          start: start
          end: end
          returns:
          - returns
          - returns
          id: id
          baseCurrency: baseCurrency
        - idType: idType
          start: start
          end: end
          returns:
          - returns
          - returns
          id: id
          baseCurrency: baseCurrency
        freq: freq
        dates:
        - dates
        - dates
      properties:
        data:
          description: Returns the array of cps data available.
          items:
            $ref: '#/components/schemas/performanceResponse_cps_data_inner'
          type: array
        freq:
          description: Returns the determining frequency of the data range.
          type: string
        dates:
          description: Returns the dates corresponding to the frequency of data.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    performanceResponse_tpps:
      description: Returns the time period performance data.
      example:
        data:
        - idType: idType
          start: start
          end: end
          returns:
          - returns
          - returns
          id: id
          baseCurrency: baseCurrency
        - idType: idType
          start: start
          end: end
          returns:
          - returns
          - returns
          id: id
          baseCurrency: baseCurrency
        freq: freq
        dates:
        - dates
        - dates
      properties:
        data:
          description: Object containing all data about tpps.
          items:
            $ref: '#/components/schemas/performanceResponse_cps_data_inner'
          type: array
        freq:
          description: Returns the determining frequency of the data range.
          type: string
        dates:
          description: Returns the dates corresponding to the frequency of data.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    pnlPartitionedResponse_upnl_U1234567_Core:
      description: The account or model's Profit and Loss.
      example:
        upl: 5
        rowType: 0
        dpl: 6
        el: 5
        mv: 2
        nl: 1
      properties:
        rowType:
          description: Returns the positional value of the returned account. Always
            returns 1 for individual accounts.
          format: int32
          type: integer
        dpl:
          description: Daily PnL for the specified account profile.
          format: int32
          type: integer
        nl:
          description: Net Liquidity for the specified account profile.
          format: int32
          type: integer
        upl:
          description: Unrealized PnL for the specified account profile.
          format: int32
          type: integer
        el:
          description: Excess Liquidity for the specified account profile.
          format: int32
          type: integer
        mv:
          description: Margin value for the specified account profile.
          format: int32
          type: integer
      type: object
    pnlPartitionedResponse_upnl:
      description: Refers to the U accounts PnL. This does reference Realized Profit
        and Loss.
      example:
        U1234567.Core:
          upl: 5
          rowType: 0
          dpl: 6
          el: 5
          mv: 2
          nl: 1
      properties:
        U1234567.Core:
          $ref: '#/components/schemas/pnlPartitionedResponse_upnl_U1234567_Core'
      type: object
    portfolioAllocations_assetClass:
      description: Object containing values of positions sorted by long/short and
        asset class.
      example:
        short:
          key: 6.027456183070403
        long:
          key: 0.8008281904610115
      properties:
        long:
          additionalProperties:
            description: Value of long position in account for specific asset class.
            type: number
          description: Object containing value of long positions in the account aggregated
            by asset class.
          type: object
        short:
          additionalProperties:
            description: Value of short positions in account for specfic asset class.
            type: number
          description: Object containing value of short positions in the account aggregated
            by asset class.
          type: object
      type: object
    portfolioAllocations_group:
      description: Object containing values of positions sorted by long/short and
        Sector Group.
      example:
        short:
          key: 5.962133916683182
        long:
          key: 1.4658129805029452
      properties:
        long:
          additionalProperties:
            description: Value of long positions in account for specfic Sector Group.
            type: number
          description: Object containing value of long positions in the account aggregated
            by Sector Group.
          type: object
        short:
          additionalProperties:
            description: Value of short positions in account for specfic Sector Group.
            type: number
          description: Object containing value of short positions in the account aggregated
            by Sector Group.
          type: object
      type: object
    portfolioAllocations_sector:
      description: Object containing values of positions sorted by long/short and
        Sector.
      example:
        short:
          key: 2.3021358869347655
        long:
          key: 5.637376656633329
      properties:
        long:
          additionalProperties:
            description: Value of long positions in account for specfic Sector.
            type: number
          description: Object containing value of long positions in the account aggregated
            by Sector.
          type: object
        short:
          additionalProperties:
            description: Value of short positions in account for specfic Sector.
            type: number
          description: Object containing value of short positions in the account aggregated
            by Sector.
          type: object
      type: object
    portfolioSummary_accountcode:
      allOf:
      - description: The Account ID of the requested account. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 0.8008281904610115
        isNull: true
        currency: 6.027456183070403
        value: value
        timestamp: 5
    portfolioSummary_accountready:
      allOf:
      - description: Indicates whether the account is fully open and tradable. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 5.637376656633329
        isNull: true
        currency: 2.3021358869347655
        value: value
        timestamp: 9
    portfolioSummary_accounttype:
      allOf:
      - description: "Identifies the type of client with which the account is associated,\
          \ such as an individual or LLC. (value)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 3.616076749251911
        isNull: true
        currency: 2.027123023002322
        value: value
        timestamp: 7
    portfolioSummary_accruedcash:
      allOf:
      - description: Amount of cash accrued (not yet disbursed) for all segments in
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 1.2315135367772556
        isNull: true
        currency: 1.0246457001441578
        value: value
        timestamp: 6
    portfolioSummary_accruedcash_c:
      allOf:
      - description: Amount of cash accrued (not yet disbursed) for the commodities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 7.457744773683766
        isNull: true
        currency: 1.1730742509559433
        value: value
        timestamp: 5
    portfolioSummary_accruedcash_s:
      allOf:
      - description: Amount of cash accrued (not yet disbursed) for the securities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 9.965781217890562
        isNull: true
        currency: 9.369310271410669
        value: value
        timestamp: 8
    portfolioSummary_accrueddividend:
      allOf:
      - description: Amount of dividends accrued (not yet disbursed) for all segments
          in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 9.018348186070783
        isNull: true
        currency: 6.438423552598547
        value: value
        timestamp: 6
    portfolioSummary_accrueddividend_c:
      allOf:
      - description: Amount of dividends accrued (not yet disbursed) for the commodities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 1.284659006116532
        isNull: true
        currency: 2.8841621266687802
        value: value
        timestamp: 6
    portfolioSummary_accrueddividend_s:
      allOf:
      - description: Amount of dividends accrued (not yet disbursed) for the securities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 5.944895607614016
        isNull: true
        currency: 6.704019297950036
        value: value
        timestamp: 3
    portfolioSummary_availablefunds:
      allOf:
      - description: Available funds (ELV minus Initial Margin) for all segments in
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 7.143538047012306
        isNull: true
        currency: 0.8851374739011653
        value: value
        timestamp: 6
    portfolioSummary_availablefunds_c:
      allOf:
      - description: Available funds (ELV minus Initial Margin) for the commodities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 0.10263654006109402
        isNull: true
        currency: 4.652396432933246
        value: value
        timestamp: 7
    portfolioSummary_availablefunds_s:
      allOf:
      - description: Available funds (ELV minus Initial Margin) for the securities
          segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 3.0205796992916243
        isNull: true
        currency: 3.0576100241049344
        value: value
        timestamp: 5
    portfolioSummary_availabletotrade:
      allOf:
      - description: Funds available for trading (ELV minus Initial Margin) for all
          segments in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 0
        amount: 3.2588565619047607
        isNull: true
        currency: 4.078845849666752
        value: value
        timestamp: 6
    portfolioSummary_availabletotrade_c:
      allOf:
      - description: Funds available for trading (ELV minus Initial Margin) for the
          commodities segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 4.258773108174356
        isNull: true
        currency: 1.041444916118296
        value: value
        timestamp: 7
    portfolioSummary_availabletotrade_s:
      allOf:
      - description: Funds available for trading (ELV minus Initial Margin) for the
          securities segment in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 9.132027271330688
        isNull: true
        currency: 0.8774076871421566
        value: value
        timestamp: 0
    portfolioSummary_availabletowithdraw:
      allOf:
      - description: Funds available for withdrawal for all segments in the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 7.933506881737151
        isNull: true
        currency: 5.507386964179881
        value: value
        timestamp: 6
    portfolioSummary_availabletowithdraw_c:
      allOf:
      - description: Funds available for withdrawal for the commodities segment in
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 8.251625748923757
        isNull: true
        currency: 4.459605034958679
        value: value
        timestamp: 0
    portfolioSummary_availabletowithdraw_s:
      allOf:
      - description: Funds available for withdrawal for the securities segment in
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 2.9409642974827896
        isNull: true
        currency: 1.7325933120207193
        value: value
        timestamp: 6
    portfolioSummary_billable:
      allOf:
      - description: Billable commissions for all segments in the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 4.573936264232251
        isNull: true
        currency: 8.863729185622827
        value: value
        timestamp: 1
    portfolioSummary_billable_c:
      allOf:
      - description: Billable commissions for the commodities segment in the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 3.502657762086401
        isNull: true
        currency: 9.183123594773994
        value: value
        timestamp: 0
    portfolioSummary_billable_s:
      allOf:
      - description: Billable commissions for the securities segment in the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 5.299143560275359
        isNull: true
        currency: 5.312489704336296
        value: value
        timestamp: 7
    portfolioSummary_buyingpower:
      allOf:
      - description: Buying power (maximum value of securities that can be bought
          without adding funds) for the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 3.7814124730767915
        isNull: true
        currency: 3.111202833403195
        value: value
        timestamp: 5
    portfolioSummary_columnprio_c:
      allOf:
      - description: columnprio-c
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 7.835035282970782
        isNull: true
        currency: 0.4768402382624515
        value: value
        timestamp: 2
    portfolioSummary_columnprio_s:
      allOf:
      - description: columnprio-s
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 3.804112695731078
        isNull: true
        currency: 8.675064425986758
        value: value
        timestamp: 0
    portfolioSummary_cushion:
      allOf:
      - description: "Margin cushion as a decimal ratio, (ELV-Maintenance)/ELV. (value)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 0.35262192099236644
        isNull: true
        currency: 7.203794749804894
        value: value
        timestamp: 2
    portfolioSummary_daytradesremaining:
      allOf:
      - description: Number of day trades currently still available for 4-day pattern
          day trader period. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 9.386524999783381
        isNull: true
        currency: 0.58919091925136
        value: value
        timestamp: 6
    portfolioSummary_daytradesremainingt_1:
      allOf:
      - description: Number of day trades available tomorrow for 4-day pattern day
          trader period. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 4.8789878742268815
        isNull: true
        currency: 6.966044574347761
        value: value
        timestamp: 1
    portfolioSummary_daytradesremainingt_2:
      allOf:
      - description: Number of day trades available in two days for 4-day pattern
          day trader period. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 1.2555055362323109
        isNull: true
        currency: 3.812761638325517
        value: value
        timestamp: 1
    portfolioSummary_daytradesremainingt_3:
      allOf:
      - description: Number of day trades available in three days for 4-day pattern
          day trader period. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 4.372688051310086
        isNull: true
        currency: 5.7911894223693885
        value: value
        timestamp: 3
    portfolioSummary_daytradesremainingt_4:
      allOf:
      - description: Number of day trades available in four days for 4-day pattern
          day trader period. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 1.0639121808530916
        isNull: true
        currency: 3.2841216543560217
        value: value
        timestamp: 7
    portfolioSummary_daytradingstatus_s:
      allOf:
      - description: daytradingstatus-s
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 7.726998920545485
        isNull: true
        currency: 7.92839742024475
        value: value
        timestamp: 1
    portfolioSummary_depositoncredithold:
      allOf:
      - description: Indicates whether a deposit is on credit hold. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 4.4935252719377825
        isNull: true
        currency: 3.209082285545927
        value: value
        timestamp: 2
    portfolioSummary_equitywithloanvalue:
      allOf:
      - description: Equity with Loan Value for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 9.146339979307802
        isNull: true
        currency: 4.010300976654761
        value: value
        timestamp: 6
    portfolioSummary_equitywithloanvalue_c:
      allOf:
      - description: Equity with Loan Value for the commodities segment of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 4.141296055235948
        isNull: true
        currency: 8.910869026866926
        value: value
        timestamp: 6
    portfolioSummary_equitywithloanvalue_s:
      allOf:
      - description: Equity with Loan Value for the securities segment of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 0.8411762798681321
        isNull: true
        currency: 2.9679475177256287
        value: value
        timestamp: 0
    portfolioSummary_excessliquidity:
      allOf:
      - description: Excess liquidity (ELV minus Maintenance Margin) for all segments
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 7.3842318535314
        isNull: true
        currency: 6.749525837406151
        value: value
        timestamp: 0
    portfolioSummary_excessliquidity_c:
      allOf:
      - description: Excess liquidity (ELV minus Maintenance Margin) for the commodities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 0.4867146239815201
        isNull: true
        currency: 9.456612101333725
        value: value
        timestamp: 7
    portfolioSummary_excessliquidity_s:
      allOf:
      - description: Excess liquidity (ELV minus Maintenance Margin) for the securities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 6.918231485891953
        isNull: true
        currency: 0.11859130807119977
        value: value
        timestamp: 0
    portfolioSummary_fullavailablefunds:
      allOf:
      - description: Full available funds for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 7.390706075830692
        isNull: true
        currency: 1.0502890910539986
        value: value
        timestamp: 2
    portfolioSummary_fullavailablefunds_c:
      allOf:
      - description: Full available funds (NLV minus Initial Margin) for the commodities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 4.1661834558007
        isNull: true
        currency: 2.026856458177285
        value: value
        timestamp: 5
    portfolioSummary_fullavailablefunds_s:
      allOf:
      - description: Full available funds (ELV minus Initial Margin) for the securities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 3.8156682252305574
        isNull: true
        currency: 1.9626702727164813
        value: value
        timestamp: 3
    portfolioSummary_fullexcessliquidity:
      allOf:
      - description: Full excess liquidity (ELV minus Maintenance Margin) for all
          segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 8.250639315618633
        isNull: true
        currency: 7.273019311111276
        value: value
        timestamp: 8
    portfolioSummary_fullexcessliquidity_c:
      allOf:
      - description: Full excess liquidity (ELV minus Maintenance Margin) for the
          commodities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 0.4008378390304357
        isNull: true
        currency: 2.5524281586707875
        value: value
        timestamp: 3
    portfolioSummary_fullexcessliquidity_s:
      allOf:
      - description: Full excess liquidity (ELV minus Maintenance Margin) for the
          securities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 5.726375546151009
        isNull: true
        currency: 9.721046668148785
        value: value
        timestamp: 7
    portfolioSummary_fullinitmarginreq:
      allOf:
      - description: Full Initial Margin requirement for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 7.129168897240568
        isNull: true
        currency: 6.370609851066415
        value: value
        timestamp: 9
    portfolioSummary_fullinitmarginreq_c:
      allOf:
      - description: Full Initial Margin requirement for the commodities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 8.768153453040833
        isNull: true
        currency: 2.684056218962324
        value: value
        timestamp: 1
    portfolioSummary_fullinitmarginreq_s:
      allOf:
      - description: Full Initial Margin requirement for the securities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 3.7846852362095262
        isNull: true
        currency: 9.007961177824221
        value: value
        timestamp: 4
    portfolioSummary_fullmaintmarginreq:
      allOf:
      - description: Full Maintenance Margin requirement for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 2.008994665592807
        isNull: true
        currency: 2.924533207692744
        value: value
        timestamp: 2
    portfolioSummary_fullmaintmarginreq_c:
      allOf:
      - description: Full Maintenance Margin requirement for the commodities segment
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 6.345503614942988
        isNull: true
        currency: 5.499986845135928
        value: value
        timestamp: 5
    portfolioSummary_fullmaintmarginreq_s:
      allOf:
      - description: Full Maintenance Margin requirement for the securities segment
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 0.7242789830362995
        isNull: true
        currency: 1.2786903972794905
        value: value
        timestamp: 2
    portfolioSummary_grosspositionvalue:
      allOf:
      - description: Gross Position Value (sum of Long and Short position values for
          stocks and options) for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 8.257837395465918
        isNull: true
        currency: 5.547564904556697
        value: value
        timestamp: 2
    portfolioSummary_grosspositionvalue_s:
      allOf:
      - description: grosspositionvalue-s
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 5.5569822283364845
        isNull: true
        currency: 5.412786966532157
        value: value
        timestamp: 4
    portfolioSummary_guarantee:
      allOf:
      - description: "For accounts that clear away, value of Guarantee for all segments\
          \ of the account. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 8.036294790673514
        isNull: true
        currency: 8.310924482277276
        value: value
        timestamp: 7
    portfolioSummary_guarantee_c:
      allOf:
      - description: "For accounts that clear away, value of Guarantee for the commodities\
          \ segment of the account. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 1.4793631642421967
        isNull: true
        currency: 2.719219329469812
        value: value
        timestamp: 7
    portfolioSummary_guarantee_s:
      allOf:
      - description: "For accounts that clear away, value of Guarantee for the securities\
          \ segment of the account. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 7.135782839148426
        isNull: true
        currency: 1.0348002257634148
        value: value
        timestamp: 4
    portfolioSummary_highestseverity:
      allOf:
      - description: highestseverity
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 1.1864130338603074
        isNull: true
        currency: 3.8601930294054942
        value: value
        timestamp: 1
    portfolioSummary_indianstockhaircut:
      allOf:
      - description: Indian Stock Haircut value for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 0
        amount: 4.5403315819302215
        isNull: true
        currency: 8.262575023052213
        value: value
        timestamp: 8
    portfolioSummary_indianstockhaircut_c:
      allOf:
      - description: Indian Stock Haircut value for the commodities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 5.616380282218067
        isNull: true
        currency: 9.966789814889403
        value: value
        timestamp: 6
    portfolioSummary_indianstockhaircut_s:
      allOf:
      - description: Indian Stock Haircut value for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 7.014147440046284
        isNull: true
        currency: 0.8972273556195443
        value: value
        timestamp: 1
    portfolioSummary_initmarginreq:
      allOf:
      - description: Initial Margin requirement for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 6.79368409560902
        isNull: true
        currency: 9.0012452339701
        value: value
        timestamp: 8
    portfolioSummary_initmarginreq_c:
      allOf:
      - description: Initial Margin requirement for the commodities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 6.460213024504889
        isNull: true
        currency: 6.8668894011844035
        value: value
        timestamp: 6
    portfolioSummary_initmarginreq_s:
      allOf:
      - description: Initial Margin requirement for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 0.6895265584691002
        isNull: true
        currency: 9.290244967928562
        value: value
        timestamp: 5
    portfolioSummary_leverage_s:
      allOf:
      - description: Leverage ratio (GPV/NLV) of the securities segment of the account.
          (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 8.331741856019029
        isNull: true
        currency: 7.6528347060559
        value: value
        timestamp: 8
    portfolioSummary_lookaheadavailablefunds:
      allOf:
      - description: Look-ahead Available Funds for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 0.29551818216563164
        isNull: true
        currency: 0.7370530802760489
        value: value
        timestamp: 9
    portfolioSummary_lookaheadavailablefunds_c:
      allOf:
      - description: Look-ahead Available Funds for the commodities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 7.541803065493349
        isNull: true
        currency: 7.437703257022269
        value: value
        timestamp: 7
    portfolioSummary_lookaheadavailablefunds_s:
      allOf:
      - description: Look-ahead Available Funds for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 1.6056289151258096
        isNull: true
        currency: 6.720288821326667
        value: value
        timestamp: 8
    portfolioSummary_lookaheadexcessliquidity:
      allOf:
      - description: Look-ahead Excess Liquidity for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 0.8164256701298711
        isNull: true
        currency: 4.13177941962639
        value: value
        timestamp: 0
    portfolioSummary_lookaheadexcessliquidity_c:
      allOf:
      - description: Look-ahead Excess Liquidity for the commodities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 0
        amount: 7.701777079007398
        isNull: true
        currency: 2.1871588311421153
        value: value
        timestamp: 4
    portfolioSummary_lookaheadexcessliquidity_s:
      allOf:
      - description: Look-ahead Excess Liquidity for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 6.936499209818381
        isNull: true
        currency: 4.035133329541982
        value: value
        timestamp: 3
    portfolioSummary_lookaheadinitmarginreq:
      allOf:
      - description: Look-ahead Intial Margin requirement (as of next margin period)
          for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 8.638367073739522
        isNull: true
        currency: 5.948961008630453
        value: value
        timestamp: 9
    portfolioSummary_lookaheadinitmarginreq_c:
      allOf:
      - description: Look-ahead Intial Margin requirement (as of next margin period)
          for the commodities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 8.81377937009168
        isNull: true
        currency: 4.39343993729625
        value: value
        timestamp: 4
    portfolioSummary_lookaheadinitmarginreq_s:
      allOf:
      - description: Look-ahead Intial Margin requirement (as of next margin period)
          for the securities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 7.321091499885957
        isNull: true
        currency: 7.686670838404092
        value: value
        timestamp: 6
    portfolioSummary_lookaheadmaintmarginreq:
      allOf:
      - description: Look-ahead Maintenance Margin requirement (as of next margin
          period) for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 3.8463127686084055
        isNull: true
        currency: 0.6052866655822231
        value: value
        timestamp: 4
    portfolioSummary_lookaheadmaintmarginreq_c:
      allOf:
      - description: Look-ahead Maintenance Margin requirement (as of next margin
          period) for the commodities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 4.075306827525243
        isNull: true
        currency: 2.674423984487264
        value: value
        timestamp: 6
    portfolioSummary_lookaheadmaintmarginreq_s:
      allOf:
      - description: Look-ahead Maintenance Margin requirement (as of next margin
          period) for the securities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 1.4985931822280574
        isNull: true
        currency: 7.338782761819433
        value: value
        timestamp: 0
    portfolioSummary_lookaheadnextchange:
      allOf:
      - description: Unix epoch timestamp in seconds of start of next margin period.
          (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 5.099298781640682
        isNull: true
        currency: 9.728706165995554
        value: value
        timestamp: 8
    portfolioSummary_maintmarginreq:
      allOf:
      - description: Maintenance Margin requirement for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 9.551762125042277
        isNull: true
        currency: 5.3152834658745505
        value: value
        timestamp: 4
    portfolioSummary_maintmarginreq_c:
      allOf:
      - description: Maintenance Margin requirement for the commodities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 2.4977456046390434
        isNull: true
        currency: 0.391063602337155
        value: value
        timestamp: 2
    portfolioSummary_maintmarginreq_s:
      allOf:
      - description: Maintenance Margin requirement for the securities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 2.9691650858515217
        isNull: true
        currency: 8.018039914932286
        value: value
        timestamp: 7
    portfolioSummary_netliquidation:
      allOf:
      - description: Net Liquidation Value (NLV) for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 6.090696483578148
        isNull: true
        currency: 9.852147203726787
        value: value
        timestamp: 1
    portfolioSummary_netliquidation_c:
      allOf:
      - description: Net Liquidation Value (sum of values of cash and commodities
          options) for the commodities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 1.822577900073098
        isNull: true
        currency: 5.083590215108117
        value: value
        timestamp: 2
    portfolioSummary_netliquidation_s:
      allOf:
      - description: "Net Liquidation Value (sum of values of cash, stocks, securities\
          \ options, bonds) for the securities segment of the account. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 9.693372334146686
        isNull: true
        currency: 2.6249013358703053
        value: value
        timestamp: 0
    portfolioSummary_netliquidationuncertainty:
      allOf:
      - description: Uncertainty of Net Liquidation Value associated with after-hours
          price changes. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 0
        amount: 7.224413148959403
        isNull: true
        currency: 1.633699845078339
        value: value
        timestamp: 4
    portfolioSummary_nlvandmargininreview:
      allOf:
      - description: Indicates whether the NLV and/or margin values for the account
          are in review. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 7.062107048540267
        isNull: true
        currency: 8.474710856151638
        value: value
        timestamp: 6
    portfolioSummary_pasharesvalue:
      allOf:
      - description: Personal Account shares value for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 6.711221582652969
        isNull: true
        currency: 5.305668385940959
        value: value
        timestamp: 6
    portfolioSummary_pasharesvalue_c:
      allOf:
      - description: Personal Account shares value for the commodities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 5.201737367852583
        isNull: true
        currency: 6.614319261836819
        value: value
        timestamp: 0
    portfolioSummary_pasharesvalue_s:
      allOf:
      - description: Personal Account shares value for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 3.0237995775442372
        isNull: true
        currency: 5.2388109661003055
        value: value
        timestamp: 3
    portfolioSummary_physicalcertificatevalue:
      allOf:
      - description: Physical Certificate value for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 1
        amount: 5.22975523929469
        isNull: true
        currency: 8.67132933794674
        value: value
        timestamp: 6
    portfolioSummary_physicalcertificatevalue_c:
      allOf:
      - description: Physical Certificate value for the commodities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 2.729215612801924
        isNull: true
        currency: 9.774932085941137
        value: value
        timestamp: 8
    portfolioSummary_physicalcertificatevalue_s:
      allOf:
      - description: Physical Certificate value for the securities segment of the
          account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 3.4925370028432345
        isNull: true
        currency: 3.4360986237728
        value: value
        timestamp: 8
    portfolioSummary_postexpirationexcess:
      allOf:
      - description: Projected at-expiration Excess Liquidity for all segments of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 3.6300678941289712
        isNull: true
        currency: 2.1305968583238744
        value: value
        timestamp: 2
    portfolioSummary_postexpirationexcess_c:
      allOf:
      - description: Projected at-expiration Excess Liquidity for the commodities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 8.128958126729998
        isNull: true
        currency: 8.897844438448299
        value: value
        timestamp: 5
    portfolioSummary_postexpirationexcess_s:
      allOf:
      - description: Projected at-expiration Excess Liquidity for the securities segment
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 2.4062866311545816
        isNull: true
        currency: 5.799021278474435
        value: value
        timestamp: 1
    portfolioSummary_postexpirationmargin:
      allOf:
      - description: Projected at-expiration margin requirement for all segments of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 8.776709848030322
        isNull: true
        currency: 9.576768325858186
        value: value
        timestamp: 2
    portfolioSummary_postexpirationmargin_c:
      allOf:
      - description: Projected at-expiration margin requirement for the commodities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 6.434791978928281
        isNull: true
        currency: 3.93938484566677
        value: value
        timestamp: 8
    portfolioSummary_postexpirationmargin_s:
      allOf:
      - description: Projected at-expiration margin requirement for the securities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 9.616627406338315
        isNull: true
        currency: 9.660013839736129
        value: value
        timestamp: 0
    portfolioSummary_previousdayequitywithloanvalue:
      allOf:
      - description: Previous day's Equity with Loan Value (as of 16:00 US Eastern)
          for all segments of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 6.232321224432258
        isNull: true
        currency: 9.511386032684477
        value: value
        timestamp: 7
    portfolioSummary_previousdayequitywithloanvalue_s:
      allOf:
      - description: Previous day's Equity with Loan Value (as of 16:00 US Eastern)
          for the securities segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 8.450344513152825
        isNull: true
        currency: 4.949269391876654
        value: value
        timestamp: 3
    portfolioSummary_regtequity:
      allOf:
      - description: Value of equity computed under Reg-T rules for all segments of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 7.466737793199883
        isNull: true
        currency: 5.41284683118604
        value: value
        timestamp: 9
    portfolioSummary_regtequity_s:
      allOf:
      - description: Value of equity computed under Reg-T rules for the securities
          segment of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 7.006584564525956
        isNull: true
        currency: 9.127829562770723
        value: value
        timestamp: 6
    portfolioSummary_regtmargin:
      allOf:
      - description: Margin computed under Reg-T rules for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 3.982133794311513
        isNull: true
        currency: 6.378183218175566
        value: value
        timestamp: 2
    portfolioSummary_regtmargin_s:
      allOf:
      - description: Margin computed under Reg-T rules for the securities segment
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 4
        amount: 0.17140212201104066
        isNull: true
        currency: 2.354928013202764
        value: value
        timestamp: 2
    portfolioSummary_segmenttitle_c:
      allOf:
      - description: Human-readable title of the commodities account segment to which
          the '-c' postfix character refers. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 5.7830383063264374
        isNull: true
        currency: 6.895551869522899
        value: value
        timestamp: 9
    portfolioSummary_segmenttitle_s:
      allOf:
      - description: Human-readable title of the securities account segment to which
          the '-s' postfix character refers. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 0
        amount: 4.3376880751882485
        isNull: true
        currency: 2.6951501062053085
        value: value
        timestamp: 0
    portfolioSummary_sma:
      allOf:
      - description: "Value of the Reg-T Special Memoradum Account for all account\
          \ segments, reflecting credit extended when the market value of the account's\
          \ positions increases. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 2
        amount: 8.42304692221817
        isNull: true
        currency: 1.9004860169272697
        value: value
        timestamp: 5
    portfolioSummary_sma_s:
      allOf:
      - description: "Value of the Reg-T Special Memoradum Account for the securities\
          \ account segment, reflecting credit extended when the market value of the\
          \ account's positions increases. (amount)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 9
        amount: 7.569248658043499
        isNull: true
        currency: 3.390745157937628
        value: value
        timestamp: 4
    portfolioSummary_totalcashvalue:
      allOf:
      - description: Total cash value for all segments of the account (cash balance
          plus Futures PnL). (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 2.7431796149713437
        isNull: true
        currency: 9.50383278592512
        value: value
        timestamp: 7
    portfolioSummary_totalcashvalue_c:
      allOf:
      - description: Cash value of Futures PnL for the commodities account segment.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 6.774773446112395
        isNull: true
        currency: 1.4846432231348183
        value: value
        timestamp: 5
    portfolioSummary_totalcashvalue_s:
      allOf:
      - description: Cash balance in the securities account segment. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 6.405285049610643
        isNull: true
        currency: 7.511806028923345
        value: value
        timestamp: 8
    portfolioSummary_totaldebitcardpendingcharges:
      allOf:
      - description: Total pending debit card charges for all segments of the account.
          (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 7
        amount: 9.587002134135785
        isNull: true
        currency: 5.801995216106667
        value: value
        timestamp: 9
    portfolioSummary_totaldebitcardpendingcharges_c:
      allOf:
      - description: Total pending debit card charges for the commodities segment
          of the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 8
        amount: 1.165800116953516
        isNull: true
        currency: 7.99596378710894
        value: value
        timestamp: 4
    portfolioSummary_totaldebitcardpendingcharges_s:
      allOf:
      - description: Total pending debit card charges for the securities segment of
          the account. (amount)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 3
        amount: 1.1424055936677446
        isNull: true
        currency: 4.798043284589512
        value: value
        timestamp: 3
    portfolioSummary_tradingtype_s:
      allOf:
      - description: "Identifier used internally to reflect the trading capabilities\
          \ of the account, with respect to asset classes. (value)"
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 5
        amount: 2.3351791640726405
        isNull: true
        currency: 6.670927598965964
        value: value
        timestamp: 7
    portfolioSummary_whatifpmenabled:
      allOf:
      - description: Indicates whether 'whatif' order preview functionality is enabled
          for a Portfolio-Margined account. (value)
        type: object
      - $ref: '#/components/schemas/portfolioSummaryValue'
      example:
        severity: 6
        amount: 8.456690786865144
        isNull: true
        currency: 7.280139268854917
        value: value
        timestamp: 1
    secdefSearchResponse_inner_sections_inner:
      example:
        months: months
        secType: secType
        exchange: exchange
      properties:
        secType:
          type: string
        months:
          description: semicolon separated list of months
          type: string
        exchange:
          description: semicolon separated list of exchanges
          type: string
      type: object
    secdefSearchResponse_inner_issuers_inner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
      type: object
    secdefSearchResponse_inner:
      example:
        symbol: symbol
        opt: opt
        bondid: 0
        companyHeader: companyHeader
        restricted: true
        fop: fop
        companyName: companyName
        description: description
        war: war
        conid: conid
        issuers:
        - name: name
          id: id
        - name: name
          id: id
        sections:
        - months: months
          secType: secType
          exchange: exchange
        - months: months
          secType: secType
          exchange: exchange
      properties:
        bondid:
          description: applicable for bonds
          format: int32
          type: integer
        conid:
          description: Contract identifier for the unique contract.
          type: string
        companyHeader:
          description: Company Name - Exchange
          type: string
        companyName:
          description: Formal name of the company.
          type: string
        symbol:
          description: Underlying ticker symbol.
          type: string
        description:
          description: Primary exchange of the contract
          type: string
        restricted:
          description: Returns if the contract is available for trading.
          nullable: true
          type: boolean
        fop:
          description: "Returns a string of dates, separated by semicolons."
          nullable: true
          type: string
        opt:
          description: "Returns a string of dates, separated by semicolons."
          nullable: true
          type: string
        war:
          description: "Returns a string of dates, separated by semicolons."
          nullable: true
          type: string
        sections:
          items:
            $ref: '#/components/schemas/secdefSearchResponse_inner_sections_inner'
          type: array
        issuers:
          items:
            $ref: '#/components/schemas/secdefSearchResponse_inner_issuers_inner'
          type: array
      type: object
    signatureAndOwners_applicant:
      example:
        signatures:
        - signatures
        - signatures
      properties:
        signatures:
          description: All names attached to the account
          items:
            type: string
          type: array
      type: object
    singleOrderSubmissionRequest_strategyParameters:
      description: "Parameters governing the selected algorithm, if applicable."
      properties:
        PLACEHOLDER:
          description: "Placeholder -- these vary by algo (and not always type string,\
            \ sometimes bool)"
          type: string
      type: object
    ssoValidateResponse_features:
      description: Returns supported features such as bonds and option trading.
      example:
        calendar: true
        realtime: true
        newMf: true
        envs: envs
        wlms: true
        bond: true
        optionChains: true
      properties:
        envs:
          description: Returns the connecting environment to distinguish production
            or paper.
          type: string
        wlms:
          description: Internal Use Only
          type: boolean
        realtime:
          description: Returns if realtime market data is available
          type: boolean
        bond:
          description: Returns if bonds can be traded.
          type: boolean
        optionChains:
          description: Returns if option chains can be retrieved in the account.
          type: boolean
        calendar:
          description: Returns if trading calendars are enabled
          type: boolean
        newMf:
          description: Internal Use Only
          type: boolean
      type: object
    stocks_value_inner_contracts_inner:
      properties:
        conid:
          description: Contract ID for the specific contract.
          format: int32
          type: integer
        exchange:
          description: Primary exchange for the given contract.
          type: string
        isUS:
          description: States whether the contract is hosted in the United States
            or not.
          type: boolean
      type: object
    stocks_value_inner:
      description: Contains a series of objects for each symbol that matches the requested
      properties:
        name:
          description: Full company name for the given contract.
          type: string
        chineseName:
          description: Chinese name for the given company as unicode.
          type: string
        assetClass:
          description: Asset class for the given company.
          type: string
        contracts:
          description: |
            A series of arrays pertaining to the same company listed by “name”. Typically differentiated based on currency of the primary exchange.
          items:
            $ref: '#/components/schemas/stocks_value_inner_contracts_inner'
          type: array
      type: object
    subAccounts_accounts_inner:
      example:
        data:
        - data
        - data
        name: name
      properties:
        data:
          description: Contains Net liquidation and available equity of the given
            account Id.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        name:
          description: Returns the account ID affiliated with the balance data.
          type: string
      type: object
    successfulTickleResponse_hmds:
      description: Returns connection details for the historical market data server.
      example:
        authStatus:
        - authStatus
        - authStatus
        error: error
      properties:
        error:
          description: Relays any internal connection errors.
          type: string
        authStatus:
          description: Returns authentication details.
          items:
            description: TODO default missing array inner type to string
            type: string
          properties:
            authenticated:
              description: Returns if the brokerage session is authenticated.
              type: boolean
            connected:
              description: Returns if the system is connected with HMDS
              type: boolean
          type: array
      type: object
    successfulTickleResponse_iserver:
      example:
        authStatus:
          competing: true
          connected: true
          authenticated: true
          serverInfo:
            fail: fail
            serverVersion: serverVersion
            serverName: serverName
          message: message
          MAC: MAC
      properties:
        authStatus:
          $ref: '#/components/schemas/brokerageSessionStatus'
      type: object
    summaryMarketValueResponse_currency:
      description: Returns an object containing market value details of the currency
        and positions held using that currency.
      example:
        cfd: cfd
        commodity: commodity
        total_cash: total_cash
        issuer_option: issuer_option
        t_bills: t_bills
        bonds: bonds
        settled_cash: settled_cash
        futures: futures
        Exchange Rate: Exchange Rate
        future_options: future_options
        MTD Interest: MTD Interest
        Govt Bonds: Govt Bonds
        warrants: warrants
        options: options
        mutual_funds: mutual_funds
        realized_pnl: realized_pnl
        funds: funds
        dividends_receivable: dividends_receivable
        Notional CFD: Notional CFD
        net_liquidation: net_liquidation
        unrealized_pnl: unrealized_pnl
        stock: stock
        money_market: money_market
      properties:
        total_cash:
          description: Lists the total cash held for the given currency.
          type: string
        settled_cash:
          description: "Cash recognized at the time of settlement minus the purchases\
            \ at time of trade, commissions, taxes, and fees."
          type: string
        MTD Interest:
          description: Total Month-to-date interest.
          type: string
        stock:
          description: Total cash value of stocks held.
          type: string
        options:
          description: Total cash value of options held.
          type: string
        futures:
          description: Total cash value of futures held.
          type: string
        future_options:
          description: Total cash value of future options held.
          type: string
        funds:
          description: Total cash value of funds held.
          type: string
        dividends_receivable:
          description: Total cash value of receivable dividends.
          type: string
        mutual_funds:
          description: Total cash value of mutual funds held.
          type: string
        money_market:
          description: Total cash value of money market securities held.
          type: string
        bonds:
          description: Total cash value of bonds held.
          type: string
        Govt Bonds:
          description: Total cash value of goverment bonds held.
          type: string
        t_bills:
          description: Total cash value of t-bill bonds held.
          type: string
        warrants:
          description: Total cash value of warrants held.
          type: string
        issuer_option:
          description: Total cash value of issuer options held.
          type: string
        commodity:
          description: Total cash value of commodities held.
          type: string
        Notional CFD:
          description: Total cash value of notional CFDs held.
          type: string
        cfd:
          description: Total cash value of CFDs held.
          type: string
        net_liquidation:
          description: Total cash value of your net liquidty.
          type: string
        unrealized_pnl:
          description: Total daily unrealized profit and loss.
          type: string
        realized_pnl:
          description: Total daily realized profit and loss.
          type: string
        Exchange Rate:
          description: Exchange rate of the labeled currency to the base currency.
          type: string
      type: object
    summaryOfAccountBalancesResponse_total:
      description: Contains total balance details for the account.
      example:
        equity_with_loan: equity_with_loan
        net_liquidation: net_liquidation
        Prvs Dy Eqty Wth Ln Vl: Prvs Dy Eqty Wth Ln Vl
        Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
        Nt Lqdtn Uncrtnty: Nt Lqdtn Uncrtnty
        sec_gross_pos_val: sec_gross_pos_val
        cash: cash
        MTD Interest: MTD Interest
      properties:
        net_liquidation:
          description: The basis for determining the price of the assets in your account.
          type: string
        Nt Lqdtn Uncrtnty:
          description: Displays the uncertainty of the Net Liquidating Value associated
            with after-hours price changes.
          type: string
        equity_with_loan:
          description: |
            * `Cash Accounts` Settled cash
             * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
          type: string
        Prvs Dy Eqty Wth Ln Vl:
          description: The accounts equity balance including loan value.
          type: string
        sec_gross_pos_val:
          description: "Equals the sum of the absolute value of all positions except\
            \ cash, index futures and US treasuries."
          type: string
        cash:
          description: Total cash balance in the account
          type: string
        MTD Interest:
          description: Total Month-to-date interest.
          type: string
        Pndng Dbt Crd Chrgs:
          description: Any pending charges for the IBKR debit account.
          type: string
      type: object
    summaryOfAccountBalancesResponse_commodities:
      description: Contains Commodity-specific balance details.
      example:
        equity_with_loan: equity_with_loan
        net_liquidation: net_liquidation
        Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
        cash: cash
        MTD Interest: MTD Interest
      properties:
        net_liquidation:
          description: The basis for determining the price of the assets in your account.
          type: string
        equity_with_loan:
          description: |
            * `Cash Accounts` Settled cash
             * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
          type: string
        cash:
          description: Total cash balance in the account
          type: string
        MTD Interest:
          description: Total Month-to-date interest.
          type: string
        Pndng Dbt Crd Chrgs:
          description: Any pending charges for the IBKR debit account.
          type: string
      type: object
    summaryOfAccountBalancesResponse_securities:
      description: Contains Security-specific balance details.
      example:
        equity_with_loan: equity_with_loan
        net_liquidation: net_liquidation
        Prvs Dy Eqty Wth Ln Vl: Prvs Dy Eqty Wth Ln Vl
        Pndng Dbt Crd Chrgs: Pndng Dbt Crd Chrgs
        sec_gross_pos_val: sec_gross_pos_val
        cash: cash
        MTD Interest: MTD Interest
      properties:
        net_liquidation:
          description: The basis for determining the price of the assets in your account.
          type: string
        equity_with_loan:
          description: |
            * `Cash Accounts` Settled cash
             * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
          type: string
        Prvs Dy Eqty Wth Ln Vl:
          description: The accounts equity balance including loan value.
          type: string
        sec_gross_pos_val:
          description: "Equals the sum of the absolute value of all positions except\
            \ cash, index futures and US treasuries."
          type: string
        cash:
          description: Total cash balance in the account
          type: string
        MTD Interest:
          description: Total Month-to-date interest.
          type: string
        Pndng Dbt Crd Chrgs:
          description: Any pending charges for the IBKR debit account.
          type: string
      type: object
    summaryOfAccountMarginResponse_total:
      example:
        Prjctd Lk Ahd Mntnnc Mrgn: Prjctd Lk Ahd Mntnnc Mrgn
        Prdctd Pst-xpry Mrgn @ Opn: Prdctd Pst-xpry Mrgn @ Opn
        projected_overnight_initial_margin: projected_overnight_initial_margin
        current_maint: current_maint
        projected_liquidity_inital_margin: projected_liquidity_inital_margin
        current_initial: current_initial
        Prjctd Ovrnght Mntnnc Mrgn: Prjctd Ovrnght Mntnnc Mrgn
      properties:
        current_initial:
          description: The minimum amount required to open a new position.
          type: string
        Prdctd Pst-xpry Mrgn @ Opn:
          description: Provides a projected “at expiration” margin value based on
            the soon-to-expire contracts in your portfolio.
          type: string
        current_maint:
          description: The amount of equity required to maintain your positions.
          type: string
        projected_liquidity_inital_margin:
          description: Provides a projected "liquid" initial margin value based on
            account liquidation value.
          type: string
        Prjctd Lk Ahd Mntnnc Mrgn:
          description: "If it is 3:00 pm ET, the next calculation you’re looking ahead\
            \ to is after the close, or the Overnight Initial Margin. If it’s 3:00\
            \ am ET, the next calculation will be at the market’s open.\n * `Securities`\
            \ – Projected maintenance margin requirement as of next period’s margin\
            \ change, in the base currency of the account. \n * `Commodities` – Maintenance\
            \ margin requirement as of next period’s margin change in the base currency\
            \ of the account based on current margin requirements, which are subject\
            \ to change. This value depends on when you are viewing your margin requirements.\n"
          type: string
        projected_overnight_initial_margin:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * Securities – Projected overnight initial\
            \ margin requirement in the base currency of the account. \n  * Commodities\
            \ – Overnight initial margin requirement in the base currency of the account\
            \ based on current margin requirements, which are subject to change.\n"
          type: string
        Prjctd Ovrnght Mntnnc Mrgn:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * `Securities` – Projected overnight maintenance\
            \ margin requirement in the base currency of the account. \n  * `Commodities`\
            \ – Overnight maintenance margin requirement in the base currency of the\
            \ account based on current margin requirements, which are subject to change.\n"
          type: string
    summaryOfAccountMarginResponse_securities:
      example:
        Prjctd Lk Ahd Mntnnc Mrgn: Prjctd Lk Ahd Mntnnc Mrgn
        Prdctd Pst-xpry Mrgn @ Opn: Prdctd Pst-xpry Mrgn @ Opn
        projected_overnight_initial_margin: projected_overnight_initial_margin
        current_maint: current_maint
        projected_liquidity_inital_margin: projected_liquidity_inital_margin
        current_initial: current_initial
        Prjctd Ovrnght Mntnnc Mrgn: Prjctd Ovrnght Mntnnc Mrgn
      properties:
        current_initial:
          description: The minimum amount required to open a new position.
          type: string
        Prdctd Pst-xpry Mrgn @ Opn:
          description: Provides a projected “at expiration” margin value based on
            the soon-to-expire contracts in your portfolio.
          type: string
        current_maint:
          description: The amount of equity required to maintain your positions.
          type: string
        projected_liquidity_inital_margin:
          description: Provides a projected "liquid" initial margin value based on
            account liquidation value.
          type: string
        Prjctd Lk Ahd Mntnnc Mrgn:
          description: "If it is 3:00 pm ET, the next calculation you’re looking ahead\
            \ to is after the close, or the Overnight Initial Margin. If it’s 3:00\
            \ am ET, the next calculation will be at the market’s open.\n * `Securities`\
            \ – Projected maintenance margin requirement as of next period’s margin\
            \ change, in the base currency of the account. \n * `Commodities` – Maintenance\
            \ margin requirement as of next period’s margin change in the base currency\
            \ of the account based on current margin requirements, which are subject\
            \ to change. This value depends on when you are viewing your margin requirements.\n"
          type: string
        projected_overnight_initial_margin:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * Securities – Projected overnight initial\
            \ margin requirement in the base currency of the account. \n  * Commodities\
            \ – Overnight initial margin requirement in the base currency of the account\
            \ based on current margin requirements, which are subject to change.\n"
          type: string
        Prjctd Ovrnght Mntnnc Mrgn:
          description: "Overnight refers to the window of time after the local market\
            \ trading day is closed. \n  * `Securities` – Projected overnight maintenance\
            \ margin requirement in the base currency of the account. \n  * `Commodities`\
            \ – Overnight maintenance margin requirement in the base currency of the\
            \ account based on current margin requirements, which are subject to change.\
            \  \n"
          type: string
    tradesResponse_inner:
      description: Object containing details of a single execution.
      example:
        symbol: symbol
        submitter: submitter
        conidEx: conidEx
        trade_time: trade_time
        liquidation_trade: "0"
        order_description: order_description
        clearing_name: clearing_name
        listing_exchange: listing_exchange
        order_ref: order_ref
        execution_id: execution_id
        clearing_id: clearing_id
        price: price
        supports_tax_opt: "0"
        commission: commission
        account_allocation_name: account_allocation_name
        side: B
        trade_time_r: 0
        accountCode: accountCode
        contract_description_1: contract_description_1
        is_event_trading: "0"
        size: 6.027456183070403
        sec_type: STK
        company_name: company_name
        exchange: exchange
        conid: conid
        net_amount: 1.4658129805029452
        account: account
      properties:
        execution_id:
          description: IB-assigned execution identifier.
          type: string
        symbol:
          description: Symbol of the instrument involved in the execution.
          type: string
        supports_tax_opt:
          description: Indicates whether the order is supported by IB's Tax Optimization
            tool.
          enum:
          - "0"
          - "1"
          type: string
        side:
          description: Side of the execution.
          enum:
          - B
          - S
          type: string
        order_description:
          description: Human-readable description of the outcome of the execution.
          type: string
        trade_time:
          description: UTC date and time of the execution in format YYYYMMDD-hh:mm:ss.
          type: string
        trade_time_r:
          description: Unix timestamp of the execution time in milliseconds.
          format: int32
          type: integer
        size:
          description: The size of the execution in units of the instrument.
          type: number
        price:
          description: The price at which the execution occurred.
          type: string
        order_ref:
          description: The client-provided customer order identifier. Specified via
            cOID during order submission in the Web API.
          type: string
        submitter:
          description: The IB username that originated the order ticket against which
            the execution occurred.
          type: string
        exchange:
          description: The exchange or other venue on which the execution occurred.
          type: string
        commission:
          description: Commissions incurred by the execution. May also include
          type: string
        net_amount:
          description: net_amount
          type: number
        account:
          description: The IB account ID of the account that received the execution.
          type: string
        accountCode:
          description: The IB account ID of the account that received the execution.
          type: string
        account_allocation_name:
          description: The IB account ID of the account that received the execution.
          type: string
        company_name:
          description: "Name of business associated with instrument, or otherwise\
            \ description of instrument."
          type: string
        contract_description_1:
          description: Human-readable description of the order's instrument.
          type: string
        sec_type:
          description: IB asset class identifier.
          enum:
          - STK
          - OPT
          - FUT
          - FOP
          - CASH
          - CRYPTO
          - BOND
          - WAR
          - FUND
          type: string
        listing_exchange:
          description: The primary exchange on which the instrument is listed.
          type: string
        conid:
          description: Contract ID of the order's instrument.
          type: string
        conidEx:
          description: Contract ID and routing destination in format 123456@EXCHANGE.
          type: string
        clearing_id:
          description: Identifier of the firm clearing the trade. Value is "IB" if
            account is cleared by Interactive Brokers.
          type: string
        clearing_name:
          description: Name of the firm clearing the trade. Value is "IB" if account
            is cleared by Interactive Brokers.
          type: string
        liquidation_trade:
          description: Indicates whether the trade is the result of a liquidiation
            by IB.
          enum:
          - "0"
          - "1"
          type: string
        is_event_trading:
          description: Indicates whether the order ticket is an Event Trading order.
          enum:
          - "0"
          - "1"
          type: string
      type: object
    tradingSchedule_inner:
      example:
        tradeVenueId: tradeVenueId
        timezone: timezone
        schedules:
        - schedules
        - schedules
        description: description
        exchange: exchange
        id: id
      properties:
        id:
          description: Exchange parameter id
          type: string
        tradeVenueId:
          description: Reference on a trade venue of given exchange parameter
          type: string
        exchange:
          description: short exchange name
          type: string
        description:
          description: exchange description
          type: string
        timezone:
          description: References the time zone corresponding to the listed dates
            and times.
          type: string
        schedules:
          description: Always contains at least one ‘tradingTime’ and zero or more
            ‘sessionTime’ tags
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
      type: object
    transactionsResponse_rpnl_items:
      example:
        date: date
        cur: cur
        fxRate: 1
        side: L
        acctid: acctid
        amt: amt
        conid: conid
      properties:
        date:
          description: Specifies the date for the transaction.
          type: string
        cur:
          description: Specifies the currency of the realized value.
          type: string
        fxRate:
          description: Returns the foreign exchnage rate.
          format: int32
          type: integer
        side:
          description: |
            Determines if the day was a loss or gain * `L` - LOSS * `G` - GAIN
          enum:
          - L
          - G
          type: string
        acctid:
          description: Returns the account ID the trade transacted on.
          type: string
        amt:
          description: Returns the amount gained or lost on the day.
          type: string
        conid:
          description: Returns the contract ID of the transaction.
          type: string
      type: object
    transactionsResponse_rpnl:
      description: Returns the object containing the realized pnl for the contract
        on the date.
      example:
        data:
        - data
        - data
        amt: amt
        items:
          date: date
          cur: cur
          fxRate: 1
          side: L
          acctid: acctid
          amt: amt
          conid: conid
      properties:
        data:
          description: Returns an array of realized pnl objects.
          items:
            description: TODO default missing array inner type to string
            type: string
          type: array
        items:
          $ref: '#/components/schemas/transactionsResponse_rpnl_items'
        amt:
          description: Provides the total amount gained or lost from all days returned
          type: string
      type: object
    transactionsResponse_transactions_inner:
      example:
        date: date
        cur: cur
        fxRate: 2
        pr: 7
        qty: 9
        acctid: acctid
        amt: 3
        conid: 2
        type: type
        desc: desc
      properties:
        date:
          description: Reutrns the human-readable datetime of the transaction.
          type: string
        cur:
          description: Returns the currency of the traded insturment.
          type: string
        fxRate:
          description: Returns the forex conversion rate.
          format: int32
          type: integer
        pr:
          description: Returns the price per share of the transaction.
          format: int32
          type: integer
        qty:
          description: |
            Returns the total quantity traded. Will display a negative value for sell orders, and a positive value for buy orders.
          format: int32
          type: integer
        acctid:
          description: Returns the account which made the transaction.
          type: string
        amt:
          description: Returns the total value of the trade.
          format: int32
          type: integer
        conid:
          description: Returns the contract identifier.
          format: int32
          type: integer
        type:
          description: Returns the order side.
          type: string
        desc:
          description: Returns the long name for the company.
          type: string
      type: object
    user_entity:
      description: Provide information about the particular entity
      example:
        firstName: firstName
        lastName: lastName
        entityName: entityName
        entityType: INDIVIDUAL
      properties:
        entityName:
          description: "The full entity's name, concatenating the first and last name\
            \ fields"
          type: string
        entityType:
          description: The type of entity assigned to the user
          enum:
          - INDIVIDUAL
          - Joint
          - ORG
          type: string
        firstName:
          description: The first name of the user
          type: string
        lastName:
          description: The last name of the user
          type: string
      type: object
    userAccountsResponse_acctProps_U1234567:
      example:
        hasChildAccounts: true
        supportsCashQty: true
        noFXConv: true
        isProp: true
        supportsFractions: true
        allowCustomerTime: true
      properties:
        hasChildAccounts:
          type: boolean
        supportsCashQty:
          type: boolean
        noFXConv:
          type: boolean
        isProp:
          type: boolean
        supportsFractions:
          type: boolean
        allowCustomerTime:
          type: boolean
      type: object
    userAccountsResponse_acctProps:
      description: Returns an json object for each accessible account’s properties.
      example:
        U1234567:
          hasChildAccounts: true
          supportsCashQty: true
          noFXConv: true
          isProp: true
          supportsFractions: true
          allowCustomerTime: true
      properties:
        U1234567:
          $ref: '#/components/schemas/userAccountsResponse_acctProps_U1234567'
      type: object
    userAccountsResponse_aliases:
      example:
        U1234567: U1234567
      properties:
        U1234567:
          type: string
      type: object
    userAccountsResponse_allowFeatures:
      example:
        allowEventContract: true
        allowMTA: true
        showGFIS: true
        showWebNews: true
        allowDynAccount: true
        allowEventTrading: true
        showImpactDashboard: true
        liteUser: true
        research: true
        allowedAssetTypes: allowedAssetTypes
        showEUCostReport: true
        allowCrypto: true
        allowTypeAhead: true
        allowFXConv: true
        allowFinancialLens: true
        debugPnl: true
        showTaxOpt: true
        snapshotRefreshTimeout: 30
      properties:
        showGFIS:
          type: boolean
        showEUCostReport:
          type: boolean
        allowEventContract:
          type: boolean
        allowFXConv:
          type: boolean
        allowFinancialLens:
          type: boolean
        allowMTA:
          type: boolean
        allowTypeAhead:
          type: boolean
        allowEventTrading:
          type: boolean
        snapshotRefreshTimeout:
          example: 30
          format: int64
          type: integer
        liteUser:
          type: boolean
        showWebNews:
          type: boolean
        research:
          type: boolean
        debugPnl:
          type: boolean
        showTaxOpt:
          type: boolean
        showImpactDashboard:
          type: boolean
        allowDynAccount:
          type: boolean
        allowCrypto:
          type: boolean
        allowedAssetTypes:
          type: string
      type: object
    userAccountsResponse_chartPeriods:
      example:
        CFD:
        - CFD
        - CFD
        CRYPTO:
        - CRYPTO
        - CRYPTO
        FUT:
        - FUT
        - FUT
        FUND:
        - FUND
        - FUND
        FOP:
        - FOP
        - FOP
        IOPT:
        - IOPT
        - IOPT
        PHYSS:
        - PHYSS
        - PHYSS
        WAR:
        - WAR
        - WAR
        STK:
        - STK
        - STK
        CMDTY:
        - CMDTY
        - CMDTY
        CASH:
        - CASH
        - CASH
        OPT:
        - OPT
        - OPT
        BOND:
        - BOND
        - BOND
        IND:
        - IND
        - IND
      properties:
        STK:
          items:
            type: string
          type: array
        CFD:
          items:
            type: string
          type: array
        OPT:
          items:
            type: string
          type: array
        FOP:
          items:
            type: string
          type: array
        WAR:
          items:
            type: string
          type: array
        IOPT:
          items:
            type: string
          type: array
        FUT:
          items:
            type: string
          type: array
        CASH:
          items:
            type: string
          type: array
        IND:
          items:
            type: string
          type: array
        BOND:
          items:
            type: string
          type: array
        FUND:
          items:
            type: string
          type: array
        CMDTY:
          items:
            type: string
          type: array
        PHYSS:
          items:
            type: string
          type: array
        CRYPTO:
          items:
            type: string
          type: array
      type: object
    userAccountsResponse_serverInfo:
      example:
        serverVersion: serverVersion
        serverName: serverName
      properties:
        serverName:
          type: string
        serverVersion:
          type: string
      type: object
    watchlistDeleteSuccess_data:
      example:
        deleted: deleted
      properties:
        deleted:
          description: Watchlist ID of the deleted watchlist.
          type: string
      type: object
    watchlistsResponse_data_user_lists_inner:
      description: Details of a single watchlist.
      example:
        is_open: true
        read_only: true
        name: name
        modified: 0
        id: id
        type: watchlist
      properties:
        is_open:
          description: Internal use. Indicates if the watchlist is currently in use.
          type: boolean
        read_only:
          description: Indicates if the watchlist can be edited.
          type: boolean
        name:
          description: Display name of the watchlist.
          type: string
        modified:
          description: Unix timestamp in milliseconds of the last modification of
            the watchlist.
          format: int32
          type: integer
        id:
          description: Watchlist ID of the watchlist.
          type: string
        type:
          description: Always has value 'watchlist'.
          enum:
          - watchlist
          type: string
      type: object
    watchlistsResponse_data:
      description: Contains the watchlist query results.
      example:
        scanners_only: true
        show_scanners: true
        bulk_delete: true
        user_lists:
        - is_open: true
          read_only: true
          name: name
          modified: 0
          id: id
          type: watchlist
        - is_open: true
          read_only: true
          name: name
          modified: 0
          id: id
          type: watchlist
      properties:
        scanners_only:
          description: Indicates if query results contain only market scanners.
          type: boolean
        show_scanners:
          description: Indicates if market scanners are included in query results.
          type: boolean
        bulk_delete:
          description: Indicates if username's watchlists can be bulk-deleted.
          type: boolean
        user_lists:
          description: Array of objects detailing the watchlists saved for the username
            in use in the current Web API session.
          items:
            $ref: '#/components/schemas/watchlistsResponse_data_user_lists_inner'
          type: array
      type: object
x-tagGroups:
- name: Trading
  tags:
  - Trading Accounts
  - Trading Alerts
  - Trading Contracts
  - Trading FA Allocation Management
  - Trading FYIs and Notifications
  - Trading Market Data
  - Trading OAuth 1.0a
  - Trading Orders
  - Trading Portfolio
  - Trading Portfolio Analyst
  - Trading Scanner
  - Trading Session
  - Trading Watchlists
  - Trading Websocket
- name: Authorization
  tags:
  - Authorization Token
  - Authorization SSO Sessions
- name: Account Management
  tags:
  - Account Management Accounts
  - Account Management Banking
  - Account Management Reports
  - Account Management Utilities
- name: Utilities
  tags:
  - Utilities Echo

