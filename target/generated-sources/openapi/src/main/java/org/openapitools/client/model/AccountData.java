/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class AccountData {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String accountId;

  public static final String SERIALIZED_NAME_MASTER_ACCOUNT_ID = "masterAccountId";
  @SerializedName(SERIALIZED_NAME_MASTER_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String masterAccountId;

  public static final String SERIALIZED_NAME_MAIN_ACCOUNT = "mainAccount";
  @SerializedName(SERIALIZED_NAME_MAIN_ACCOUNT)
  @javax.annotation.Nullable
  private String mainAccount;

  public static final String SERIALIZED_NAME_SOURCE_ACCOUNT_ID = "sourceAccountId";
  @SerializedName(SERIALIZED_NAME_SOURCE_ACCOUNT_ID)
  @javax.annotation.Nullable
  private String sourceAccountId;

  public static final String SERIALIZED_NAME_PRIMARY_USER = "primaryUser";
  @SerializedName(SERIALIZED_NAME_PRIMARY_USER)
  @javax.annotation.Nullable
  private String primaryUser;

  public static final String SERIALIZED_NAME_CLEARING_STATUS = "clearingStatus";
  @SerializedName(SERIALIZED_NAME_CLEARING_STATUS)
  @javax.annotation.Nullable
  private String clearingStatus;

  public static final String SERIALIZED_NAME_CLEARING_STATUS_DESCRIPTION = "clearingStatusDescription";
  @SerializedName(SERIALIZED_NAME_CLEARING_STATUS_DESCRIPTION)
  @javax.annotation.Nullable
  private String clearingStatusDescription;

  public static final String SERIALIZED_NAME_STATE_CODE = "stateCode";
  @SerializedName(SERIALIZED_NAME_STATE_CODE)
  @javax.annotation.Nullable
  private String stateCode;

  public static final String SERIALIZED_NAME_BASE_CURRENCY = "baseCurrency";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY)
  @javax.annotation.Nullable
  private String baseCurrency;

  public static final String SERIALIZED_NAME_DATE_BEGUN = "dateBegun";
  @SerializedName(SERIALIZED_NAME_DATE_BEGUN)
  @javax.annotation.Nullable
  private String dateBegun;

  public static final String SERIALIZED_NAME_DATE_APPROVED = "dateApproved";
  @SerializedName(SERIALIZED_NAME_DATE_APPROVED)
  @javax.annotation.Nullable
  private String dateApproved;

  public static final String SERIALIZED_NAME_DATE_OPENED = "dateOpened";
  @SerializedName(SERIALIZED_NAME_DATE_OPENED)
  @javax.annotation.Nullable
  private String dateOpened;

  public static final String SERIALIZED_NAME_DATE_FUNDED = "dateFunded";
  @SerializedName(SERIALIZED_NAME_DATE_FUNDED)
  @javax.annotation.Nullable
  private String dateFunded;

  public static final String SERIALIZED_NAME_DATE_CLOSED = "dateClosed";
  @SerializedName(SERIALIZED_NAME_DATE_CLOSED)
  @javax.annotation.Nullable
  private String dateClosed;

  public static final String SERIALIZED_NAME_DATE_LINKED = "dateLinked";
  @SerializedName(SERIALIZED_NAME_DATE_LINKED)
  @javax.annotation.Nullable
  private String dateLinked;

  public static final String SERIALIZED_NAME_DATE_DELINKED = "dateDelinked";
  @SerializedName(SERIALIZED_NAME_DATE_DELINKED)
  @javax.annotation.Nullable
  private String dateDelinked;

  public static final String SERIALIZED_NAME_ACCOUNT_TITLE = "accountTitle";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TITLE)
  @javax.annotation.Nullable
  private String accountTitle;

  public static final String SERIALIZED_NAME_OFFICIAL_TITLE = "officialTitle";
  @SerializedName(SERIALIZED_NAME_OFFICIAL_TITLE)
  @javax.annotation.Nullable
  private String officialTitle;

  public static final String SERIALIZED_NAME_ACCOUNT_ALIAS = "accountAlias";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ALIAS)
  @javax.annotation.Nullable
  private String accountAlias;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  @javax.annotation.Nullable
  private String emailAddress;

  public static final String SERIALIZED_NAME_MARGIN = "margin";
  @SerializedName(SERIALIZED_NAME_MARGIN)
  @javax.annotation.Nullable
  private String margin;

  public static final String SERIALIZED_NAME_APPLICANT_TYPE = "applicantType";
  @SerializedName(SERIALIZED_NAME_APPLICANT_TYPE)
  @javax.annotation.Nullable
  private String applicantType;

  public static final String SERIALIZED_NAME_SUB_TYPE = "subType";
  @SerializedName(SERIALIZED_NAME_SUB_TYPE)
  @javax.annotation.Nullable
  private String subType;

  public static final String SERIALIZED_NAME_STOCK_YIELD_PROGRAM = "stockYieldProgram";
  @SerializedName(SERIALIZED_NAME_STOCK_YIELD_PROGRAM)
  @javax.annotation.Nullable
  private Map<String, String> stockYieldProgram = new HashMap<>();

  public static final String SERIALIZED_NAME_FEE_TEMPLATE = "feeTemplate";
  @SerializedName(SERIALIZED_NAME_FEE_TEMPLATE)
  @javax.annotation.Nullable
  private Map<String, String> feeTemplate = new HashMap<>();

  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  @javax.annotation.Nullable
  private Map<String, Set<String>> capabilities = new HashMap<>();

  public static final String SERIALIZED_NAME_LIMITED_OPTION_TRADING = "limitedOptionTrading";
  @SerializedName(SERIALIZED_NAME_LIMITED_OPTION_TRADING)
  @javax.annotation.Nullable
  private String limitedOptionTrading;

  public static final String SERIALIZED_NAME_INVESTMENT_OBJECTIVES = "investmentObjectives";
  @SerializedName(SERIALIZED_NAME_INVESTMENT_OBJECTIVES)
  @javax.annotation.Nullable
  private Set<String> investmentObjectives = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String externalId;

  public static final String SERIALIZED_NAME_MIFID_CATEGORY = "mifidCategory";
  @SerializedName(SERIALIZED_NAME_MIFID_CATEGORY)
  @javax.annotation.Nullable
  private String mifidCategory;

  public static final String SERIALIZED_NAME_MIFIR_STATUS = "mifirStatus";
  @SerializedName(SERIALIZED_NAME_MIFIR_STATUS)
  @javax.annotation.Nullable
  private String mifirStatus;

  public static final String SERIALIZED_NAME_EQUITY = "equity";
  @SerializedName(SERIALIZED_NAME_EQUITY)
  @javax.annotation.Nullable
  private Double equity;

  public static final String SERIALIZED_NAME_HOUSEHOLD = "household";
  @SerializedName(SERIALIZED_NAME_HOUSEHOLD)
  @javax.annotation.Nullable
  private String household;

  public static final String SERIALIZED_NAME_PROPERTY_PROFILE = "propertyProfile";
  @SerializedName(SERIALIZED_NAME_PROPERTY_PROFILE)
  @javax.annotation.Nullable
  private String propertyProfile;

  public static final String SERIALIZED_NAME_PROCESS_TYPE = "processType";
  @SerializedName(SERIALIZED_NAME_PROCESS_TYPE)
  @javax.annotation.Nullable
  private String processType;

  public static final String SERIALIZED_NAME_RISK_SCORE = "riskScore";
  @SerializedName(SERIALIZED_NAME_RISK_SCORE)
  @javax.annotation.Nullable
  private Integer riskScore;

  public static final String SERIALIZED_NAME_CLASS_ACTION_PROGRAM = "class_action_program";
  @SerializedName(SERIALIZED_NAME_CLASS_ACTION_PROGRAM)
  @javax.annotation.Nullable
  private String classActionProgram;

  public static final String SERIALIZED_NAME_TRUST_TYPE = "trustType";
  @SerializedName(SERIALIZED_NAME_TRUST_TYPE)
  @javax.annotation.Nullable
  private String trustType;

  public static final String SERIALIZED_NAME_ORG_TYPE = "orgType";
  @SerializedName(SERIALIZED_NAME_ORG_TYPE)
  @javax.annotation.Nullable
  private String orgType;

  public static final String SERIALIZED_NAME_BUSINESS_DESCRIPTION = "businessDescription";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DESCRIPTION)
  @javax.annotation.Nullable
  private String businessDescription;

  public static final String SERIALIZED_NAME_US_TAX_PURPOSE_TYPE = "usTaxPurposeType";
  @SerializedName(SERIALIZED_NAME_US_TAX_PURPOSE_TYPE)
  @javax.annotation.Nullable
  private String usTaxPurposeType;

  public static final String SERIALIZED_NAME_TRADE_INTENTION_TYPE = "tradeIntentionType";
  @SerializedName(SERIALIZED_NAME_TRADE_INTENTION_TYPE)
  @javax.annotation.Nullable
  private String tradeIntentionType;

  public static final String SERIALIZED_NAME_REGISTERED_ADDRESS = "registeredAddress";
  @SerializedName(SERIALIZED_NAME_REGISTERED_ADDRESS)
  @javax.annotation.Nullable
  private Map<String, String> registeredAddress = new HashMap<>();

  public static final String SERIALIZED_NAME_MAILING = "mailing";
  @SerializedName(SERIALIZED_NAME_MAILING)
  @javax.annotation.Nullable
  private Map<String, String> mailing = new HashMap<>();

  public static final String SERIALIZED_NAME_COUNTRY_OF_CORPORATION = "countryOfCorporation";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_CORPORATION)
  @javax.annotation.Nullable
  private String countryOfCorporation;

  public static final String SERIALIZED_NAME_TAX_IDS = "taxIds";
  @SerializedName(SERIALIZED_NAME_TAX_IDS)
  @javax.annotation.Nullable
  private List<Map<String, String>> taxIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_TREATY_DETAILS = "taxTreatyDetails";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_DETAILS)
  @javax.annotation.Nullable
  private List<Map<String, String>> taxTreatyDetails = new ArrayList<>();

  public AccountData() {
  }

  public AccountData accountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nullable
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(@javax.annotation.Nullable String accountId) {
    this.accountId = accountId;
  }


  public AccountData masterAccountId(@javax.annotation.Nullable String masterAccountId) {
    this.masterAccountId = masterAccountId;
    return this;
  }

  /**
   * Get masterAccountId
   * @return masterAccountId
   */
  @javax.annotation.Nullable
  public String getMasterAccountId() {
    return masterAccountId;
  }

  public void setMasterAccountId(@javax.annotation.Nullable String masterAccountId) {
    this.masterAccountId = masterAccountId;
  }


  public AccountData mainAccount(@javax.annotation.Nullable String mainAccount) {
    this.mainAccount = mainAccount;
    return this;
  }

  /**
   * Get mainAccount
   * @return mainAccount
   */
  @javax.annotation.Nullable
  public String getMainAccount() {
    return mainAccount;
  }

  public void setMainAccount(@javax.annotation.Nullable String mainAccount) {
    this.mainAccount = mainAccount;
  }


  public AccountData sourceAccountId(@javax.annotation.Nullable String sourceAccountId) {
    this.sourceAccountId = sourceAccountId;
    return this;
  }

  /**
   * Get sourceAccountId
   * @return sourceAccountId
   */
  @javax.annotation.Nullable
  public String getSourceAccountId() {
    return sourceAccountId;
  }

  public void setSourceAccountId(@javax.annotation.Nullable String sourceAccountId) {
    this.sourceAccountId = sourceAccountId;
  }


  public AccountData primaryUser(@javax.annotation.Nullable String primaryUser) {
    this.primaryUser = primaryUser;
    return this;
  }

  /**
   * Get primaryUser
   * @return primaryUser
   */
  @javax.annotation.Nullable
  public String getPrimaryUser() {
    return primaryUser;
  }

  public void setPrimaryUser(@javax.annotation.Nullable String primaryUser) {
    this.primaryUser = primaryUser;
  }


  public AccountData clearingStatus(@javax.annotation.Nullable String clearingStatus) {
    this.clearingStatus = clearingStatus;
    return this;
  }

  /**
   * Get clearingStatus
   * @return clearingStatus
   */
  @javax.annotation.Nullable
  public String getClearingStatus() {
    return clearingStatus;
  }

  public void setClearingStatus(@javax.annotation.Nullable String clearingStatus) {
    this.clearingStatus = clearingStatus;
  }


  public AccountData clearingStatusDescription(@javax.annotation.Nullable String clearingStatusDescription) {
    this.clearingStatusDescription = clearingStatusDescription;
    return this;
  }

  /**
   * Get clearingStatusDescription
   * @return clearingStatusDescription
   */
  @javax.annotation.Nullable
  public String getClearingStatusDescription() {
    return clearingStatusDescription;
  }

  public void setClearingStatusDescription(@javax.annotation.Nullable String clearingStatusDescription) {
    this.clearingStatusDescription = clearingStatusDescription;
  }


  public AccountData stateCode(@javax.annotation.Nullable String stateCode) {
    this.stateCode = stateCode;
    return this;
  }

  /**
   * Get stateCode
   * @return stateCode
   */
  @javax.annotation.Nullable
  public String getStateCode() {
    return stateCode;
  }

  public void setStateCode(@javax.annotation.Nullable String stateCode) {
    this.stateCode = stateCode;
  }


  public AccountData baseCurrency(@javax.annotation.Nullable String baseCurrency) {
    this.baseCurrency = baseCurrency;
    return this;
  }

  /**
   * Get baseCurrency
   * @return baseCurrency
   */
  @javax.annotation.Nullable
  public String getBaseCurrency() {
    return baseCurrency;
  }

  public void setBaseCurrency(@javax.annotation.Nullable String baseCurrency) {
    this.baseCurrency = baseCurrency;
  }


  public AccountData dateBegun(@javax.annotation.Nullable String dateBegun) {
    this.dateBegun = dateBegun;
    return this;
  }

  /**
   * Get dateBegun
   * @return dateBegun
   */
  @javax.annotation.Nullable
  public String getDateBegun() {
    return dateBegun;
  }

  public void setDateBegun(@javax.annotation.Nullable String dateBegun) {
    this.dateBegun = dateBegun;
  }


  public AccountData dateApproved(@javax.annotation.Nullable String dateApproved) {
    this.dateApproved = dateApproved;
    return this;
  }

  /**
   * Get dateApproved
   * @return dateApproved
   */
  @javax.annotation.Nullable
  public String getDateApproved() {
    return dateApproved;
  }

  public void setDateApproved(@javax.annotation.Nullable String dateApproved) {
    this.dateApproved = dateApproved;
  }


  public AccountData dateOpened(@javax.annotation.Nullable String dateOpened) {
    this.dateOpened = dateOpened;
    return this;
  }

  /**
   * Get dateOpened
   * @return dateOpened
   */
  @javax.annotation.Nullable
  public String getDateOpened() {
    return dateOpened;
  }

  public void setDateOpened(@javax.annotation.Nullable String dateOpened) {
    this.dateOpened = dateOpened;
  }


  public AccountData dateFunded(@javax.annotation.Nullable String dateFunded) {
    this.dateFunded = dateFunded;
    return this;
  }

  /**
   * Get dateFunded
   * @return dateFunded
   */
  @javax.annotation.Nullable
  public String getDateFunded() {
    return dateFunded;
  }

  public void setDateFunded(@javax.annotation.Nullable String dateFunded) {
    this.dateFunded = dateFunded;
  }


  public AccountData dateClosed(@javax.annotation.Nullable String dateClosed) {
    this.dateClosed = dateClosed;
    return this;
  }

  /**
   * Get dateClosed
   * @return dateClosed
   */
  @javax.annotation.Nullable
  public String getDateClosed() {
    return dateClosed;
  }

  public void setDateClosed(@javax.annotation.Nullable String dateClosed) {
    this.dateClosed = dateClosed;
  }


  public AccountData dateLinked(@javax.annotation.Nullable String dateLinked) {
    this.dateLinked = dateLinked;
    return this;
  }

  /**
   * Get dateLinked
   * @return dateLinked
   */
  @javax.annotation.Nullable
  public String getDateLinked() {
    return dateLinked;
  }

  public void setDateLinked(@javax.annotation.Nullable String dateLinked) {
    this.dateLinked = dateLinked;
  }


  public AccountData dateDelinked(@javax.annotation.Nullable String dateDelinked) {
    this.dateDelinked = dateDelinked;
    return this;
  }

  /**
   * Get dateDelinked
   * @return dateDelinked
   */
  @javax.annotation.Nullable
  public String getDateDelinked() {
    return dateDelinked;
  }

  public void setDateDelinked(@javax.annotation.Nullable String dateDelinked) {
    this.dateDelinked = dateDelinked;
  }


  public AccountData accountTitle(@javax.annotation.Nullable String accountTitle) {
    this.accountTitle = accountTitle;
    return this;
  }

  /**
   * Get accountTitle
   * @return accountTitle
   */
  @javax.annotation.Nullable
  public String getAccountTitle() {
    return accountTitle;
  }

  public void setAccountTitle(@javax.annotation.Nullable String accountTitle) {
    this.accountTitle = accountTitle;
  }


  public AccountData officialTitle(@javax.annotation.Nullable String officialTitle) {
    this.officialTitle = officialTitle;
    return this;
  }

  /**
   * Get officialTitle
   * @return officialTitle
   */
  @javax.annotation.Nullable
  public String getOfficialTitle() {
    return officialTitle;
  }

  public void setOfficialTitle(@javax.annotation.Nullable String officialTitle) {
    this.officialTitle = officialTitle;
  }


  public AccountData accountAlias(@javax.annotation.Nullable String accountAlias) {
    this.accountAlias = accountAlias;
    return this;
  }

  /**
   * Get accountAlias
   * @return accountAlias
   */
  @javax.annotation.Nullable
  public String getAccountAlias() {
    return accountAlias;
  }

  public void setAccountAlias(@javax.annotation.Nullable String accountAlias) {
    this.accountAlias = accountAlias;
  }


  public AccountData emailAddress(@javax.annotation.Nullable String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(@javax.annotation.Nullable String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public AccountData margin(@javax.annotation.Nullable String margin) {
    this.margin = margin;
    return this;
  }

  /**
   * Get margin
   * @return margin
   */
  @javax.annotation.Nullable
  public String getMargin() {
    return margin;
  }

  public void setMargin(@javax.annotation.Nullable String margin) {
    this.margin = margin;
  }


  public AccountData applicantType(@javax.annotation.Nullable String applicantType) {
    this.applicantType = applicantType;
    return this;
  }

  /**
   * Get applicantType
   * @return applicantType
   */
  @javax.annotation.Nullable
  public String getApplicantType() {
    return applicantType;
  }

  public void setApplicantType(@javax.annotation.Nullable String applicantType) {
    this.applicantType = applicantType;
  }


  public AccountData subType(@javax.annotation.Nullable String subType) {
    this.subType = subType;
    return this;
  }

  /**
   * Get subType
   * @return subType
   */
  @javax.annotation.Nullable
  public String getSubType() {
    return subType;
  }

  public void setSubType(@javax.annotation.Nullable String subType) {
    this.subType = subType;
  }


  public AccountData stockYieldProgram(@javax.annotation.Nullable Map<String, String> stockYieldProgram) {
    this.stockYieldProgram = stockYieldProgram;
    return this;
  }

  public AccountData putStockYieldProgramItem(String key, String stockYieldProgramItem) {
    if (this.stockYieldProgram == null) {
      this.stockYieldProgram = new HashMap<>();
    }
    this.stockYieldProgram.put(key, stockYieldProgramItem);
    return this;
  }

  /**
   * Get stockYieldProgram
   * @return stockYieldProgram
   */
  @javax.annotation.Nullable
  public Map<String, String> getStockYieldProgram() {
    return stockYieldProgram;
  }

  public void setStockYieldProgram(@javax.annotation.Nullable Map<String, String> stockYieldProgram) {
    this.stockYieldProgram = stockYieldProgram;
  }


  public AccountData feeTemplate(@javax.annotation.Nullable Map<String, String> feeTemplate) {
    this.feeTemplate = feeTemplate;
    return this;
  }

  public AccountData putFeeTemplateItem(String key, String feeTemplateItem) {
    if (this.feeTemplate == null) {
      this.feeTemplate = new HashMap<>();
    }
    this.feeTemplate.put(key, feeTemplateItem);
    return this;
  }

  /**
   * Get feeTemplate
   * @return feeTemplate
   */
  @javax.annotation.Nullable
  public Map<String, String> getFeeTemplate() {
    return feeTemplate;
  }

  public void setFeeTemplate(@javax.annotation.Nullable Map<String, String> feeTemplate) {
    this.feeTemplate = feeTemplate;
  }


  public AccountData capabilities(@javax.annotation.Nullable Map<String, Set<String>> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public AccountData putCapabilitiesItem(String key, Set<String> capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new HashMap<>();
    }
    this.capabilities.put(key, capabilitiesItem);
    return this;
  }

  /**
   * Get capabilities
   * @return capabilities
   */
  @javax.annotation.Nullable
  public Map<String, Set<String>> getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(@javax.annotation.Nullable Map<String, Set<String>> capabilities) {
    this.capabilities = capabilities;
  }


  public AccountData limitedOptionTrading(@javax.annotation.Nullable String limitedOptionTrading) {
    this.limitedOptionTrading = limitedOptionTrading;
    return this;
  }

  /**
   * Get limitedOptionTrading
   * @return limitedOptionTrading
   */
  @javax.annotation.Nullable
  public String getLimitedOptionTrading() {
    return limitedOptionTrading;
  }

  public void setLimitedOptionTrading(@javax.annotation.Nullable String limitedOptionTrading) {
    this.limitedOptionTrading = limitedOptionTrading;
  }


  public AccountData investmentObjectives(@javax.annotation.Nullable Set<String> investmentObjectives) {
    this.investmentObjectives = investmentObjectives;
    return this;
  }

  public AccountData addInvestmentObjectivesItem(String investmentObjectivesItem) {
    if (this.investmentObjectives == null) {
      this.investmentObjectives = new LinkedHashSet<>();
    }
    this.investmentObjectives.add(investmentObjectivesItem);
    return this;
  }

  /**
   * Get investmentObjectives
   * @return investmentObjectives
   */
  @javax.annotation.Nullable
  public Set<String> getInvestmentObjectives() {
    return investmentObjectives;
  }

  public void setInvestmentObjectives(@javax.annotation.Nullable Set<String> investmentObjectives) {
    this.investmentObjectives = investmentObjectives;
  }


  public AccountData externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }


  public AccountData mifidCategory(@javax.annotation.Nullable String mifidCategory) {
    this.mifidCategory = mifidCategory;
    return this;
  }

  /**
   * Get mifidCategory
   * @return mifidCategory
   */
  @javax.annotation.Nullable
  public String getMifidCategory() {
    return mifidCategory;
  }

  public void setMifidCategory(@javax.annotation.Nullable String mifidCategory) {
    this.mifidCategory = mifidCategory;
  }


  public AccountData mifirStatus(@javax.annotation.Nullable String mifirStatus) {
    this.mifirStatus = mifirStatus;
    return this;
  }

  /**
   * Get mifirStatus
   * @return mifirStatus
   */
  @javax.annotation.Nullable
  public String getMifirStatus() {
    return mifirStatus;
  }

  public void setMifirStatus(@javax.annotation.Nullable String mifirStatus) {
    this.mifirStatus = mifirStatus;
  }


  public AccountData equity(@javax.annotation.Nullable Double equity) {
    this.equity = equity;
    return this;
  }

  /**
   * Get equity
   * @return equity
   */
  @javax.annotation.Nullable
  public Double getEquity() {
    return equity;
  }

  public void setEquity(@javax.annotation.Nullable Double equity) {
    this.equity = equity;
  }


  public AccountData household(@javax.annotation.Nullable String household) {
    this.household = household;
    return this;
  }

  /**
   * Get household
   * @return household
   */
  @javax.annotation.Nullable
  public String getHousehold() {
    return household;
  }

  public void setHousehold(@javax.annotation.Nullable String household) {
    this.household = household;
  }


  public AccountData propertyProfile(@javax.annotation.Nullable String propertyProfile) {
    this.propertyProfile = propertyProfile;
    return this;
  }

  /**
   * Get propertyProfile
   * @return propertyProfile
   */
  @javax.annotation.Nullable
  public String getPropertyProfile() {
    return propertyProfile;
  }

  public void setPropertyProfile(@javax.annotation.Nullable String propertyProfile) {
    this.propertyProfile = propertyProfile;
  }


  public AccountData processType(@javax.annotation.Nullable String processType) {
    this.processType = processType;
    return this;
  }

  /**
   * Get processType
   * @return processType
   */
  @javax.annotation.Nullable
  public String getProcessType() {
    return processType;
  }

  public void setProcessType(@javax.annotation.Nullable String processType) {
    this.processType = processType;
  }


  public AccountData riskScore(@javax.annotation.Nullable Integer riskScore) {
    this.riskScore = riskScore;
    return this;
  }

  /**
   * Get riskScore
   * @return riskScore
   */
  @javax.annotation.Nullable
  public Integer getRiskScore() {
    return riskScore;
  }

  public void setRiskScore(@javax.annotation.Nullable Integer riskScore) {
    this.riskScore = riskScore;
  }


  public AccountData classActionProgram(@javax.annotation.Nullable String classActionProgram) {
    this.classActionProgram = classActionProgram;
    return this;
  }

  /**
   * Get classActionProgram
   * @return classActionProgram
   */
  @javax.annotation.Nullable
  public String getClassActionProgram() {
    return classActionProgram;
  }

  public void setClassActionProgram(@javax.annotation.Nullable String classActionProgram) {
    this.classActionProgram = classActionProgram;
  }


  public AccountData trustType(@javax.annotation.Nullable String trustType) {
    this.trustType = trustType;
    return this;
  }

  /**
   * Get trustType
   * @return trustType
   */
  @javax.annotation.Nullable
  public String getTrustType() {
    return trustType;
  }

  public void setTrustType(@javax.annotation.Nullable String trustType) {
    this.trustType = trustType;
  }


  public AccountData orgType(@javax.annotation.Nullable String orgType) {
    this.orgType = orgType;
    return this;
  }

  /**
   * Get orgType
   * @return orgType
   */
  @javax.annotation.Nullable
  public String getOrgType() {
    return orgType;
  }

  public void setOrgType(@javax.annotation.Nullable String orgType) {
    this.orgType = orgType;
  }


  public AccountData businessDescription(@javax.annotation.Nullable String businessDescription) {
    this.businessDescription = businessDescription;
    return this;
  }

  /**
   * Get businessDescription
   * @return businessDescription
   */
  @javax.annotation.Nullable
  public String getBusinessDescription() {
    return businessDescription;
  }

  public void setBusinessDescription(@javax.annotation.Nullable String businessDescription) {
    this.businessDescription = businessDescription;
  }


  public AccountData usTaxPurposeType(@javax.annotation.Nullable String usTaxPurposeType) {
    this.usTaxPurposeType = usTaxPurposeType;
    return this;
  }

  /**
   * Get usTaxPurposeType
   * @return usTaxPurposeType
   */
  @javax.annotation.Nullable
  public String getUsTaxPurposeType() {
    return usTaxPurposeType;
  }

  public void setUsTaxPurposeType(@javax.annotation.Nullable String usTaxPurposeType) {
    this.usTaxPurposeType = usTaxPurposeType;
  }


  public AccountData tradeIntentionType(@javax.annotation.Nullable String tradeIntentionType) {
    this.tradeIntentionType = tradeIntentionType;
    return this;
  }

  /**
   * Get tradeIntentionType
   * @return tradeIntentionType
   */
  @javax.annotation.Nullable
  public String getTradeIntentionType() {
    return tradeIntentionType;
  }

  public void setTradeIntentionType(@javax.annotation.Nullable String tradeIntentionType) {
    this.tradeIntentionType = tradeIntentionType;
  }


  public AccountData registeredAddress(@javax.annotation.Nullable Map<String, String> registeredAddress) {
    this.registeredAddress = registeredAddress;
    return this;
  }

  public AccountData putRegisteredAddressItem(String key, String registeredAddressItem) {
    if (this.registeredAddress == null) {
      this.registeredAddress = new HashMap<>();
    }
    this.registeredAddress.put(key, registeredAddressItem);
    return this;
  }

  /**
   * Get registeredAddress
   * @return registeredAddress
   */
  @javax.annotation.Nullable
  public Map<String, String> getRegisteredAddress() {
    return registeredAddress;
  }

  public void setRegisteredAddress(@javax.annotation.Nullable Map<String, String> registeredAddress) {
    this.registeredAddress = registeredAddress;
  }


  public AccountData mailing(@javax.annotation.Nullable Map<String, String> mailing) {
    this.mailing = mailing;
    return this;
  }

  public AccountData putMailingItem(String key, String mailingItem) {
    if (this.mailing == null) {
      this.mailing = new HashMap<>();
    }
    this.mailing.put(key, mailingItem);
    return this;
  }

  /**
   * Get mailing
   * @return mailing
   */
  @javax.annotation.Nullable
  public Map<String, String> getMailing() {
    return mailing;
  }

  public void setMailing(@javax.annotation.Nullable Map<String, String> mailing) {
    this.mailing = mailing;
  }


  public AccountData countryOfCorporation(@javax.annotation.Nullable String countryOfCorporation) {
    this.countryOfCorporation = countryOfCorporation;
    return this;
  }

  /**
   * Get countryOfCorporation
   * @return countryOfCorporation
   */
  @javax.annotation.Nullable
  public String getCountryOfCorporation() {
    return countryOfCorporation;
  }

  public void setCountryOfCorporation(@javax.annotation.Nullable String countryOfCorporation) {
    this.countryOfCorporation = countryOfCorporation;
  }


  public AccountData taxIds(@javax.annotation.Nullable List<Map<String, String>> taxIds) {
    this.taxIds = taxIds;
    return this;
  }

  public AccountData addTaxIdsItem(Map<String, String> taxIdsItem) {
    if (this.taxIds == null) {
      this.taxIds = new ArrayList<>();
    }
    this.taxIds.add(taxIdsItem);
    return this;
  }

  /**
   * Get taxIds
   * @return taxIds
   */
  @javax.annotation.Nullable
  public List<Map<String, String>> getTaxIds() {
    return taxIds;
  }

  public void setTaxIds(@javax.annotation.Nullable List<Map<String, String>> taxIds) {
    this.taxIds = taxIds;
  }


  public AccountData taxTreatyDetails(@javax.annotation.Nullable List<Map<String, String>> taxTreatyDetails) {
    this.taxTreatyDetails = taxTreatyDetails;
    return this;
  }

  public AccountData addTaxTreatyDetailsItem(Map<String, String> taxTreatyDetailsItem) {
    if (this.taxTreatyDetails == null) {
      this.taxTreatyDetails = new ArrayList<>();
    }
    this.taxTreatyDetails.add(taxTreatyDetailsItem);
    return this;
  }

  /**
   * Get taxTreatyDetails
   * @return taxTreatyDetails
   */
  @javax.annotation.Nullable
  public List<Map<String, String>> getTaxTreatyDetails() {
    return taxTreatyDetails;
  }

  public void setTaxTreatyDetails(@javax.annotation.Nullable List<Map<String, String>> taxTreatyDetails) {
    this.taxTreatyDetails = taxTreatyDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountData accountData = (AccountData) o;
    return Objects.equals(this.accountId, accountData.accountId) &&
        Objects.equals(this.masterAccountId, accountData.masterAccountId) &&
        Objects.equals(this.mainAccount, accountData.mainAccount) &&
        Objects.equals(this.sourceAccountId, accountData.sourceAccountId) &&
        Objects.equals(this.primaryUser, accountData.primaryUser) &&
        Objects.equals(this.clearingStatus, accountData.clearingStatus) &&
        Objects.equals(this.clearingStatusDescription, accountData.clearingStatusDescription) &&
        Objects.equals(this.stateCode, accountData.stateCode) &&
        Objects.equals(this.baseCurrency, accountData.baseCurrency) &&
        Objects.equals(this.dateBegun, accountData.dateBegun) &&
        Objects.equals(this.dateApproved, accountData.dateApproved) &&
        Objects.equals(this.dateOpened, accountData.dateOpened) &&
        Objects.equals(this.dateFunded, accountData.dateFunded) &&
        Objects.equals(this.dateClosed, accountData.dateClosed) &&
        Objects.equals(this.dateLinked, accountData.dateLinked) &&
        Objects.equals(this.dateDelinked, accountData.dateDelinked) &&
        Objects.equals(this.accountTitle, accountData.accountTitle) &&
        Objects.equals(this.officialTitle, accountData.officialTitle) &&
        Objects.equals(this.accountAlias, accountData.accountAlias) &&
        Objects.equals(this.emailAddress, accountData.emailAddress) &&
        Objects.equals(this.margin, accountData.margin) &&
        Objects.equals(this.applicantType, accountData.applicantType) &&
        Objects.equals(this.subType, accountData.subType) &&
        Objects.equals(this.stockYieldProgram, accountData.stockYieldProgram) &&
        Objects.equals(this.feeTemplate, accountData.feeTemplate) &&
        Objects.equals(this.capabilities, accountData.capabilities) &&
        Objects.equals(this.limitedOptionTrading, accountData.limitedOptionTrading) &&
        Objects.equals(this.investmentObjectives, accountData.investmentObjectives) &&
        Objects.equals(this.externalId, accountData.externalId) &&
        Objects.equals(this.mifidCategory, accountData.mifidCategory) &&
        Objects.equals(this.mifirStatus, accountData.mifirStatus) &&
        Objects.equals(this.equity, accountData.equity) &&
        Objects.equals(this.household, accountData.household) &&
        Objects.equals(this.propertyProfile, accountData.propertyProfile) &&
        Objects.equals(this.processType, accountData.processType) &&
        Objects.equals(this.riskScore, accountData.riskScore) &&
        Objects.equals(this.classActionProgram, accountData.classActionProgram) &&
        Objects.equals(this.trustType, accountData.trustType) &&
        Objects.equals(this.orgType, accountData.orgType) &&
        Objects.equals(this.businessDescription, accountData.businessDescription) &&
        Objects.equals(this.usTaxPurposeType, accountData.usTaxPurposeType) &&
        Objects.equals(this.tradeIntentionType, accountData.tradeIntentionType) &&
        Objects.equals(this.registeredAddress, accountData.registeredAddress) &&
        Objects.equals(this.mailing, accountData.mailing) &&
        Objects.equals(this.countryOfCorporation, accountData.countryOfCorporation) &&
        Objects.equals(this.taxIds, accountData.taxIds) &&
        Objects.equals(this.taxTreatyDetails, accountData.taxTreatyDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, masterAccountId, mainAccount, sourceAccountId, primaryUser, clearingStatus, clearingStatusDescription, stateCode, baseCurrency, dateBegun, dateApproved, dateOpened, dateFunded, dateClosed, dateLinked, dateDelinked, accountTitle, officialTitle, accountAlias, emailAddress, margin, applicantType, subType, stockYieldProgram, feeTemplate, capabilities, limitedOptionTrading, investmentObjectives, externalId, mifidCategory, mifirStatus, equity, household, propertyProfile, processType, riskScore, classActionProgram, trustType, orgType, businessDescription, usTaxPurposeType, tradeIntentionType, registeredAddress, mailing, countryOfCorporation, taxIds, taxTreatyDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountData {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    masterAccountId: ").append(toIndentedString(masterAccountId)).append("\n");
    sb.append("    mainAccount: ").append(toIndentedString(mainAccount)).append("\n");
    sb.append("    sourceAccountId: ").append(toIndentedString(sourceAccountId)).append("\n");
    sb.append("    primaryUser: ").append(toIndentedString(primaryUser)).append("\n");
    sb.append("    clearingStatus: ").append(toIndentedString(clearingStatus)).append("\n");
    sb.append("    clearingStatusDescription: ").append(toIndentedString(clearingStatusDescription)).append("\n");
    sb.append("    stateCode: ").append(toIndentedString(stateCode)).append("\n");
    sb.append("    baseCurrency: ").append(toIndentedString(baseCurrency)).append("\n");
    sb.append("    dateBegun: ").append(toIndentedString(dateBegun)).append("\n");
    sb.append("    dateApproved: ").append(toIndentedString(dateApproved)).append("\n");
    sb.append("    dateOpened: ").append(toIndentedString(dateOpened)).append("\n");
    sb.append("    dateFunded: ").append(toIndentedString(dateFunded)).append("\n");
    sb.append("    dateClosed: ").append(toIndentedString(dateClosed)).append("\n");
    sb.append("    dateLinked: ").append(toIndentedString(dateLinked)).append("\n");
    sb.append("    dateDelinked: ").append(toIndentedString(dateDelinked)).append("\n");
    sb.append("    accountTitle: ").append(toIndentedString(accountTitle)).append("\n");
    sb.append("    officialTitle: ").append(toIndentedString(officialTitle)).append("\n");
    sb.append("    accountAlias: ").append(toIndentedString(accountAlias)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    margin: ").append(toIndentedString(margin)).append("\n");
    sb.append("    applicantType: ").append(toIndentedString(applicantType)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    stockYieldProgram: ").append(toIndentedString(stockYieldProgram)).append("\n");
    sb.append("    feeTemplate: ").append(toIndentedString(feeTemplate)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    limitedOptionTrading: ").append(toIndentedString(limitedOptionTrading)).append("\n");
    sb.append("    investmentObjectives: ").append(toIndentedString(investmentObjectives)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    mifidCategory: ").append(toIndentedString(mifidCategory)).append("\n");
    sb.append("    mifirStatus: ").append(toIndentedString(mifirStatus)).append("\n");
    sb.append("    equity: ").append(toIndentedString(equity)).append("\n");
    sb.append("    household: ").append(toIndentedString(household)).append("\n");
    sb.append("    propertyProfile: ").append(toIndentedString(propertyProfile)).append("\n");
    sb.append("    processType: ").append(toIndentedString(processType)).append("\n");
    sb.append("    riskScore: ").append(toIndentedString(riskScore)).append("\n");
    sb.append("    classActionProgram: ").append(toIndentedString(classActionProgram)).append("\n");
    sb.append("    trustType: ").append(toIndentedString(trustType)).append("\n");
    sb.append("    orgType: ").append(toIndentedString(orgType)).append("\n");
    sb.append("    businessDescription: ").append(toIndentedString(businessDescription)).append("\n");
    sb.append("    usTaxPurposeType: ").append(toIndentedString(usTaxPurposeType)).append("\n");
    sb.append("    tradeIntentionType: ").append(toIndentedString(tradeIntentionType)).append("\n");
    sb.append("    registeredAddress: ").append(toIndentedString(registeredAddress)).append("\n");
    sb.append("    mailing: ").append(toIndentedString(mailing)).append("\n");
    sb.append("    countryOfCorporation: ").append(toIndentedString(countryOfCorporation)).append("\n");
    sb.append("    taxIds: ").append(toIndentedString(taxIds)).append("\n");
    sb.append("    taxTreatyDetails: ").append(toIndentedString(taxTreatyDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("masterAccountId");
    openapiFields.add("mainAccount");
    openapiFields.add("sourceAccountId");
    openapiFields.add("primaryUser");
    openapiFields.add("clearingStatus");
    openapiFields.add("clearingStatusDescription");
    openapiFields.add("stateCode");
    openapiFields.add("baseCurrency");
    openapiFields.add("dateBegun");
    openapiFields.add("dateApproved");
    openapiFields.add("dateOpened");
    openapiFields.add("dateFunded");
    openapiFields.add("dateClosed");
    openapiFields.add("dateLinked");
    openapiFields.add("dateDelinked");
    openapiFields.add("accountTitle");
    openapiFields.add("officialTitle");
    openapiFields.add("accountAlias");
    openapiFields.add("emailAddress");
    openapiFields.add("margin");
    openapiFields.add("applicantType");
    openapiFields.add("subType");
    openapiFields.add("stockYieldProgram");
    openapiFields.add("feeTemplate");
    openapiFields.add("capabilities");
    openapiFields.add("limitedOptionTrading");
    openapiFields.add("investmentObjectives");
    openapiFields.add("externalId");
    openapiFields.add("mifidCategory");
    openapiFields.add("mifirStatus");
    openapiFields.add("equity");
    openapiFields.add("household");
    openapiFields.add("propertyProfile");
    openapiFields.add("processType");
    openapiFields.add("riskScore");
    openapiFields.add("class_action_program");
    openapiFields.add("trustType");
    openapiFields.add("orgType");
    openapiFields.add("businessDescription");
    openapiFields.add("usTaxPurposeType");
    openapiFields.add("tradeIntentionType");
    openapiFields.add("registeredAddress");
    openapiFields.add("mailing");
    openapiFields.add("countryOfCorporation");
    openapiFields.add("taxIds");
    openapiFields.add("taxTreatyDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountData
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountData.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountData is not found in the empty JSON string", AccountData.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountData.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountData` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountId") != null && !jsonObj.get("accountId").isJsonNull()) && !jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("masterAccountId") != null && !jsonObj.get("masterAccountId").isJsonNull()) && !jsonObj.get("masterAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `masterAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("masterAccountId").toString()));
      }
      if ((jsonObj.get("mainAccount") != null && !jsonObj.get("mainAccount").isJsonNull()) && !jsonObj.get("mainAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mainAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mainAccount").toString()));
      }
      if ((jsonObj.get("sourceAccountId") != null && !jsonObj.get("sourceAccountId").isJsonNull()) && !jsonObj.get("sourceAccountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceAccountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceAccountId").toString()));
      }
      if ((jsonObj.get("primaryUser") != null && !jsonObj.get("primaryUser").isJsonNull()) && !jsonObj.get("primaryUser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryUser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryUser").toString()));
      }
      if ((jsonObj.get("clearingStatus") != null && !jsonObj.get("clearingStatus").isJsonNull()) && !jsonObj.get("clearingStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clearingStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clearingStatus").toString()));
      }
      if ((jsonObj.get("clearingStatusDescription") != null && !jsonObj.get("clearingStatusDescription").isJsonNull()) && !jsonObj.get("clearingStatusDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clearingStatusDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clearingStatusDescription").toString()));
      }
      if ((jsonObj.get("stateCode") != null && !jsonObj.get("stateCode").isJsonNull()) && !jsonObj.get("stateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateCode").toString()));
      }
      if ((jsonObj.get("baseCurrency") != null && !jsonObj.get("baseCurrency").isJsonNull()) && !jsonObj.get("baseCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `baseCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("baseCurrency").toString()));
      }
      if ((jsonObj.get("dateBegun") != null && !jsonObj.get("dateBegun").isJsonNull()) && !jsonObj.get("dateBegun").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateBegun` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateBegun").toString()));
      }
      if ((jsonObj.get("dateApproved") != null && !jsonObj.get("dateApproved").isJsonNull()) && !jsonObj.get("dateApproved").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateApproved` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateApproved").toString()));
      }
      if ((jsonObj.get("dateOpened") != null && !jsonObj.get("dateOpened").isJsonNull()) && !jsonObj.get("dateOpened").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOpened` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOpened").toString()));
      }
      if ((jsonObj.get("dateFunded") != null && !jsonObj.get("dateFunded").isJsonNull()) && !jsonObj.get("dateFunded").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateFunded` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateFunded").toString()));
      }
      if ((jsonObj.get("dateClosed") != null && !jsonObj.get("dateClosed").isJsonNull()) && !jsonObj.get("dateClosed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateClosed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateClosed").toString()));
      }
      if ((jsonObj.get("dateLinked") != null && !jsonObj.get("dateLinked").isJsonNull()) && !jsonObj.get("dateLinked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateLinked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateLinked").toString()));
      }
      if ((jsonObj.get("dateDelinked") != null && !jsonObj.get("dateDelinked").isJsonNull()) && !jsonObj.get("dateDelinked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateDelinked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateDelinked").toString()));
      }
      if ((jsonObj.get("accountTitle") != null && !jsonObj.get("accountTitle").isJsonNull()) && !jsonObj.get("accountTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountTitle").toString()));
      }
      if ((jsonObj.get("officialTitle") != null && !jsonObj.get("officialTitle").isJsonNull()) && !jsonObj.get("officialTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `officialTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("officialTitle").toString()));
      }
      if ((jsonObj.get("accountAlias") != null && !jsonObj.get("accountAlias").isJsonNull()) && !jsonObj.get("accountAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountAlias").toString()));
      }
      if ((jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) && !jsonObj.get("emailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddress").toString()));
      }
      if ((jsonObj.get("margin") != null && !jsonObj.get("margin").isJsonNull()) && !jsonObj.get("margin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `margin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("margin").toString()));
      }
      if ((jsonObj.get("applicantType") != null && !jsonObj.get("applicantType").isJsonNull()) && !jsonObj.get("applicantType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicantType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicantType").toString()));
      }
      if ((jsonObj.get("subType") != null && !jsonObj.get("subType").isJsonNull()) && !jsonObj.get("subType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subType").toString()));
      }
      if ((jsonObj.get("limitedOptionTrading") != null && !jsonObj.get("limitedOptionTrading").isJsonNull()) && !jsonObj.get("limitedOptionTrading").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `limitedOptionTrading` to be a primitive type in the JSON string but got `%s`", jsonObj.get("limitedOptionTrading").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("investmentObjectives") != null && !jsonObj.get("investmentObjectives").isJsonNull() && !jsonObj.get("investmentObjectives").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `investmentObjectives` to be an array in the JSON string but got `%s`", jsonObj.get("investmentObjectives").toString()));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("mifidCategory") != null && !jsonObj.get("mifidCategory").isJsonNull()) && !jsonObj.get("mifidCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mifidCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mifidCategory").toString()));
      }
      if ((jsonObj.get("mifirStatus") != null && !jsonObj.get("mifirStatus").isJsonNull()) && !jsonObj.get("mifirStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mifirStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mifirStatus").toString()));
      }
      if ((jsonObj.get("household") != null && !jsonObj.get("household").isJsonNull()) && !jsonObj.get("household").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `household` to be a primitive type in the JSON string but got `%s`", jsonObj.get("household").toString()));
      }
      if ((jsonObj.get("propertyProfile") != null && !jsonObj.get("propertyProfile").isJsonNull()) && !jsonObj.get("propertyProfile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `propertyProfile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("propertyProfile").toString()));
      }
      if ((jsonObj.get("processType") != null && !jsonObj.get("processType").isJsonNull()) && !jsonObj.get("processType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `processType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("processType").toString()));
      }
      if ((jsonObj.get("class_action_program") != null && !jsonObj.get("class_action_program").isJsonNull()) && !jsonObj.get("class_action_program").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `class_action_program` to be a primitive type in the JSON string but got `%s`", jsonObj.get("class_action_program").toString()));
      }
      if ((jsonObj.get("trustType") != null && !jsonObj.get("trustType").isJsonNull()) && !jsonObj.get("trustType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trustType").toString()));
      }
      if ((jsonObj.get("orgType") != null && !jsonObj.get("orgType").isJsonNull()) && !jsonObj.get("orgType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgType").toString()));
      }
      if ((jsonObj.get("businessDescription") != null && !jsonObj.get("businessDescription").isJsonNull()) && !jsonObj.get("businessDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessDescription").toString()));
      }
      if ((jsonObj.get("usTaxPurposeType") != null && !jsonObj.get("usTaxPurposeType").isJsonNull()) && !jsonObj.get("usTaxPurposeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `usTaxPurposeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("usTaxPurposeType").toString()));
      }
      if ((jsonObj.get("tradeIntentionType") != null && !jsonObj.get("tradeIntentionType").isJsonNull()) && !jsonObj.get("tradeIntentionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tradeIntentionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tradeIntentionType").toString()));
      }
      if ((jsonObj.get("countryOfCorporation") != null && !jsonObj.get("countryOfCorporation").isJsonNull()) && !jsonObj.get("countryOfCorporation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryOfCorporation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryOfCorporation").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taxIds") != null && !jsonObj.get("taxIds").isJsonNull() && !jsonObj.get("taxIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxIds` to be an array in the JSON string but got `%s`", jsonObj.get("taxIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taxTreatyDetails") != null && !jsonObj.get("taxTreatyDetails").isJsonNull() && !jsonObj.get("taxTreatyDetails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxTreatyDetails` to be an array in the JSON string but got `%s`", jsonObj.get("taxTreatyDetails").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountData.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountData>() {
           @Override
           public void write(JsonWriter out, AccountData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountData given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountData
   * @throws IOException if the JSON string is invalid with respect to AccountData
   */
  public static AccountData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountData.class);
  }

  /**
   * Convert an instance of AccountData to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

