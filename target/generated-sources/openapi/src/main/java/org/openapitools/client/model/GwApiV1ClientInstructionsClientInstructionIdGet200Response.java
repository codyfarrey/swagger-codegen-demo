/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.DepositFundsPollingResponse;
import org.openapitools.client.model.InstructionPollingResponse;
import org.openapitools.client.model.InstructionResponse;
import org.openapitools.client.model.QueryIRAContributionsResponse;
import org.openapitools.client.model.QueryIRAContributionsResult;
import org.openapitools.client.model.QueryRecentInstructionResponse;



import java.io.IOException;
import java.lang.reflect.Type;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.JsonPrimitive;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonArray;
import com.google.gson.JsonParseException;

import org.openapitools.client.JSON;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class GwApiV1ClientInstructionsClientInstructionIdGet200Response extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(GwApiV1ClientInstructionsClientInstructionIdGet200Response.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!GwApiV1ClientInstructionsClientInstructionIdGet200Response.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'GwApiV1ClientInstructionsClientInstructionIdGet200Response' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<InstructionPollingResponse> adapterInstructionPollingResponse = gson.getDelegateAdapter(this, TypeToken.get(InstructionPollingResponse.class));
            final TypeAdapter<InstructionResponse> adapterInstructionResponse = gson.getDelegateAdapter(this, TypeToken.get(InstructionResponse.class));
            final TypeAdapter<QueryRecentInstructionResponse> adapterQueryRecentInstructionResponse = gson.getDelegateAdapter(this, TypeToken.get(QueryRecentInstructionResponse.class));
            final TypeAdapter<DepositFundsPollingResponse> adapterDepositFundsPollingResponse = gson.getDelegateAdapter(this, TypeToken.get(DepositFundsPollingResponse.class));
            final TypeAdapter<QueryIRAContributionsResponse> adapterQueryIRAContributionsResponse = gson.getDelegateAdapter(this, TypeToken.get(QueryIRAContributionsResponse.class));

            return (TypeAdapter<T>) new TypeAdapter<GwApiV1ClientInstructionsClientInstructionIdGet200Response>() {
                @Override
                public void write(JsonWriter out, GwApiV1ClientInstructionsClientInstructionIdGet200Response value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `InstructionPollingResponse`
                    if (value.getActualInstance() instanceof InstructionPollingResponse) {
                        JsonElement element = adapterInstructionPollingResponse.toJsonTree((InstructionPollingResponse)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `InstructionResponse`
                    if (value.getActualInstance() instanceof InstructionResponse) {
                        JsonElement element = adapterInstructionResponse.toJsonTree((InstructionResponse)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `QueryRecentInstructionResponse`
                    if (value.getActualInstance() instanceof QueryRecentInstructionResponse) {
                        JsonElement element = adapterQueryRecentInstructionResponse.toJsonTree((QueryRecentInstructionResponse)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `DepositFundsPollingResponse`
                    if (value.getActualInstance() instanceof DepositFundsPollingResponse) {
                        JsonElement element = adapterDepositFundsPollingResponse.toJsonTree((DepositFundsPollingResponse)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `QueryIRAContributionsResponse`
                    if (value.getActualInstance() instanceof QueryIRAContributionsResponse) {
                        JsonElement element = adapterQueryIRAContributionsResponse.toJsonTree((QueryIRAContributionsResponse)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    throw new IOException("Failed to serialize as the type doesn't match oneOf schemas: DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse");
                }

                @Override
                public GwApiV1ClientInstructionsClientInstructionIdGet200Response read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonElement jsonElement = elementAdapter.read(in);

                    int match = 0;
                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize InstructionPollingResponse
                    try {
                        // validate the JSON object to see if any exception is thrown
                        InstructionPollingResponse.validateJsonElement(jsonElement);
                        actualAdapter = adapterInstructionPollingResponse;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'InstructionPollingResponse'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for InstructionPollingResponse failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'InstructionPollingResponse'", e);
                    }
                    // deserialize InstructionResponse
                    try {
                        // validate the JSON object to see if any exception is thrown
                        InstructionResponse.validateJsonElement(jsonElement);
                        actualAdapter = adapterInstructionResponse;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'InstructionResponse'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for InstructionResponse failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'InstructionResponse'", e);
                    }
                    // deserialize QueryRecentInstructionResponse
                    try {
                        // validate the JSON object to see if any exception is thrown
                        QueryRecentInstructionResponse.validateJsonElement(jsonElement);
                        actualAdapter = adapterQueryRecentInstructionResponse;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'QueryRecentInstructionResponse'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for QueryRecentInstructionResponse failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'QueryRecentInstructionResponse'", e);
                    }
                    // deserialize DepositFundsPollingResponse
                    try {
                        // validate the JSON object to see if any exception is thrown
                        DepositFundsPollingResponse.validateJsonElement(jsonElement);
                        actualAdapter = adapterDepositFundsPollingResponse;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'DepositFundsPollingResponse'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for DepositFundsPollingResponse failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'DepositFundsPollingResponse'", e);
                    }
                    // deserialize QueryIRAContributionsResponse
                    try {
                        // validate the JSON object to see if any exception is thrown
                        QueryIRAContributionsResponse.validateJsonElement(jsonElement);
                        actualAdapter = adapterQueryIRAContributionsResponse;
                        match++;
                        log.log(Level.FINER, "Input data matches schema 'QueryIRAContributionsResponse'");
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for QueryIRAContributionsResponse failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'QueryIRAContributionsResponse'", e);
                    }

                    if (match == 1) {
                        GwApiV1ClientInstructionsClientInstructionIdGet200Response ret = new GwApiV1ClientInstructionsClientInstructionIdGet200Response();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    }

                    throw new IOException(String.format("Failed deserialization for GwApiV1ClientInstructionsClientInstructionIdGet200Response: %d classes match result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", match, errorMessages, jsonElement.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in oneOf
    public static final Map<String, Class<?>> schemas = new HashMap<String, Class<?>>();

    public GwApiV1ClientInstructionsClientInstructionIdGet200Response() {
        super("oneOf", Boolean.FALSE);
    }

    public GwApiV1ClientInstructionsClientInstructionIdGet200Response(Object o) {
        super("oneOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("InstructionPollingResponse", InstructionPollingResponse.class);
        schemas.put("InstructionResponse", InstructionResponse.class);
        schemas.put("QueryRecentInstructionResponse", QueryRecentInstructionResponse.class);
        schemas.put("DepositFundsPollingResponse", DepositFundsPollingResponse.class);
        schemas.put("QueryIRAContributionsResponse", QueryIRAContributionsResponse.class);
    }

    @Override
    public Map<String, Class<?>> getSchemas() {
        return GwApiV1ClientInstructionsClientInstructionIdGet200Response.schemas;
    }

    /**
     * Set the instance that matches the oneOf child schema, check
     * the instance parameter is valid against the oneOf child schemas:
     * DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse
     *
     * It could be an instance of the 'oneOf' schemas.
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof InstructionPollingResponse) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof InstructionResponse) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof QueryRecentInstructionResponse) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof DepositFundsPollingResponse) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof QueryIRAContributionsResponse) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse");
    }

    /**
     * Get the actual instance, which can be the following:
     * DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse
     *
     * @return The actual instance (DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse)
     */
    @SuppressWarnings("unchecked")
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `InstructionPollingResponse`. If the actual instance is not `InstructionPollingResponse`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `InstructionPollingResponse`
     * @throws ClassCastException if the instance is not `InstructionPollingResponse`
     */
    public InstructionPollingResponse getInstructionPollingResponse() throws ClassCastException {
        return (InstructionPollingResponse)super.getActualInstance();
    }

    /**
     * Get the actual instance of `InstructionResponse`. If the actual instance is not `InstructionResponse`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `InstructionResponse`
     * @throws ClassCastException if the instance is not `InstructionResponse`
     */
    public InstructionResponse getInstructionResponse() throws ClassCastException {
        return (InstructionResponse)super.getActualInstance();
    }

    /**
     * Get the actual instance of `QueryRecentInstructionResponse`. If the actual instance is not `QueryRecentInstructionResponse`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `QueryRecentInstructionResponse`
     * @throws ClassCastException if the instance is not `QueryRecentInstructionResponse`
     */
    public QueryRecentInstructionResponse getQueryRecentInstructionResponse() throws ClassCastException {
        return (QueryRecentInstructionResponse)super.getActualInstance();
    }

    /**
     * Get the actual instance of `DepositFundsPollingResponse`. If the actual instance is not `DepositFundsPollingResponse`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `DepositFundsPollingResponse`
     * @throws ClassCastException if the instance is not `DepositFundsPollingResponse`
     */
    public DepositFundsPollingResponse getDepositFundsPollingResponse() throws ClassCastException {
        return (DepositFundsPollingResponse)super.getActualInstance();
    }

    /**
     * Get the actual instance of `QueryIRAContributionsResponse`. If the actual instance is not `QueryIRAContributionsResponse`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `QueryIRAContributionsResponse`
     * @throws ClassCastException if the instance is not `QueryIRAContributionsResponse`
     */
    public QueryIRAContributionsResponse getQueryIRAContributionsResponse() throws ClassCastException {
        return (QueryIRAContributionsResponse)super.getActualInstance();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to GwApiV1ClientInstructionsClientInstructionIdGet200Response
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        // validate oneOf schemas one by one
        int validCount = 0;
        ArrayList<String> errorMessages = new ArrayList<>();
        // validate the json string with InstructionPollingResponse
        try {
            InstructionPollingResponse.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for InstructionPollingResponse failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with InstructionResponse
        try {
            InstructionResponse.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for InstructionResponse failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with QueryRecentInstructionResponse
        try {
            QueryRecentInstructionResponse.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for QueryRecentInstructionResponse failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with DepositFundsPollingResponse
        try {
            DepositFundsPollingResponse.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for DepositFundsPollingResponse failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with QueryIRAContributionsResponse
        try {
            QueryIRAContributionsResponse.validateJsonElement(jsonElement);
            validCount++;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for QueryIRAContributionsResponse failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        if (validCount != 1) {
            throw new IOException(String.format("The JSON string is invalid for GwApiV1ClientInstructionsClientInstructionIdGet200Response with oneOf schemas: DepositFundsPollingResponse, InstructionPollingResponse, InstructionResponse, QueryIRAContributionsResponse, QueryRecentInstructionResponse. %d class(es) match the result, expected 1. Detailed failure message for oneOf schemas: %s. JSON: %s", validCount, errorMessages, jsonElement.toString()));
        }
    }

    /**
     * Create an instance of GwApiV1ClientInstructionsClientInstructionIdGet200Response given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of GwApiV1ClientInstructionsClientInstructionIdGet200Response
     * @throws IOException if the JSON string is invalid with respect to GwApiV1ClientInstructionsClientInstructionIdGet200Response
     */
    public static GwApiV1ClientInstructionsClientInstructionIdGet200Response fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, GwApiV1ClientInstructionsClientInstructionIdGet200Response.class);
    }

    /**
     * Convert an instance of GwApiV1ClientInstructionsClientInstructionIdGet200Response to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

