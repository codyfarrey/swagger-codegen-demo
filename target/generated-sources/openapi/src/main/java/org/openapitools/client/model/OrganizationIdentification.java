/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.PhoneInfo;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrganizationIdentification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class OrganizationIdentification {
  public static final String SERIALIZED_NAME_PLACE_OF_BUSINESS_ADDRESS = "placeOfBusinessAddress";
  @SerializedName(SERIALIZED_NAME_PLACE_OF_BUSINESS_ADDRESS)
  @javax.annotation.Nullable
  private Address placeOfBusinessAddress;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS = "mailingAddress";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS)
  @javax.annotation.Nullable
  private Address mailingAddress;

  public static final String SERIALIZED_NAME_PHONES = "phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  @javax.annotation.Nullable
  private List<PhoneInfo> phones = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_BUSINESS_DESCRIPTION = "businessDescription";
  @SerializedName(SERIALIZED_NAME_BUSINESS_DESCRIPTION)
  @javax.annotation.Nullable
  private String businessDescription;

  public static final String SERIALIZED_NAME_WEBSITE_ADDRESS = "websiteAddress";
  @SerializedName(SERIALIZED_NAME_WEBSITE_ADDRESS)
  @javax.annotation.Nullable
  private String websiteAddress;

  public static final String SERIALIZED_NAME_IDENTIFICATION = "identification";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION)
  @javax.annotation.Nullable
  private String identification;

  public static final String SERIALIZED_NAME_IDENTIFICATION_COUNTRY = "identificationCountry";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION_COUNTRY)
  @javax.annotation.Nullable
  private String identificationCountry;

  public static final String SERIALIZED_NAME_FORMATION_COUNTRY = "formationCountry";
  @SerializedName(SERIALIZED_NAME_FORMATION_COUNTRY)
  @javax.annotation.Nullable
  private String formationCountry;

  public static final String SERIALIZED_NAME_FORMATION_STATE = "formationState";
  @SerializedName(SERIALIZED_NAME_FORMATION_STATE)
  @javax.annotation.Nullable
  private String formationState;

  public static final String SERIALIZED_NAME_SAME_MAIL_ADDRESS = "sameMailAddress";
  @SerializedName(SERIALIZED_NAME_SAME_MAIL_ADDRESS)
  @javax.annotation.Nullable
  private Boolean sameMailAddress;

  public static final String SERIALIZED_NAME_TRANSLATED = "translated";
  @SerializedName(SERIALIZED_NAME_TRANSLATED)
  @javax.annotation.Nullable
  private Boolean translated;

  public OrganizationIdentification() {
  }

  public OrganizationIdentification placeOfBusinessAddress(@javax.annotation.Nullable Address placeOfBusinessAddress) {
    this.placeOfBusinessAddress = placeOfBusinessAddress;
    return this;
  }

  /**
   * Get placeOfBusinessAddress
   * @return placeOfBusinessAddress
   */
  @javax.annotation.Nullable
  public Address getPlaceOfBusinessAddress() {
    return placeOfBusinessAddress;
  }

  public void setPlaceOfBusinessAddress(@javax.annotation.Nullable Address placeOfBusinessAddress) {
    this.placeOfBusinessAddress = placeOfBusinessAddress;
  }


  public OrganizationIdentification mailingAddress(@javax.annotation.Nullable Address mailingAddress) {
    this.mailingAddress = mailingAddress;
    return this;
  }

  /**
   * Get mailingAddress
   * @return mailingAddress
   */
  @javax.annotation.Nullable
  public Address getMailingAddress() {
    return mailingAddress;
  }

  public void setMailingAddress(@javax.annotation.Nullable Address mailingAddress) {
    this.mailingAddress = mailingAddress;
  }


  public OrganizationIdentification phones(@javax.annotation.Nullable List<PhoneInfo> phones) {
    this.phones = phones;
    return this;
  }

  public OrganizationIdentification addPhonesItem(PhoneInfo phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

  /**
   * Get phones
   * @return phones
   */
  @javax.annotation.Nullable
  public List<PhoneInfo> getPhones() {
    return phones;
  }

  public void setPhones(@javax.annotation.Nullable List<PhoneInfo> phones) {
    this.phones = phones;
  }


  public OrganizationIdentification name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public OrganizationIdentification businessDescription(@javax.annotation.Nullable String businessDescription) {
    this.businessDescription = businessDescription;
    return this;
  }

  /**
   * Get businessDescription
   * @return businessDescription
   */
  @javax.annotation.Nullable
  public String getBusinessDescription() {
    return businessDescription;
  }

  public void setBusinessDescription(@javax.annotation.Nullable String businessDescription) {
    this.businessDescription = businessDescription;
  }


  public OrganizationIdentification websiteAddress(@javax.annotation.Nullable String websiteAddress) {
    this.websiteAddress = websiteAddress;
    return this;
  }

  /**
   * Get websiteAddress
   * @return websiteAddress
   */
  @javax.annotation.Nullable
  public String getWebsiteAddress() {
    return websiteAddress;
  }

  public void setWebsiteAddress(@javax.annotation.Nullable String websiteAddress) {
    this.websiteAddress = websiteAddress;
  }


  public OrganizationIdentification identification(@javax.annotation.Nullable String identification) {
    this.identification = identification;
    return this;
  }

  /**
   * Get identification
   * @return identification
   */
  @javax.annotation.Nullable
  public String getIdentification() {
    return identification;
  }

  public void setIdentification(@javax.annotation.Nullable String identification) {
    this.identification = identification;
  }


  public OrganizationIdentification identificationCountry(@javax.annotation.Nullable String identificationCountry) {
    this.identificationCountry = identificationCountry;
    return this;
  }

  /**
   * Get identificationCountry
   * @return identificationCountry
   */
  @javax.annotation.Nullable
  public String getIdentificationCountry() {
    return identificationCountry;
  }

  public void setIdentificationCountry(@javax.annotation.Nullable String identificationCountry) {
    this.identificationCountry = identificationCountry;
  }


  public OrganizationIdentification formationCountry(@javax.annotation.Nullable String formationCountry) {
    this.formationCountry = formationCountry;
    return this;
  }

  /**
   * Get formationCountry
   * @return formationCountry
   */
  @javax.annotation.Nullable
  public String getFormationCountry() {
    return formationCountry;
  }

  public void setFormationCountry(@javax.annotation.Nullable String formationCountry) {
    this.formationCountry = formationCountry;
  }


  public OrganizationIdentification formationState(@javax.annotation.Nullable String formationState) {
    this.formationState = formationState;
    return this;
  }

  /**
   * Get formationState
   * @return formationState
   */
  @javax.annotation.Nullable
  public String getFormationState() {
    return formationState;
  }

  public void setFormationState(@javax.annotation.Nullable String formationState) {
    this.formationState = formationState;
  }


  public OrganizationIdentification sameMailAddress(@javax.annotation.Nullable Boolean sameMailAddress) {
    this.sameMailAddress = sameMailAddress;
    return this;
  }

  /**
   * Get sameMailAddress
   * @return sameMailAddress
   */
  @javax.annotation.Nullable
  public Boolean getSameMailAddress() {
    return sameMailAddress;
  }

  public void setSameMailAddress(@javax.annotation.Nullable Boolean sameMailAddress) {
    this.sameMailAddress = sameMailAddress;
  }


  public OrganizationIdentification translated(@javax.annotation.Nullable Boolean translated) {
    this.translated = translated;
    return this;
  }

  /**
   * Get translated
   * @return translated
   */
  @javax.annotation.Nullable
  public Boolean getTranslated() {
    return translated;
  }

  public void setTranslated(@javax.annotation.Nullable Boolean translated) {
    this.translated = translated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationIdentification organizationIdentification = (OrganizationIdentification) o;
    return Objects.equals(this.placeOfBusinessAddress, organizationIdentification.placeOfBusinessAddress) &&
        Objects.equals(this.mailingAddress, organizationIdentification.mailingAddress) &&
        Objects.equals(this.phones, organizationIdentification.phones) &&
        Objects.equals(this.name, organizationIdentification.name) &&
        Objects.equals(this.businessDescription, organizationIdentification.businessDescription) &&
        Objects.equals(this.websiteAddress, organizationIdentification.websiteAddress) &&
        Objects.equals(this.identification, organizationIdentification.identification) &&
        Objects.equals(this.identificationCountry, organizationIdentification.identificationCountry) &&
        Objects.equals(this.formationCountry, organizationIdentification.formationCountry) &&
        Objects.equals(this.formationState, organizationIdentification.formationState) &&
        Objects.equals(this.sameMailAddress, organizationIdentification.sameMailAddress) &&
        Objects.equals(this.translated, organizationIdentification.translated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(placeOfBusinessAddress, mailingAddress, phones, name, businessDescription, websiteAddress, identification, identificationCountry, formationCountry, formationState, sameMailAddress, translated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationIdentification {\n");
    sb.append("    placeOfBusinessAddress: ").append(toIndentedString(placeOfBusinessAddress)).append("\n");
    sb.append("    mailingAddress: ").append(toIndentedString(mailingAddress)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    businessDescription: ").append(toIndentedString(businessDescription)).append("\n");
    sb.append("    websiteAddress: ").append(toIndentedString(websiteAddress)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    identificationCountry: ").append(toIndentedString(identificationCountry)).append("\n");
    sb.append("    formationCountry: ").append(toIndentedString(formationCountry)).append("\n");
    sb.append("    formationState: ").append(toIndentedString(formationState)).append("\n");
    sb.append("    sameMailAddress: ").append(toIndentedString(sameMailAddress)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("placeOfBusinessAddress");
    openapiFields.add("mailingAddress");
    openapiFields.add("phones");
    openapiFields.add("name");
    openapiFields.add("businessDescription");
    openapiFields.add("websiteAddress");
    openapiFields.add("identification");
    openapiFields.add("identificationCountry");
    openapiFields.add("formationCountry");
    openapiFields.add("formationState");
    openapiFields.add("sameMailAddress");
    openapiFields.add("translated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrganizationIdentification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrganizationIdentification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrganizationIdentification is not found in the empty JSON string", OrganizationIdentification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrganizationIdentification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrganizationIdentification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `placeOfBusinessAddress`
      if (jsonObj.get("placeOfBusinessAddress") != null && !jsonObj.get("placeOfBusinessAddress").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("placeOfBusinessAddress"));
      }
      // validate the optional field `mailingAddress`
      if (jsonObj.get("mailingAddress") != null && !jsonObj.get("mailingAddress").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("mailingAddress"));
      }
      if (jsonObj.get("phones") != null && !jsonObj.get("phones").isJsonNull()) {
        JsonArray jsonArrayphones = jsonObj.getAsJsonArray("phones");
        if (jsonArrayphones != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phones").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phones` to be an array in the JSON string but got `%s`", jsonObj.get("phones").toString()));
          }

          // validate the optional field `phones` (array)
          for (int i = 0; i < jsonArrayphones.size(); i++) {
            PhoneInfo.validateJsonElement(jsonArrayphones.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("businessDescription") != null && !jsonObj.get("businessDescription").isJsonNull()) && !jsonObj.get("businessDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `businessDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("businessDescription").toString()));
      }
      if ((jsonObj.get("websiteAddress") != null && !jsonObj.get("websiteAddress").isJsonNull()) && !jsonObj.get("websiteAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteAddress").toString()));
      }
      if ((jsonObj.get("identification") != null && !jsonObj.get("identification").isJsonNull()) && !jsonObj.get("identification").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identification` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identification").toString()));
      }
      if ((jsonObj.get("identificationCountry") != null && !jsonObj.get("identificationCountry").isJsonNull()) && !jsonObj.get("identificationCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identificationCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identificationCountry").toString()));
      }
      if ((jsonObj.get("formationCountry") != null && !jsonObj.get("formationCountry").isJsonNull()) && !jsonObj.get("formationCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formationCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formationCountry").toString()));
      }
      if ((jsonObj.get("formationState") != null && !jsonObj.get("formationState").isJsonNull()) && !jsonObj.get("formationState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formationState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formationState").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrganizationIdentification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrganizationIdentification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrganizationIdentification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrganizationIdentification.class));

       return (TypeAdapter<T>) new TypeAdapter<OrganizationIdentification>() {
           @Override
           public void write(JsonWriter out, OrganizationIdentification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrganizationIdentification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrganizationIdentification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrganizationIdentification
   * @throws IOException if the JSON string is invalid with respect to OrganizationIdentification
   */
  public static OrganizationIdentification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrganizationIdentification.class);
  }

  /**
   * Convert an instance of OrganizationIdentification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

