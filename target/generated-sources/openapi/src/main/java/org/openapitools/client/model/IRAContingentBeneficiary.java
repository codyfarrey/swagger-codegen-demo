/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.EmploymentDetails;
import org.openapitools.client.model.FormCRS;
import org.openapitools.client.model.FormW8BEN;
import org.openapitools.client.model.FormW9;
import org.openapitools.client.model.Identification;
import org.openapitools.client.model.IndividualName;
import org.openapitools.client.model.PhoneInfo;
import org.openapitools.client.model.ProhibitedCountryQuestionnaireList;
import org.openapitools.client.model.ResidenceAddress;
import org.openapitools.client.model.TaxResidency;
import org.openapitools.client.model.Title;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IRAContingentBeneficiary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class IRAContingentBeneficiary {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private IndividualName name;

  public static final String SERIALIZED_NAME_NATIVE_NAME = "nativeName";
  @SerializedName(SERIALIZED_NAME_NATIVE_NAME)
  @javax.annotation.Nullable
  private IndividualName nativeName;

  public static final String SERIALIZED_NAME_BIRTH_NAME = "birthName";
  @SerializedName(SERIALIZED_NAME_BIRTH_NAME)
  @javax.annotation.Nullable
  private IndividualName birthName;

  public static final String SERIALIZED_NAME_MOTHER_MAIDEN_NAME = "motherMaidenName";
  @SerializedName(SERIALIZED_NAME_MOTHER_MAIDEN_NAME)
  @javax.annotation.Nullable
  private IndividualName motherMaidenName;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  @javax.annotation.Nullable
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_COUNTRY_OF_BIRTH = "countryOfBirth";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_BIRTH)
  @javax.annotation.Nullable
  private String countryOfBirth;

  public static final String SERIALIZED_NAME_CITY_OF_BIRTH = "cityOfBirth";
  @SerializedName(SERIALIZED_NAME_CITY_OF_BIRTH)
  @javax.annotation.Nullable
  private String cityOfBirth;

  /**
   * Gets or Sets gender
   */
  @JsonAdapter(GenderEnum.Adapter.class)
  public enum GenderEnum {
    M("M"),
    
    F("F"),
    
    MALE("Male"),
    
    FEMALE("Female");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GenderEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      GenderEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  @javax.annotation.Nullable
  private GenderEnum gender;

  /**
   * Gets or Sets maritalStatus
   */
  @JsonAdapter(MaritalStatusEnum.Adapter.class)
  public enum MaritalStatusEnum {
    S("S"),
    
    M("M"),
    
    W("W"),
    
    D("D"),
    
    C("C");

    private String value;

    MaritalStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MaritalStatusEnum fromValue(String value) {
      for (MaritalStatusEnum b : MaritalStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MaritalStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MaritalStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MaritalStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MaritalStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MaritalStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  @javax.annotation.Nullable
  private MaritalStatusEnum maritalStatus;

  public static final String SERIALIZED_NAME_NUM_DEPENDENTS = "numDependents";
  @SerializedName(SERIALIZED_NAME_NUM_DEPENDENTS)
  @javax.annotation.Nullable
  private Integer numDependents;

  public static final String SERIALIZED_NAME_RESIDENCE_ADDRESS = "residenceAddress";
  @SerializedName(SERIALIZED_NAME_RESIDENCE_ADDRESS)
  @javax.annotation.Nullable
  private ResidenceAddress residenceAddress;

  public static final String SERIALIZED_NAME_MAILING_ADDRESS = "mailingAddress";
  @SerializedName(SERIALIZED_NAME_MAILING_ADDRESS)
  @javax.annotation.Nullable
  private Address mailingAddress;

  public static final String SERIALIZED_NAME_PHONES = "phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  @javax.annotation.Nullable
  private List<PhoneInfo> phones = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_IDENTIFICATION = "identification";
  @SerializedName(SERIALIZED_NAME_IDENTIFICATION)
  @javax.annotation.Nullable
  private Identification identification;

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employmentType";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  @javax.annotation.Nullable
  private String employmentType;

  public static final String SERIALIZED_NAME_EMPLOYMENT_DETAILS = "employmentDetails";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_DETAILS)
  @javax.annotation.Nullable
  private EmploymentDetails employmentDetails;

  public static final String SERIALIZED_NAME_EMPLOYEE_TITLE = "employeeTitle";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TITLE)
  @javax.annotation.Nullable
  private String employeeTitle;

  public static final String SERIALIZED_NAME_TAX_RESIDENCIES = "taxResidencies";
  @SerializedName(SERIALIZED_NAME_TAX_RESIDENCIES)
  @javax.annotation.Nullable
  private List<TaxResidency> taxResidencies = new ArrayList<>();

  public static final String SERIALIZED_NAME_W9 = "w9";
  @SerializedName(SERIALIZED_NAME_W9)
  @javax.annotation.Nullable
  private FormW9 w9;

  public static final String SERIALIZED_NAME_W8_BEN = "w8Ben";
  @SerializedName(SERIALIZED_NAME_W8_BEN)
  @javax.annotation.Nullable
  private FormW8BEN w8Ben;

  public static final String SERIALIZED_NAME_CRS = "crs";
  @SerializedName(SERIALIZED_NAME_CRS)
  @javax.annotation.Nullable
  private FormCRS crs;

  public static final String SERIALIZED_NAME_PROHIBITED_COUNTRY_QUESTIONNAIRE = "prohibitedCountryQuestionnaire";
  @SerializedName(SERIALIZED_NAME_PROHIBITED_COUNTRY_QUESTIONNAIRE)
  @javax.annotation.Nullable
  private ProhibitedCountryQuestionnaireList prohibitedCountryQuestionnaire;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  @javax.annotation.Nullable
  private String externalId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  @javax.annotation.Nullable
  private String userId;

  public static final String SERIALIZED_NAME_SAME_MAIL_ADDRESS = "sameMailAddress";
  @SerializedName(SERIALIZED_NAME_SAME_MAIL_ADDRESS)
  @javax.annotation.Nullable
  private Boolean sameMailAddress;

  public static final String SERIALIZED_NAME_AUTHORIZED_TO_SIGN_ON_BEHALF_OF_OWNER = "authorizedToSignOnBehalfOfOwner";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_TO_SIGN_ON_BEHALF_OF_OWNER)
  @javax.annotation.Nullable
  private Boolean authorizedToSignOnBehalfOfOwner;

  public static final String SERIALIZED_NAME_AUTHORIZED_TRADER = "authorizedTrader";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_TRADER)
  @javax.annotation.Nullable
  private Boolean authorizedTrader;

  public static final String SERIALIZED_NAME_US_TAX_RESIDENT = "usTaxResident";
  @SerializedName(SERIALIZED_NAME_US_TAX_RESIDENT)
  @javax.annotation.Nullable
  private Boolean usTaxResident;

  public static final String SERIALIZED_NAME_TRANSLATED = "translated";
  @SerializedName(SERIALIZED_NAME_TRANSLATED)
  @javax.annotation.Nullable
  private Boolean translated;

  public static final String SERIALIZED_NAME_PRIMARY_TRUSTEE = "primaryTrustee";
  @SerializedName(SERIALIZED_NAME_PRIMARY_TRUSTEE)
  @javax.annotation.Nullable
  private Boolean primaryTrustee;

  public static final String SERIALIZED_NAME_OWNERSHIP_PERCENTAGE = "ownershipPercentage";
  @SerializedName(SERIALIZED_NAME_OWNERSHIP_PERCENTAGE)
  @javax.annotation.Nullable
  private BigDecimal ownershipPercentage;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  @javax.annotation.Nullable
  private Title title;

  /**
   * Gets or Sets relationship
   */
  @JsonAdapter(RelationshipEnum.Adapter.class)
  public enum RelationshipEnum {
    BROTHER("Brother"),
    
    DAUGHTER("Daughter"),
    
    ESTATE("Estate"),
    
    FATHER("Father"),
    
    HUSBAND("Husband"),
    
    MOTHER("Mother"),
    
    OTHER("Other"),
    
    SISTER("Sister"),
    
    SON("Son"),
    
    WIFE("Wife"),
    
    CHARITY("Charity"),
    
    TRUST("Trust"),
    
    SPOUSE("Spouse"),
    
    CHILD("Child"),
    
    SIBLING("Sibling"),
    
    PARENT("Parent"),
    
    GRANDCHILD("Grandchild"),
    
    COMMON_LAW_PARTNER("Common Law Partner");

    private String value;

    RelationshipEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelationshipEnum fromValue(String value) {
      for (RelationshipEnum b : RelationshipEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RelationshipEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelationshipEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelationshipEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RelationshipEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RelationshipEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_RELATIONSHIP = "relationship";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP)
  @javax.annotation.Nullable
  private RelationshipEnum relationship;

  public IRAContingentBeneficiary() {
  }

  public IRAContingentBeneficiary name(@javax.annotation.Nullable IndividualName name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public IndividualName getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable IndividualName name) {
    this.name = name;
  }


  public IRAContingentBeneficiary nativeName(@javax.annotation.Nullable IndividualName nativeName) {
    this.nativeName = nativeName;
    return this;
  }

  /**
   * Get nativeName
   * @return nativeName
   */
  @javax.annotation.Nullable
  public IndividualName getNativeName() {
    return nativeName;
  }

  public void setNativeName(@javax.annotation.Nullable IndividualName nativeName) {
    this.nativeName = nativeName;
  }


  public IRAContingentBeneficiary birthName(@javax.annotation.Nullable IndividualName birthName) {
    this.birthName = birthName;
    return this;
  }

  /**
   * Get birthName
   * @return birthName
   */
  @javax.annotation.Nullable
  public IndividualName getBirthName() {
    return birthName;
  }

  public void setBirthName(@javax.annotation.Nullable IndividualName birthName) {
    this.birthName = birthName;
  }


  public IRAContingentBeneficiary motherMaidenName(@javax.annotation.Nullable IndividualName motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
    return this;
  }

  /**
   * Get motherMaidenName
   * @return motherMaidenName
   */
  @javax.annotation.Nullable
  public IndividualName getMotherMaidenName() {
    return motherMaidenName;
  }

  public void setMotherMaidenName(@javax.annotation.Nullable IndividualName motherMaidenName) {
    this.motherMaidenName = motherMaidenName;
  }


  public IRAContingentBeneficiary dateOfBirth(@javax.annotation.Nullable String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * Date of birth of the applicant. The applicant must be 18 years or older to open an account. &lt;br&gt;&lt;ul&gt;&lt;li&gt;If the YYY-MM-DD &lt; 18 years error will be triggered and the account will not be created.&lt;/li&gt;&lt;li&gt;If YYYY-MM-DD &lt; 21 the applicant is restricted to opening a CASH account only.&lt;/li&gt;&lt;li&gt;UGMA and UTMA accounts are available for minors 18 years of age or younger. An individual or entity who manages an account for a minor until that minor reaches a specific age. Available to US residents only.&lt;/li&gt;&lt;li&gt;This application must be opened using the front-end application which is available within the IBKR Portal.&lt;/li&gt;&lt;li&gt;Assets held in a single account managed by a single Custodian user.&lt;/li&gt;&lt;li&gt;Error will be thrown if dateOfBirth is any value other than YYYY-MM-DD.&lt;/li&gt;&lt;/ul&gt;
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  public String getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(@javax.annotation.Nullable String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public IRAContingentBeneficiary countryOfBirth(@javax.annotation.Nullable String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
    return this;
  }

  /**
   * Get countryOfBirth
   * @return countryOfBirth
   */
  @javax.annotation.Nullable
  public String getCountryOfBirth() {
    return countryOfBirth;
  }

  public void setCountryOfBirth(@javax.annotation.Nullable String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
  }


  public IRAContingentBeneficiary cityOfBirth(@javax.annotation.Nullable String cityOfBirth) {
    this.cityOfBirth = cityOfBirth;
    return this;
  }

  /**
   * Get cityOfBirth
   * @return cityOfBirth
   */
  @javax.annotation.Nullable
  public String getCityOfBirth() {
    return cityOfBirth;
  }

  public void setCityOfBirth(@javax.annotation.Nullable String cityOfBirth) {
    this.cityOfBirth = cityOfBirth;
  }


  public IRAContingentBeneficiary gender(@javax.annotation.Nullable GenderEnum gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(@javax.annotation.Nullable GenderEnum gender) {
    this.gender = gender;
  }


  public IRAContingentBeneficiary maritalStatus(@javax.annotation.Nullable MaritalStatusEnum maritalStatus) {
    this.maritalStatus = maritalStatus;
    return this;
  }

  /**
   * Get maritalStatus
   * @return maritalStatus
   */
  @javax.annotation.Nullable
  public MaritalStatusEnum getMaritalStatus() {
    return maritalStatus;
  }

  public void setMaritalStatus(@javax.annotation.Nullable MaritalStatusEnum maritalStatus) {
    this.maritalStatus = maritalStatus;
  }


  public IRAContingentBeneficiary numDependents(@javax.annotation.Nullable Integer numDependents) {
    this.numDependents = numDependents;
    return this;
  }

  /**
   * Get numDependents
   * @return numDependents
   */
  @javax.annotation.Nullable
  public Integer getNumDependents() {
    return numDependents;
  }

  public void setNumDependents(@javax.annotation.Nullable Integer numDependents) {
    this.numDependents = numDependents;
  }


  public IRAContingentBeneficiary residenceAddress(@javax.annotation.Nullable ResidenceAddress residenceAddress) {
    this.residenceAddress = residenceAddress;
    return this;
  }

  /**
   * Get residenceAddress
   * @return residenceAddress
   */
  @javax.annotation.Nullable
  public ResidenceAddress getResidenceAddress() {
    return residenceAddress;
  }

  public void setResidenceAddress(@javax.annotation.Nullable ResidenceAddress residenceAddress) {
    this.residenceAddress = residenceAddress;
  }


  public IRAContingentBeneficiary mailingAddress(@javax.annotation.Nullable Address mailingAddress) {
    this.mailingAddress = mailingAddress;
    return this;
  }

  /**
   * Get mailingAddress
   * @return mailingAddress
   */
  @javax.annotation.Nullable
  public Address getMailingAddress() {
    return mailingAddress;
  }

  public void setMailingAddress(@javax.annotation.Nullable Address mailingAddress) {
    this.mailingAddress = mailingAddress;
  }


  public IRAContingentBeneficiary phones(@javax.annotation.Nullable List<PhoneInfo> phones) {
    this.phones = phones;
    return this;
  }

  public IRAContingentBeneficiary addPhonesItem(PhoneInfo phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

  /**
   * Get phones
   * @return phones
   */
  @javax.annotation.Nullable
  public List<PhoneInfo> getPhones() {
    return phones;
  }

  public void setPhones(@javax.annotation.Nullable List<PhoneInfo> phones) {
    this.phones = phones;
  }


  public IRAContingentBeneficiary email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public IRAContingentBeneficiary identification(@javax.annotation.Nullable Identification identification) {
    this.identification = identification;
    return this;
  }

  /**
   * Get identification
   * @return identification
   */
  @javax.annotation.Nullable
  public Identification getIdentification() {
    return identification;
  }

  public void setIdentification(@javax.annotation.Nullable Identification identification) {
    this.identification = identification;
  }


  public IRAContingentBeneficiary employmentType(@javax.annotation.Nullable String employmentType) {
    this.employmentType = employmentType;
    return this;
  }

  /**
   * Get employmentType
   * @return employmentType
   */
  @javax.annotation.Nullable
  public String getEmploymentType() {
    return employmentType;
  }

  public void setEmploymentType(@javax.annotation.Nullable String employmentType) {
    this.employmentType = employmentType;
  }


  public IRAContingentBeneficiary employmentDetails(@javax.annotation.Nullable EmploymentDetails employmentDetails) {
    this.employmentDetails = employmentDetails;
    return this;
  }

  /**
   * Get employmentDetails
   * @return employmentDetails
   */
  @javax.annotation.Nullable
  public EmploymentDetails getEmploymentDetails() {
    return employmentDetails;
  }

  public void setEmploymentDetails(@javax.annotation.Nullable EmploymentDetails employmentDetails) {
    this.employmentDetails = employmentDetails;
  }


  public IRAContingentBeneficiary employeeTitle(@javax.annotation.Nullable String employeeTitle) {
    this.employeeTitle = employeeTitle;
    return this;
  }

  /**
   * Get employeeTitle
   * @return employeeTitle
   */
  @javax.annotation.Nullable
  public String getEmployeeTitle() {
    return employeeTitle;
  }

  public void setEmployeeTitle(@javax.annotation.Nullable String employeeTitle) {
    this.employeeTitle = employeeTitle;
  }


  public IRAContingentBeneficiary taxResidencies(@javax.annotation.Nullable List<TaxResidency> taxResidencies) {
    this.taxResidencies = taxResidencies;
    return this;
  }

  public IRAContingentBeneficiary addTaxResidenciesItem(TaxResidency taxResidenciesItem) {
    if (this.taxResidencies == null) {
      this.taxResidencies = new ArrayList<>();
    }
    this.taxResidencies.add(taxResidenciesItem);
    return this;
  }

  /**
   * Get taxResidencies
   * @return taxResidencies
   */
  @javax.annotation.Nullable
  public List<TaxResidency> getTaxResidencies() {
    return taxResidencies;
  }

  public void setTaxResidencies(@javax.annotation.Nullable List<TaxResidency> taxResidencies) {
    this.taxResidencies = taxResidencies;
  }


  public IRAContingentBeneficiary w9(@javax.annotation.Nullable FormW9 w9) {
    this.w9 = w9;
    return this;
  }

  /**
   * Get w9
   * @return w9
   */
  @javax.annotation.Nullable
  public FormW9 getW9() {
    return w9;
  }

  public void setW9(@javax.annotation.Nullable FormW9 w9) {
    this.w9 = w9;
  }


  public IRAContingentBeneficiary w8Ben(@javax.annotation.Nullable FormW8BEN w8Ben) {
    this.w8Ben = w8Ben;
    return this;
  }

  /**
   * Get w8Ben
   * @return w8Ben
   */
  @javax.annotation.Nullable
  public FormW8BEN getW8Ben() {
    return w8Ben;
  }

  public void setW8Ben(@javax.annotation.Nullable FormW8BEN w8Ben) {
    this.w8Ben = w8Ben;
  }


  public IRAContingentBeneficiary crs(@javax.annotation.Nullable FormCRS crs) {
    this.crs = crs;
    return this;
  }

  /**
   * Get crs
   * @return crs
   */
  @javax.annotation.Nullable
  public FormCRS getCrs() {
    return crs;
  }

  public void setCrs(@javax.annotation.Nullable FormCRS crs) {
    this.crs = crs;
  }


  public IRAContingentBeneficiary prohibitedCountryQuestionnaire(@javax.annotation.Nullable ProhibitedCountryQuestionnaireList prohibitedCountryQuestionnaire) {
    this.prohibitedCountryQuestionnaire = prohibitedCountryQuestionnaire;
    return this;
  }

  /**
   * Get prohibitedCountryQuestionnaire
   * @return prohibitedCountryQuestionnaire
   */
  @javax.annotation.Nullable
  public ProhibitedCountryQuestionnaireList getProhibitedCountryQuestionnaire() {
    return prohibitedCountryQuestionnaire;
  }

  public void setProhibitedCountryQuestionnaire(@javax.annotation.Nullable ProhibitedCountryQuestionnaireList prohibitedCountryQuestionnaire) {
    this.prohibitedCountryQuestionnaire = prohibitedCountryQuestionnaire;
  }


  public IRAContingentBeneficiary id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public IRAContingentBeneficiary externalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @javax.annotation.Nullable
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(@javax.annotation.Nullable String externalId) {
    this.externalId = externalId;
  }


  public IRAContingentBeneficiary userId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }


  public IRAContingentBeneficiary sameMailAddress(@javax.annotation.Nullable Boolean sameMailAddress) {
    this.sameMailAddress = sameMailAddress;
    return this;
  }

  /**
   * Get sameMailAddress
   * @return sameMailAddress
   */
  @javax.annotation.Nullable
  public Boolean getSameMailAddress() {
    return sameMailAddress;
  }

  public void setSameMailAddress(@javax.annotation.Nullable Boolean sameMailAddress) {
    this.sameMailAddress = sameMailAddress;
  }


  public IRAContingentBeneficiary authorizedToSignOnBehalfOfOwner(@javax.annotation.Nullable Boolean authorizedToSignOnBehalfOfOwner) {
    this.authorizedToSignOnBehalfOfOwner = authorizedToSignOnBehalfOfOwner;
    return this;
  }

  /**
   * Get authorizedToSignOnBehalfOfOwner
   * @return authorizedToSignOnBehalfOfOwner
   */
  @javax.annotation.Nullable
  public Boolean getAuthorizedToSignOnBehalfOfOwner() {
    return authorizedToSignOnBehalfOfOwner;
  }

  public void setAuthorizedToSignOnBehalfOfOwner(@javax.annotation.Nullable Boolean authorizedToSignOnBehalfOfOwner) {
    this.authorizedToSignOnBehalfOfOwner = authorizedToSignOnBehalfOfOwner;
  }


  public IRAContingentBeneficiary authorizedTrader(@javax.annotation.Nullable Boolean authorizedTrader) {
    this.authorizedTrader = authorizedTrader;
    return this;
  }

  /**
   * Get authorizedTrader
   * @return authorizedTrader
   */
  @javax.annotation.Nullable
  public Boolean getAuthorizedTrader() {
    return authorizedTrader;
  }

  public void setAuthorizedTrader(@javax.annotation.Nullable Boolean authorizedTrader) {
    this.authorizedTrader = authorizedTrader;
  }


  public IRAContingentBeneficiary usTaxResident(@javax.annotation.Nullable Boolean usTaxResident) {
    this.usTaxResident = usTaxResident;
    return this;
  }

  /**
   * Get usTaxResident
   * @return usTaxResident
   */
  @javax.annotation.Nullable
  public Boolean getUsTaxResident() {
    return usTaxResident;
  }

  public void setUsTaxResident(@javax.annotation.Nullable Boolean usTaxResident) {
    this.usTaxResident = usTaxResident;
  }


  public IRAContingentBeneficiary translated(@javax.annotation.Nullable Boolean translated) {
    this.translated = translated;
    return this;
  }

  /**
   * Get translated
   * @return translated
   */
  @javax.annotation.Nullable
  public Boolean getTranslated() {
    return translated;
  }

  public void setTranslated(@javax.annotation.Nullable Boolean translated) {
    this.translated = translated;
  }


  public IRAContingentBeneficiary primaryTrustee(@javax.annotation.Nullable Boolean primaryTrustee) {
    this.primaryTrustee = primaryTrustee;
    return this;
  }

  /**
   * Get primaryTrustee
   * @return primaryTrustee
   */
  @javax.annotation.Nullable
  public Boolean getPrimaryTrustee() {
    return primaryTrustee;
  }

  public void setPrimaryTrustee(@javax.annotation.Nullable Boolean primaryTrustee) {
    this.primaryTrustee = primaryTrustee;
  }


  public IRAContingentBeneficiary ownershipPercentage(@javax.annotation.Nullable BigDecimal ownershipPercentage) {
    this.ownershipPercentage = ownershipPercentage;
    return this;
  }

  /**
   * Get ownershipPercentage
   * @return ownershipPercentage
   */
  @javax.annotation.Nullable
  public BigDecimal getOwnershipPercentage() {
    return ownershipPercentage;
  }

  public void setOwnershipPercentage(@javax.annotation.Nullable BigDecimal ownershipPercentage) {
    this.ownershipPercentage = ownershipPercentage;
  }


  public IRAContingentBeneficiary title(@javax.annotation.Nullable Title title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public Title getTitle() {
    return title;
  }

  public void setTitle(@javax.annotation.Nullable Title title) {
    this.title = title;
  }


  public IRAContingentBeneficiary relationship(@javax.annotation.Nullable RelationshipEnum relationship) {
    this.relationship = relationship;
    return this;
  }

  /**
   * Get relationship
   * @return relationship
   */
  @javax.annotation.Nullable
  public RelationshipEnum getRelationship() {
    return relationship;
  }

  public void setRelationship(@javax.annotation.Nullable RelationshipEnum relationship) {
    this.relationship = relationship;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IRAContingentBeneficiary irAContingentBeneficiary = (IRAContingentBeneficiary) o;
    return Objects.equals(this.name, irAContingentBeneficiary.name) &&
        Objects.equals(this.nativeName, irAContingentBeneficiary.nativeName) &&
        Objects.equals(this.birthName, irAContingentBeneficiary.birthName) &&
        Objects.equals(this.motherMaidenName, irAContingentBeneficiary.motherMaidenName) &&
        Objects.equals(this.dateOfBirth, irAContingentBeneficiary.dateOfBirth) &&
        Objects.equals(this.countryOfBirth, irAContingentBeneficiary.countryOfBirth) &&
        Objects.equals(this.cityOfBirth, irAContingentBeneficiary.cityOfBirth) &&
        Objects.equals(this.gender, irAContingentBeneficiary.gender) &&
        Objects.equals(this.maritalStatus, irAContingentBeneficiary.maritalStatus) &&
        Objects.equals(this.numDependents, irAContingentBeneficiary.numDependents) &&
        Objects.equals(this.residenceAddress, irAContingentBeneficiary.residenceAddress) &&
        Objects.equals(this.mailingAddress, irAContingentBeneficiary.mailingAddress) &&
        Objects.equals(this.phones, irAContingentBeneficiary.phones) &&
        Objects.equals(this.email, irAContingentBeneficiary.email) &&
        Objects.equals(this.identification, irAContingentBeneficiary.identification) &&
        Objects.equals(this.employmentType, irAContingentBeneficiary.employmentType) &&
        Objects.equals(this.employmentDetails, irAContingentBeneficiary.employmentDetails) &&
        Objects.equals(this.employeeTitle, irAContingentBeneficiary.employeeTitle) &&
        Objects.equals(this.taxResidencies, irAContingentBeneficiary.taxResidencies) &&
        Objects.equals(this.w9, irAContingentBeneficiary.w9) &&
        Objects.equals(this.w8Ben, irAContingentBeneficiary.w8Ben) &&
        Objects.equals(this.crs, irAContingentBeneficiary.crs) &&
        Objects.equals(this.prohibitedCountryQuestionnaire, irAContingentBeneficiary.prohibitedCountryQuestionnaire) &&
        Objects.equals(this.id, irAContingentBeneficiary.id) &&
        Objects.equals(this.externalId, irAContingentBeneficiary.externalId) &&
        Objects.equals(this.userId, irAContingentBeneficiary.userId) &&
        Objects.equals(this.sameMailAddress, irAContingentBeneficiary.sameMailAddress) &&
        Objects.equals(this.authorizedToSignOnBehalfOfOwner, irAContingentBeneficiary.authorizedToSignOnBehalfOfOwner) &&
        Objects.equals(this.authorizedTrader, irAContingentBeneficiary.authorizedTrader) &&
        Objects.equals(this.usTaxResident, irAContingentBeneficiary.usTaxResident) &&
        Objects.equals(this.translated, irAContingentBeneficiary.translated) &&
        Objects.equals(this.primaryTrustee, irAContingentBeneficiary.primaryTrustee) &&
        Objects.equals(this.ownershipPercentage, irAContingentBeneficiary.ownershipPercentage) &&
        Objects.equals(this.title, irAContingentBeneficiary.title) &&
        Objects.equals(this.relationship, irAContingentBeneficiary.relationship);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, nativeName, birthName, motherMaidenName, dateOfBirth, countryOfBirth, cityOfBirth, gender, maritalStatus, numDependents, residenceAddress, mailingAddress, phones, email, identification, employmentType, employmentDetails, employeeTitle, taxResidencies, w9, w8Ben, crs, prohibitedCountryQuestionnaire, id, externalId, userId, sameMailAddress, authorizedToSignOnBehalfOfOwner, authorizedTrader, usTaxResident, translated, primaryTrustee, ownershipPercentage, title, relationship);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IRAContingentBeneficiary {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nativeName: ").append(toIndentedString(nativeName)).append("\n");
    sb.append("    birthName: ").append(toIndentedString(birthName)).append("\n");
    sb.append("    motherMaidenName: ").append(toIndentedString(motherMaidenName)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    countryOfBirth: ").append(toIndentedString(countryOfBirth)).append("\n");
    sb.append("    cityOfBirth: ").append(toIndentedString(cityOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    numDependents: ").append(toIndentedString(numDependents)).append("\n");
    sb.append("    residenceAddress: ").append(toIndentedString(residenceAddress)).append("\n");
    sb.append("    mailingAddress: ").append(toIndentedString(mailingAddress)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    employmentDetails: ").append(toIndentedString(employmentDetails)).append("\n");
    sb.append("    employeeTitle: ").append(toIndentedString(employeeTitle)).append("\n");
    sb.append("    taxResidencies: ").append(toIndentedString(taxResidencies)).append("\n");
    sb.append("    w9: ").append(toIndentedString(w9)).append("\n");
    sb.append("    w8Ben: ").append(toIndentedString(w8Ben)).append("\n");
    sb.append("    crs: ").append(toIndentedString(crs)).append("\n");
    sb.append("    prohibitedCountryQuestionnaire: ").append(toIndentedString(prohibitedCountryQuestionnaire)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    sameMailAddress: ").append(toIndentedString(sameMailAddress)).append("\n");
    sb.append("    authorizedToSignOnBehalfOfOwner: ").append(toIndentedString(authorizedToSignOnBehalfOfOwner)).append("\n");
    sb.append("    authorizedTrader: ").append(toIndentedString(authorizedTrader)).append("\n");
    sb.append("    usTaxResident: ").append(toIndentedString(usTaxResident)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("    primaryTrustee: ").append(toIndentedString(primaryTrustee)).append("\n");
    sb.append("    ownershipPercentage: ").append(toIndentedString(ownershipPercentage)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("nativeName");
    openapiFields.add("birthName");
    openapiFields.add("motherMaidenName");
    openapiFields.add("dateOfBirth");
    openapiFields.add("countryOfBirth");
    openapiFields.add("cityOfBirth");
    openapiFields.add("gender");
    openapiFields.add("maritalStatus");
    openapiFields.add("numDependents");
    openapiFields.add("residenceAddress");
    openapiFields.add("mailingAddress");
    openapiFields.add("phones");
    openapiFields.add("email");
    openapiFields.add("identification");
    openapiFields.add("employmentType");
    openapiFields.add("employmentDetails");
    openapiFields.add("employeeTitle");
    openapiFields.add("taxResidencies");
    openapiFields.add("w9");
    openapiFields.add("w8Ben");
    openapiFields.add("crs");
    openapiFields.add("prohibitedCountryQuestionnaire");
    openapiFields.add("id");
    openapiFields.add("externalId");
    openapiFields.add("userId");
    openapiFields.add("sameMailAddress");
    openapiFields.add("authorizedToSignOnBehalfOfOwner");
    openapiFields.add("authorizedTrader");
    openapiFields.add("usTaxResident");
    openapiFields.add("translated");
    openapiFields.add("primaryTrustee");
    openapiFields.add("ownershipPercentage");
    openapiFields.add("title");
    openapiFields.add("relationship");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IRAContingentBeneficiary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IRAContingentBeneficiary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IRAContingentBeneficiary is not found in the empty JSON string", IRAContingentBeneficiary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IRAContingentBeneficiary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IRAContingentBeneficiary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        IndividualName.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `nativeName`
      if (jsonObj.get("nativeName") != null && !jsonObj.get("nativeName").isJsonNull()) {
        IndividualName.validateJsonElement(jsonObj.get("nativeName"));
      }
      // validate the optional field `birthName`
      if (jsonObj.get("birthName") != null && !jsonObj.get("birthName").isJsonNull()) {
        IndividualName.validateJsonElement(jsonObj.get("birthName"));
      }
      // validate the optional field `motherMaidenName`
      if (jsonObj.get("motherMaidenName") != null && !jsonObj.get("motherMaidenName").isJsonNull()) {
        IndividualName.validateJsonElement(jsonObj.get("motherMaidenName"));
      }
      if ((jsonObj.get("dateOfBirth") != null && !jsonObj.get("dateOfBirth").isJsonNull()) && !jsonObj.get("dateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOfBirth").toString()));
      }
      if ((jsonObj.get("countryOfBirth") != null && !jsonObj.get("countryOfBirth").isJsonNull()) && !jsonObj.get("countryOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryOfBirth").toString()));
      }
      if ((jsonObj.get("cityOfBirth") != null && !jsonObj.get("cityOfBirth").isJsonNull()) && !jsonObj.get("cityOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cityOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cityOfBirth").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      // validate the optional field `gender`
      if (jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) {
        GenderEnum.validateJsonElement(jsonObj.get("gender"));
      }
      if ((jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) && !jsonObj.get("maritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatus").toString()));
      }
      // validate the optional field `maritalStatus`
      if (jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) {
        MaritalStatusEnum.validateJsonElement(jsonObj.get("maritalStatus"));
      }
      // validate the optional field `residenceAddress`
      if (jsonObj.get("residenceAddress") != null && !jsonObj.get("residenceAddress").isJsonNull()) {
        ResidenceAddress.validateJsonElement(jsonObj.get("residenceAddress"));
      }
      // validate the optional field `mailingAddress`
      if (jsonObj.get("mailingAddress") != null && !jsonObj.get("mailingAddress").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("mailingAddress"));
      }
      if (jsonObj.get("phones") != null && !jsonObj.get("phones").isJsonNull()) {
        JsonArray jsonArrayphones = jsonObj.getAsJsonArray("phones");
        if (jsonArrayphones != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phones").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phones` to be an array in the JSON string but got `%s`", jsonObj.get("phones").toString()));
          }

          // validate the optional field `phones` (array)
          for (int i = 0; i < jsonArrayphones.size(); i++) {
            PhoneInfo.validateJsonElement(jsonArrayphones.get(i));
          };
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `identification`
      if (jsonObj.get("identification") != null && !jsonObj.get("identification").isJsonNull()) {
        Identification.validateJsonElement(jsonObj.get("identification"));
      }
      if ((jsonObj.get("employmentType") != null && !jsonObj.get("employmentType").isJsonNull()) && !jsonObj.get("employmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentType").toString()));
      }
      // validate the optional field `employmentDetails`
      if (jsonObj.get("employmentDetails") != null && !jsonObj.get("employmentDetails").isJsonNull()) {
        EmploymentDetails.validateJsonElement(jsonObj.get("employmentDetails"));
      }
      if ((jsonObj.get("employeeTitle") != null && !jsonObj.get("employeeTitle").isJsonNull()) && !jsonObj.get("employeeTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeTitle").toString()));
      }
      if (jsonObj.get("taxResidencies") != null && !jsonObj.get("taxResidencies").isJsonNull()) {
        JsonArray jsonArraytaxResidencies = jsonObj.getAsJsonArray("taxResidencies");
        if (jsonArraytaxResidencies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxResidencies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxResidencies` to be an array in the JSON string but got `%s`", jsonObj.get("taxResidencies").toString()));
          }

          // validate the optional field `taxResidencies` (array)
          for (int i = 0; i < jsonArraytaxResidencies.size(); i++) {
            TaxResidency.validateJsonElement(jsonArraytaxResidencies.get(i));
          };
        }
      }
      // validate the optional field `w9`
      if (jsonObj.get("w9") != null && !jsonObj.get("w9").isJsonNull()) {
        FormW9.validateJsonElement(jsonObj.get("w9"));
      }
      // validate the optional field `w8Ben`
      if (jsonObj.get("w8Ben") != null && !jsonObj.get("w8Ben").isJsonNull()) {
        FormW8BEN.validateJsonElement(jsonObj.get("w8Ben"));
      }
      // validate the optional field `crs`
      if (jsonObj.get("crs") != null && !jsonObj.get("crs").isJsonNull()) {
        FormCRS.validateJsonElement(jsonObj.get("crs"));
      }
      // validate the optional field `prohibitedCountryQuestionnaire`
      if (jsonObj.get("prohibitedCountryQuestionnaire") != null && !jsonObj.get("prohibitedCountryQuestionnaire").isJsonNull()) {
        ProhibitedCountryQuestionnaireList.validateJsonElement(jsonObj.get("prohibitedCountryQuestionnaire"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      // validate the optional field `title`
      if (jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) {
        Title.validateJsonElement(jsonObj.get("title"));
      }
      if ((jsonObj.get("relationship") != null && !jsonObj.get("relationship").isJsonNull()) && !jsonObj.get("relationship").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relationship` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relationship").toString()));
      }
      // validate the optional field `relationship`
      if (jsonObj.get("relationship") != null && !jsonObj.get("relationship").isJsonNull()) {
        RelationshipEnum.validateJsonElement(jsonObj.get("relationship"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IRAContingentBeneficiary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IRAContingentBeneficiary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IRAContingentBeneficiary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IRAContingentBeneficiary.class));

       return (TypeAdapter<T>) new TypeAdapter<IRAContingentBeneficiary>() {
           @Override
           public void write(JsonWriter out, IRAContingentBeneficiary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IRAContingentBeneficiary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IRAContingentBeneficiary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IRAContingentBeneficiary
   * @throws IOException if the JSON string is invalid with respect to IRAContingentBeneficiary
   */
  public static IRAContingentBeneficiary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IRAContingentBeneficiary.class);
  }

  /**
   * Convert an instance of IRAContingentBeneficiary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

