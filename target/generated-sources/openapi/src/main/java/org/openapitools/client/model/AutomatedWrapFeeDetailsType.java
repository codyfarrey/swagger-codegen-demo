/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AnnualBlendedPercentage;
import org.openapitools.client.model.CommissionScheduleType;
import org.openapitools.client.model.NAVRangeType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AutomatedWrapFeeDetailsType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class AutomatedWrapFeeDetailsType {
  public static final String SERIALIZED_NAME_PER_TRADE_MARKUPS = "perTradeMarkups";
  @SerializedName(SERIALIZED_NAME_PER_TRADE_MARKUPS)
  @javax.annotation.Nullable
  private CommissionScheduleType perTradeMarkups;

  public static final String SERIALIZED_NAME_ANNUAL_BLENDED_PERCENTAGES = "annualBlendedPercentages";
  @SerializedName(SERIALIZED_NAME_ANNUAL_BLENDED_PERCENTAGES)
  @javax.annotation.Nullable
  private List<AnnualBlendedPercentage> annualBlendedPercentages = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAV_RANGES = "navRanges";
  @SerializedName(SERIALIZED_NAME_NAV_RANGES)
  @javax.annotation.Nullable
  private List<NAVRangeType> navRanges = new ArrayList<>();

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ANNUALFLATFEE("ANNUALFLATFEE"),
    
    ANNUALFLATFEE_MONTHLY("ANNUALFLATFEE_MONTHLY"),
    
    ANNUALFLATFEE_QUATERLY("ANNUALFLATFEE_QUATERLY"),
    
    PERCENTOFEQUITY("PERCENTOFEQUITY"),
    
    PERCENTOFEQUITY_MONTHLY("PERCENTOFEQUITY_MONTHLY"),
    
    PERCENTOFEQUITY_QUATERLY("PERCENTOFEQUITY_QUATERLY"),
    
    PERCENTOFEQUITY_QUARTERLY("PERCENTOFEQUITY_QUARTERLY"),
    
    BLENDEDPERCENTOFEQUITY("BLENDEDPERCENTOFEQUITY"),
    
    BLENDEDPERCENTOFEQUITY_MONTHLY("BLENDEDPERCENTOFEQUITY_MONTHLY"),
    
    BLENDEDPERCENTOFEQUITY_QUARTERLY("BLENDEDPERCENTOFEQUITY_QUARTERLY"),
    
    PERCENTOFPROFIT("PERCENTOFPROFIT"),
    
    PERCENTOFPROFIT_QUARTER("PERCENTOFPROFIT_QUARTER"),
    
    INVOICE_LIMIT("INVOICE_LIMIT"),
    
    INVOICE_LIMIT_Q("INVOICE_LIMIT_Q"),
    
    PERTRADE("PERTRADE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private TypeEnum type;

  public static final String SERIALIZED_NAME_MAX_FEE = "maxFee";
  @SerializedName(SERIALIZED_NAME_MAX_FEE)
  @javax.annotation.Nullable
  private BigDecimal maxFee;

  public static final String SERIALIZED_NAME_NUM_CONTRACTS = "numContracts";
  @SerializedName(SERIALIZED_NAME_NUM_CONTRACTS)
  @javax.annotation.Nullable
  private Integer numContracts;

  public static final String SERIALIZED_NAME_POST_FREQUENCY = "postFrequency";
  @SerializedName(SERIALIZED_NAME_POST_FREQUENCY)
  @javax.annotation.Nullable
  private String postFrequency;

  public static final String SERIALIZED_NAME_PERCENT_OF_N_L_V_CAP = "percentOfNLVCap";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_N_L_V_CAP)
  @javax.annotation.Nullable
  private String percentOfNLVCap;

  public static final String SERIALIZED_NAME_PERCENT_OF_N_L_V_CAP_Q = "percentOfNLVCapQ";
  @SerializedName(SERIALIZED_NAME_PERCENT_OF_N_L_V_CAP_Q)
  @javax.annotation.Nullable
  private String percentOfNLVCapQ;

  public AutomatedWrapFeeDetailsType() {
  }

  public AutomatedWrapFeeDetailsType perTradeMarkups(@javax.annotation.Nullable CommissionScheduleType perTradeMarkups) {
    this.perTradeMarkups = perTradeMarkups;
    return this;
  }

  /**
   * Get perTradeMarkups
   * @return perTradeMarkups
   */
  @javax.annotation.Nullable
  public CommissionScheduleType getPerTradeMarkups() {
    return perTradeMarkups;
  }

  public void setPerTradeMarkups(@javax.annotation.Nullable CommissionScheduleType perTradeMarkups) {
    this.perTradeMarkups = perTradeMarkups;
  }


  public AutomatedWrapFeeDetailsType annualBlendedPercentages(@javax.annotation.Nullable List<AnnualBlendedPercentage> annualBlendedPercentages) {
    this.annualBlendedPercentages = annualBlendedPercentages;
    return this;
  }

  public AutomatedWrapFeeDetailsType addAnnualBlendedPercentagesItem(AnnualBlendedPercentage annualBlendedPercentagesItem) {
    if (this.annualBlendedPercentages == null) {
      this.annualBlendedPercentages = new ArrayList<>();
    }
    this.annualBlendedPercentages.add(annualBlendedPercentagesItem);
    return this;
  }

  /**
   * Get annualBlendedPercentages
   * @return annualBlendedPercentages
   */
  @javax.annotation.Nullable
  public List<AnnualBlendedPercentage> getAnnualBlendedPercentages() {
    return annualBlendedPercentages;
  }

  public void setAnnualBlendedPercentages(@javax.annotation.Nullable List<AnnualBlendedPercentage> annualBlendedPercentages) {
    this.annualBlendedPercentages = annualBlendedPercentages;
  }


  public AutomatedWrapFeeDetailsType navRanges(@javax.annotation.Nullable List<NAVRangeType> navRanges) {
    this.navRanges = navRanges;
    return this;
  }

  public AutomatedWrapFeeDetailsType addNavRangesItem(NAVRangeType navRangesItem) {
    if (this.navRanges == null) {
      this.navRanges = new ArrayList<>();
    }
    this.navRanges.add(navRangesItem);
    return this;
  }

  /**
   * Get navRanges
   * @return navRanges
   */
  @javax.annotation.Nullable
  public List<NAVRangeType> getNavRanges() {
    return navRanges;
  }

  public void setNavRanges(@javax.annotation.Nullable List<NAVRangeType> navRanges) {
    this.navRanges = navRanges;
  }


  public AutomatedWrapFeeDetailsType type(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }


  public AutomatedWrapFeeDetailsType maxFee(@javax.annotation.Nullable BigDecimal maxFee) {
    this.maxFee = maxFee;
    return this;
  }

  /**
   * Get maxFee
   * @return maxFee
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxFee() {
    return maxFee;
  }

  public void setMaxFee(@javax.annotation.Nullable BigDecimal maxFee) {
    this.maxFee = maxFee;
  }


  public AutomatedWrapFeeDetailsType numContracts(@javax.annotation.Nullable Integer numContracts) {
    this.numContracts = numContracts;
    return this;
  }

  /**
   * Get numContracts
   * @return numContracts
   */
  @javax.annotation.Nullable
  public Integer getNumContracts() {
    return numContracts;
  }

  public void setNumContracts(@javax.annotation.Nullable Integer numContracts) {
    this.numContracts = numContracts;
  }


  public AutomatedWrapFeeDetailsType postFrequency(@javax.annotation.Nullable String postFrequency) {
    this.postFrequency = postFrequency;
    return this;
  }

  /**
   * Get postFrequency
   * @return postFrequency
   */
  @javax.annotation.Nullable
  public String getPostFrequency() {
    return postFrequency;
  }

  public void setPostFrequency(@javax.annotation.Nullable String postFrequency) {
    this.postFrequency = postFrequency;
  }


  public AutomatedWrapFeeDetailsType percentOfNLVCap(@javax.annotation.Nullable String percentOfNLVCap) {
    this.percentOfNLVCap = percentOfNLVCap;
    return this;
  }

  /**
   * Get percentOfNLVCap
   * @return percentOfNLVCap
   */
  @javax.annotation.Nullable
  public String getPercentOfNLVCap() {
    return percentOfNLVCap;
  }

  public void setPercentOfNLVCap(@javax.annotation.Nullable String percentOfNLVCap) {
    this.percentOfNLVCap = percentOfNLVCap;
  }


  public AutomatedWrapFeeDetailsType percentOfNLVCapQ(@javax.annotation.Nullable String percentOfNLVCapQ) {
    this.percentOfNLVCapQ = percentOfNLVCapQ;
    return this;
  }

  /**
   * Get percentOfNLVCapQ
   * @return percentOfNLVCapQ
   */
  @javax.annotation.Nullable
  public String getPercentOfNLVCapQ() {
    return percentOfNLVCapQ;
  }

  public void setPercentOfNLVCapQ(@javax.annotation.Nullable String percentOfNLVCapQ) {
    this.percentOfNLVCapQ = percentOfNLVCapQ;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomatedWrapFeeDetailsType automatedWrapFeeDetailsType = (AutomatedWrapFeeDetailsType) o;
    return Objects.equals(this.perTradeMarkups, automatedWrapFeeDetailsType.perTradeMarkups) &&
        Objects.equals(this.annualBlendedPercentages, automatedWrapFeeDetailsType.annualBlendedPercentages) &&
        Objects.equals(this.navRanges, automatedWrapFeeDetailsType.navRanges) &&
        Objects.equals(this.type, automatedWrapFeeDetailsType.type) &&
        Objects.equals(this.maxFee, automatedWrapFeeDetailsType.maxFee) &&
        Objects.equals(this.numContracts, automatedWrapFeeDetailsType.numContracts) &&
        Objects.equals(this.postFrequency, automatedWrapFeeDetailsType.postFrequency) &&
        Objects.equals(this.percentOfNLVCap, automatedWrapFeeDetailsType.percentOfNLVCap) &&
        Objects.equals(this.percentOfNLVCapQ, automatedWrapFeeDetailsType.percentOfNLVCapQ);
  }

  @Override
  public int hashCode() {
    return Objects.hash(perTradeMarkups, annualBlendedPercentages, navRanges, type, maxFee, numContracts, postFrequency, percentOfNLVCap, percentOfNLVCapQ);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomatedWrapFeeDetailsType {\n");
    sb.append("    perTradeMarkups: ").append(toIndentedString(perTradeMarkups)).append("\n");
    sb.append("    annualBlendedPercentages: ").append(toIndentedString(annualBlendedPercentages)).append("\n");
    sb.append("    navRanges: ").append(toIndentedString(navRanges)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    maxFee: ").append(toIndentedString(maxFee)).append("\n");
    sb.append("    numContracts: ").append(toIndentedString(numContracts)).append("\n");
    sb.append("    postFrequency: ").append(toIndentedString(postFrequency)).append("\n");
    sb.append("    percentOfNLVCap: ").append(toIndentedString(percentOfNLVCap)).append("\n");
    sb.append("    percentOfNLVCapQ: ").append(toIndentedString(percentOfNLVCapQ)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("perTradeMarkups");
    openapiFields.add("annualBlendedPercentages");
    openapiFields.add("navRanges");
    openapiFields.add("type");
    openapiFields.add("maxFee");
    openapiFields.add("numContracts");
    openapiFields.add("postFrequency");
    openapiFields.add("percentOfNLVCap");
    openapiFields.add("percentOfNLVCapQ");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutomatedWrapFeeDetailsType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutomatedWrapFeeDetailsType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutomatedWrapFeeDetailsType is not found in the empty JSON string", AutomatedWrapFeeDetailsType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutomatedWrapFeeDetailsType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutomatedWrapFeeDetailsType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `perTradeMarkups`
      if (jsonObj.get("perTradeMarkups") != null && !jsonObj.get("perTradeMarkups").isJsonNull()) {
        CommissionScheduleType.validateJsonElement(jsonObj.get("perTradeMarkups"));
      }
      if (jsonObj.get("annualBlendedPercentages") != null && !jsonObj.get("annualBlendedPercentages").isJsonNull()) {
        JsonArray jsonArrayannualBlendedPercentages = jsonObj.getAsJsonArray("annualBlendedPercentages");
        if (jsonArrayannualBlendedPercentages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("annualBlendedPercentages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `annualBlendedPercentages` to be an array in the JSON string but got `%s`", jsonObj.get("annualBlendedPercentages").toString()));
          }

          // validate the optional field `annualBlendedPercentages` (array)
          for (int i = 0; i < jsonArrayannualBlendedPercentages.size(); i++) {
            AnnualBlendedPercentage.validateJsonElement(jsonArrayannualBlendedPercentages.get(i));
          };
        }
      }
      if (jsonObj.get("navRanges") != null && !jsonObj.get("navRanges").isJsonNull()) {
        JsonArray jsonArraynavRanges = jsonObj.getAsJsonArray("navRanges");
        if (jsonArraynavRanges != null) {
          // ensure the json data is an array
          if (!jsonObj.get("navRanges").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `navRanges` to be an array in the JSON string but got `%s`", jsonObj.get("navRanges").toString()));
          }

          // validate the optional field `navRanges` (array)
          for (int i = 0; i < jsonArraynavRanges.size(); i++) {
            NAVRangeType.validateJsonElement(jsonArraynavRanges.get(i));
          };
        }
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("postFrequency") != null && !jsonObj.get("postFrequency").isJsonNull()) && !jsonObj.get("postFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postFrequency").toString()));
      }
      if ((jsonObj.get("percentOfNLVCap") != null && !jsonObj.get("percentOfNLVCap").isJsonNull()) && !jsonObj.get("percentOfNLVCap").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentOfNLVCap` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentOfNLVCap").toString()));
      }
      if ((jsonObj.get("percentOfNLVCapQ") != null && !jsonObj.get("percentOfNLVCapQ").isJsonNull()) && !jsonObj.get("percentOfNLVCapQ").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `percentOfNLVCapQ` to be a primitive type in the JSON string but got `%s`", jsonObj.get("percentOfNLVCapQ").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutomatedWrapFeeDetailsType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutomatedWrapFeeDetailsType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutomatedWrapFeeDetailsType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutomatedWrapFeeDetailsType.class));

       return (TypeAdapter<T>) new TypeAdapter<AutomatedWrapFeeDetailsType>() {
           @Override
           public void write(JsonWriter out, AutomatedWrapFeeDetailsType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutomatedWrapFeeDetailsType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutomatedWrapFeeDetailsType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutomatedWrapFeeDetailsType
   * @throws IOException if the JSON string is invalid with respect to AutomatedWrapFeeDetailsType
   */
  public static AutomatedWrapFeeDetailsType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutomatedWrapFeeDetailsType.class);
  }

  /**
   * Convert an instance of AutomatedWrapFeeDetailsType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

