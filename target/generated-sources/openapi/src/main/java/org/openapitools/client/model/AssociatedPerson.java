/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AssociatedPerson
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class AssociatedPerson {
  public static final String SERIALIZED_NAME_ENTITY_ID = "entityId";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  @javax.annotation.Nullable
  private Integer entityId;

  public static final String SERIALIZED_NAME_EXTERNAL_CODE = "externalCode";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_CODE)
  @javax.annotation.Nullable
  private String externalCode;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  @javax.annotation.Nullable
  private String middleName;

  public static final String SERIALIZED_NAME_MIDDLE_INITIAL = "middleInitial";
  @SerializedName(SERIALIZED_NAME_MIDDLE_INITIAL)
  @javax.annotation.Nullable
  private String middleInitial;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  @javax.annotation.Nullable
  private String suffix;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nullable
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD_DATE = "passwordDate";
  @SerializedName(SERIALIZED_NAME_PASSWORD_DATE)
  @javax.annotation.Nullable
  private String passwordDate;

  public static final String SERIALIZED_NAME_USER_STATUS = "userStatus";
  @SerializedName(SERIALIZED_NAME_USER_STATUS)
  @javax.annotation.Nullable
  private String userStatus;

  public static final String SERIALIZED_NAME_LAST_LOGIN = "lastLogin";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN)
  @javax.annotation.Nullable
  private String lastLogin;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  @javax.annotation.Nullable
  private String gender;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "maritalStatus";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  @javax.annotation.Nullable
  private String maritalStatus;

  public static final String SERIALIZED_NAME_SALUTATION = "salutation";
  @SerializedName(SERIALIZED_NAME_SALUTATION)
  @javax.annotation.Nullable
  private String salutation;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_COUNTRY_OF_CITIZENSHIP = "countryOfCitizenship";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_CITIZENSHIP)
  @javax.annotation.Nullable
  private String countryOfCitizenship;

  public static final String SERIALIZED_NAME_COUNTRY_OF_BIRTH = "countryOfBirth";
  @SerializedName(SERIALIZED_NAME_COUNTRY_OF_BIRTH)
  @javax.annotation.Nullable
  private String countryOfBirth;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  @javax.annotation.Nullable
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_MOTERS_MAIDEN_NAME = "motersMaidenName";
  @SerializedName(SERIALIZED_NAME_MOTERS_MAIDEN_NAME)
  @javax.annotation.Nullable
  private String motersMaidenName;

  public static final String SERIALIZED_NAME_NUMBER_OF_DEPENDENTS = "numberOfDependents";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DEPENDENTS)
  @javax.annotation.Nullable
  private Integer numberOfDependents;

  public static final String SERIALIZED_NAME_SECURITY_DEVICE = "securityDevice";
  @SerializedName(SERIALIZED_NAME_SECURITY_DEVICE)
  @javax.annotation.Nullable
  private String securityDevice;

  public static final String SERIALIZED_NAME_COMMERCIAL = "commercial";
  @SerializedName(SERIALIZED_NAME_COMMERCIAL)
  @javax.annotation.Nullable
  private String commercial;

  public static final String SERIALIZED_NAME_PHONES = "phones";
  @SerializedName(SERIALIZED_NAME_PHONES)
  @javax.annotation.Nullable
  private Map<String, String> phones = new HashMap<>();

  public static final String SERIALIZED_NAME_RESIDENCE = "residence";
  @SerializedName(SERIALIZED_NAME_RESIDENCE)
  @javax.annotation.Nullable
  private Map<String, String> residence = new HashMap<>();

  public static final String SERIALIZED_NAME_MAILING = "mailing";
  @SerializedName(SERIALIZED_NAME_MAILING)
  @javax.annotation.Nullable
  private Map<String, String> mailing = new HashMap<>();

  public static final String SERIALIZED_NAME_ASSOCIATIONS = "associations";
  @SerializedName(SERIALIZED_NAME_ASSOCIATIONS)
  @javax.annotation.Nullable
  private Set<String> associations = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_IDENTITY_DOCUMENTS = "identityDocuments";
  @SerializedName(SERIALIZED_NAME_IDENTITY_DOCUMENTS)
  @javax.annotation.Nullable
  private List<Map<String, String>> identityDocuments = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMPLOYMENT_TYPE = "employmentType";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_TYPE)
  @javax.annotation.Nullable
  private String employmentType;

  public static final String SERIALIZED_NAME_EMPLOYMENT_DETAILS = "employmentDetails";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_DETAILS)
  @javax.annotation.Nullable
  private Map<String, Object> employmentDetails = new HashMap<>();

  public static final String SERIALIZED_NAME_SUBSCRIBED_SERVICES = "subscribedServices";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBED_SERVICES)
  @javax.annotation.Nullable
  private List<Map<String, Object>> subscribedServices = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_TREATY_DETAILS = "taxTreatyDetails";
  @SerializedName(SERIALIZED_NAME_TAX_TREATY_DETAILS)
  @javax.annotation.Nullable
  private List<Map<String, String>> taxTreatyDetails = new ArrayList<>();

  public AssociatedPerson() {
  }

  public AssociatedPerson entityId(@javax.annotation.Nullable Integer entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Get entityId
   * @return entityId
   */
  @javax.annotation.Nullable
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(@javax.annotation.Nullable Integer entityId) {
    this.entityId = entityId;
  }


  public AssociatedPerson externalCode(@javax.annotation.Nullable String externalCode) {
    this.externalCode = externalCode;
    return this;
  }

  /**
   * Get externalCode
   * @return externalCode
   */
  @javax.annotation.Nullable
  public String getExternalCode() {
    return externalCode;
  }

  public void setExternalCode(@javax.annotation.Nullable String externalCode) {
    this.externalCode = externalCode;
  }


  public AssociatedPerson firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public AssociatedPerson middleName(@javax.annotation.Nullable String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(@javax.annotation.Nullable String middleName) {
    this.middleName = middleName;
  }


  public AssociatedPerson middleInitial(@javax.annotation.Nullable String middleInitial) {
    this.middleInitial = middleInitial;
    return this;
  }

  /**
   * Get middleInitial
   * @return middleInitial
   */
  @javax.annotation.Nullable
  public String getMiddleInitial() {
    return middleInitial;
  }

  public void setMiddleInitial(@javax.annotation.Nullable String middleInitial) {
    this.middleInitial = middleInitial;
  }


  public AssociatedPerson lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public AssociatedPerson suffix(@javax.annotation.Nullable String suffix) {
    this.suffix = suffix;
    return this;
  }

  /**
   * Get suffix
   * @return suffix
   */
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(@javax.annotation.Nullable String suffix) {
    this.suffix = suffix;
  }


  public AssociatedPerson username(@javax.annotation.Nullable String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }


  public AssociatedPerson passwordDate(@javax.annotation.Nullable String passwordDate) {
    this.passwordDate = passwordDate;
    return this;
  }

  /**
   * Get passwordDate
   * @return passwordDate
   */
  @javax.annotation.Nullable
  public String getPasswordDate() {
    return passwordDate;
  }

  public void setPasswordDate(@javax.annotation.Nullable String passwordDate) {
    this.passwordDate = passwordDate;
  }


  public AssociatedPerson userStatus(@javax.annotation.Nullable String userStatus) {
    this.userStatus = userStatus;
    return this;
  }

  /**
   * Get userStatus
   * @return userStatus
   */
  @javax.annotation.Nullable
  public String getUserStatus() {
    return userStatus;
  }

  public void setUserStatus(@javax.annotation.Nullable String userStatus) {
    this.userStatus = userStatus;
  }


  public AssociatedPerson lastLogin(@javax.annotation.Nullable String lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  /**
   * Get lastLogin
   * @return lastLogin
   */
  @javax.annotation.Nullable
  public String getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(@javax.annotation.Nullable String lastLogin) {
    this.lastLogin = lastLogin;
  }


  public AssociatedPerson gender(@javax.annotation.Nullable String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(@javax.annotation.Nullable String gender) {
    this.gender = gender;
  }


  public AssociatedPerson maritalStatus(@javax.annotation.Nullable String maritalStatus) {
    this.maritalStatus = maritalStatus;
    return this;
  }

  /**
   * Get maritalStatus
   * @return maritalStatus
   */
  @javax.annotation.Nullable
  public String getMaritalStatus() {
    return maritalStatus;
  }

  public void setMaritalStatus(@javax.annotation.Nullable String maritalStatus) {
    this.maritalStatus = maritalStatus;
  }


  public AssociatedPerson salutation(@javax.annotation.Nullable String salutation) {
    this.salutation = salutation;
    return this;
  }

  /**
   * Get salutation
   * @return salutation
   */
  @javax.annotation.Nullable
  public String getSalutation() {
    return salutation;
  }

  public void setSalutation(@javax.annotation.Nullable String salutation) {
    this.salutation = salutation;
  }


  public AssociatedPerson email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public AssociatedPerson countryOfCitizenship(@javax.annotation.Nullable String countryOfCitizenship) {
    this.countryOfCitizenship = countryOfCitizenship;
    return this;
  }

  /**
   * Get countryOfCitizenship
   * @return countryOfCitizenship
   */
  @javax.annotation.Nullable
  public String getCountryOfCitizenship() {
    return countryOfCitizenship;
  }

  public void setCountryOfCitizenship(@javax.annotation.Nullable String countryOfCitizenship) {
    this.countryOfCitizenship = countryOfCitizenship;
  }


  public AssociatedPerson countryOfBirth(@javax.annotation.Nullable String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
    return this;
  }

  /**
   * Get countryOfBirth
   * @return countryOfBirth
   */
  @javax.annotation.Nullable
  public String getCountryOfBirth() {
    return countryOfBirth;
  }

  public void setCountryOfBirth(@javax.annotation.Nullable String countryOfBirth) {
    this.countryOfBirth = countryOfBirth;
  }


  public AssociatedPerson dateOfBirth(@javax.annotation.Nullable String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

  /**
   * Get dateOfBirth
   * @return dateOfBirth
   */
  @javax.annotation.Nullable
  public String getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(@javax.annotation.Nullable String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public AssociatedPerson motersMaidenName(@javax.annotation.Nullable String motersMaidenName) {
    this.motersMaidenName = motersMaidenName;
    return this;
  }

  /**
   * Get motersMaidenName
   * @return motersMaidenName
   */
  @javax.annotation.Nullable
  public String getMotersMaidenName() {
    return motersMaidenName;
  }

  public void setMotersMaidenName(@javax.annotation.Nullable String motersMaidenName) {
    this.motersMaidenName = motersMaidenName;
  }


  public AssociatedPerson numberOfDependents(@javax.annotation.Nullable Integer numberOfDependents) {
    this.numberOfDependents = numberOfDependents;
    return this;
  }

  /**
   * Get numberOfDependents
   * @return numberOfDependents
   */
  @javax.annotation.Nullable
  public Integer getNumberOfDependents() {
    return numberOfDependents;
  }

  public void setNumberOfDependents(@javax.annotation.Nullable Integer numberOfDependents) {
    this.numberOfDependents = numberOfDependents;
  }


  public AssociatedPerson securityDevice(@javax.annotation.Nullable String securityDevice) {
    this.securityDevice = securityDevice;
    return this;
  }

  /**
   * Get securityDevice
   * @return securityDevice
   */
  @javax.annotation.Nullable
  public String getSecurityDevice() {
    return securityDevice;
  }

  public void setSecurityDevice(@javax.annotation.Nullable String securityDevice) {
    this.securityDevice = securityDevice;
  }


  public AssociatedPerson commercial(@javax.annotation.Nullable String commercial) {
    this.commercial = commercial;
    return this;
  }

  /**
   * Get commercial
   * @return commercial
   */
  @javax.annotation.Nullable
  public String getCommercial() {
    return commercial;
  }

  public void setCommercial(@javax.annotation.Nullable String commercial) {
    this.commercial = commercial;
  }


  public AssociatedPerson phones(@javax.annotation.Nullable Map<String, String> phones) {
    this.phones = phones;
    return this;
  }

  public AssociatedPerson putPhonesItem(String key, String phonesItem) {
    if (this.phones == null) {
      this.phones = new HashMap<>();
    }
    this.phones.put(key, phonesItem);
    return this;
  }

  /**
   * Get phones
   * @return phones
   */
  @javax.annotation.Nullable
  public Map<String, String> getPhones() {
    return phones;
  }

  public void setPhones(@javax.annotation.Nullable Map<String, String> phones) {
    this.phones = phones;
  }


  public AssociatedPerson residence(@javax.annotation.Nullable Map<String, String> residence) {
    this.residence = residence;
    return this;
  }

  public AssociatedPerson putResidenceItem(String key, String residenceItem) {
    if (this.residence == null) {
      this.residence = new HashMap<>();
    }
    this.residence.put(key, residenceItem);
    return this;
  }

  /**
   * Get residence
   * @return residence
   */
  @javax.annotation.Nullable
  public Map<String, String> getResidence() {
    return residence;
  }

  public void setResidence(@javax.annotation.Nullable Map<String, String> residence) {
    this.residence = residence;
  }


  public AssociatedPerson mailing(@javax.annotation.Nullable Map<String, String> mailing) {
    this.mailing = mailing;
    return this;
  }

  public AssociatedPerson putMailingItem(String key, String mailingItem) {
    if (this.mailing == null) {
      this.mailing = new HashMap<>();
    }
    this.mailing.put(key, mailingItem);
    return this;
  }

  /**
   * Get mailing
   * @return mailing
   */
  @javax.annotation.Nullable
  public Map<String, String> getMailing() {
    return mailing;
  }

  public void setMailing(@javax.annotation.Nullable Map<String, String> mailing) {
    this.mailing = mailing;
  }


  public AssociatedPerson associations(@javax.annotation.Nullable Set<String> associations) {
    this.associations = associations;
    return this;
  }

  public AssociatedPerson addAssociationsItem(String associationsItem) {
    if (this.associations == null) {
      this.associations = new LinkedHashSet<>();
    }
    this.associations.add(associationsItem);
    return this;
  }

  /**
   * Get associations
   * @return associations
   */
  @javax.annotation.Nullable
  public Set<String> getAssociations() {
    return associations;
  }

  public void setAssociations(@javax.annotation.Nullable Set<String> associations) {
    this.associations = associations;
  }


  public AssociatedPerson identityDocuments(@javax.annotation.Nullable List<Map<String, String>> identityDocuments) {
    this.identityDocuments = identityDocuments;
    return this;
  }

  public AssociatedPerson addIdentityDocumentsItem(Map<String, String> identityDocumentsItem) {
    if (this.identityDocuments == null) {
      this.identityDocuments = new ArrayList<>();
    }
    this.identityDocuments.add(identityDocumentsItem);
    return this;
  }

  /**
   * Get identityDocuments
   * @return identityDocuments
   */
  @javax.annotation.Nullable
  public List<Map<String, String>> getIdentityDocuments() {
    return identityDocuments;
  }

  public void setIdentityDocuments(@javax.annotation.Nullable List<Map<String, String>> identityDocuments) {
    this.identityDocuments = identityDocuments;
  }


  public AssociatedPerson employmentType(@javax.annotation.Nullable String employmentType) {
    this.employmentType = employmentType;
    return this;
  }

  /**
   * Get employmentType
   * @return employmentType
   */
  @javax.annotation.Nullable
  public String getEmploymentType() {
    return employmentType;
  }

  public void setEmploymentType(@javax.annotation.Nullable String employmentType) {
    this.employmentType = employmentType;
  }


  public AssociatedPerson employmentDetails(@javax.annotation.Nullable Map<String, Object> employmentDetails) {
    this.employmentDetails = employmentDetails;
    return this;
  }

  public AssociatedPerson putEmploymentDetailsItem(String key, Object employmentDetailsItem) {
    if (this.employmentDetails == null) {
      this.employmentDetails = new HashMap<>();
    }
    this.employmentDetails.put(key, employmentDetailsItem);
    return this;
  }

  /**
   * Get employmentDetails
   * @return employmentDetails
   */
  @javax.annotation.Nullable
  public Map<String, Object> getEmploymentDetails() {
    return employmentDetails;
  }

  public void setEmploymentDetails(@javax.annotation.Nullable Map<String, Object> employmentDetails) {
    this.employmentDetails = employmentDetails;
  }


  public AssociatedPerson subscribedServices(@javax.annotation.Nullable List<Map<String, Object>> subscribedServices) {
    this.subscribedServices = subscribedServices;
    return this;
  }

  public AssociatedPerson addSubscribedServicesItem(Map<String, Object> subscribedServicesItem) {
    if (this.subscribedServices == null) {
      this.subscribedServices = new ArrayList<>();
    }
    this.subscribedServices.add(subscribedServicesItem);
    return this;
  }

  /**
   * Get subscribedServices
   * @return subscribedServices
   */
  @javax.annotation.Nullable
  public List<Map<String, Object>> getSubscribedServices() {
    return subscribedServices;
  }

  public void setSubscribedServices(@javax.annotation.Nullable List<Map<String, Object>> subscribedServices) {
    this.subscribedServices = subscribedServices;
  }


  public AssociatedPerson taxTreatyDetails(@javax.annotation.Nullable List<Map<String, String>> taxTreatyDetails) {
    this.taxTreatyDetails = taxTreatyDetails;
    return this;
  }

  public AssociatedPerson addTaxTreatyDetailsItem(Map<String, String> taxTreatyDetailsItem) {
    if (this.taxTreatyDetails == null) {
      this.taxTreatyDetails = new ArrayList<>();
    }
    this.taxTreatyDetails.add(taxTreatyDetailsItem);
    return this;
  }

  /**
   * Get taxTreatyDetails
   * @return taxTreatyDetails
   */
  @javax.annotation.Nullable
  public List<Map<String, String>> getTaxTreatyDetails() {
    return taxTreatyDetails;
  }

  public void setTaxTreatyDetails(@javax.annotation.Nullable List<Map<String, String>> taxTreatyDetails) {
    this.taxTreatyDetails = taxTreatyDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssociatedPerson associatedPerson = (AssociatedPerson) o;
    return Objects.equals(this.entityId, associatedPerson.entityId) &&
        Objects.equals(this.externalCode, associatedPerson.externalCode) &&
        Objects.equals(this.firstName, associatedPerson.firstName) &&
        Objects.equals(this.middleName, associatedPerson.middleName) &&
        Objects.equals(this.middleInitial, associatedPerson.middleInitial) &&
        Objects.equals(this.lastName, associatedPerson.lastName) &&
        Objects.equals(this.suffix, associatedPerson.suffix) &&
        Objects.equals(this.username, associatedPerson.username) &&
        Objects.equals(this.passwordDate, associatedPerson.passwordDate) &&
        Objects.equals(this.userStatus, associatedPerson.userStatus) &&
        Objects.equals(this.lastLogin, associatedPerson.lastLogin) &&
        Objects.equals(this.gender, associatedPerson.gender) &&
        Objects.equals(this.maritalStatus, associatedPerson.maritalStatus) &&
        Objects.equals(this.salutation, associatedPerson.salutation) &&
        Objects.equals(this.email, associatedPerson.email) &&
        Objects.equals(this.countryOfCitizenship, associatedPerson.countryOfCitizenship) &&
        Objects.equals(this.countryOfBirth, associatedPerson.countryOfBirth) &&
        Objects.equals(this.dateOfBirth, associatedPerson.dateOfBirth) &&
        Objects.equals(this.motersMaidenName, associatedPerson.motersMaidenName) &&
        Objects.equals(this.numberOfDependents, associatedPerson.numberOfDependents) &&
        Objects.equals(this.securityDevice, associatedPerson.securityDevice) &&
        Objects.equals(this.commercial, associatedPerson.commercial) &&
        Objects.equals(this.phones, associatedPerson.phones) &&
        Objects.equals(this.residence, associatedPerson.residence) &&
        Objects.equals(this.mailing, associatedPerson.mailing) &&
        Objects.equals(this.associations, associatedPerson.associations) &&
        Objects.equals(this.identityDocuments, associatedPerson.identityDocuments) &&
        Objects.equals(this.employmentType, associatedPerson.employmentType) &&
        Objects.equals(this.employmentDetails, associatedPerson.employmentDetails) &&
        Objects.equals(this.subscribedServices, associatedPerson.subscribedServices) &&
        Objects.equals(this.taxTreatyDetails, associatedPerson.taxTreatyDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, externalCode, firstName, middleName, middleInitial, lastName, suffix, username, passwordDate, userStatus, lastLogin, gender, maritalStatus, salutation, email, countryOfCitizenship, countryOfBirth, dateOfBirth, motersMaidenName, numberOfDependents, securityDevice, commercial, phones, residence, mailing, associations, identityDocuments, employmentType, employmentDetails, subscribedServices, taxTreatyDetails);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssociatedPerson {\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    externalCode: ").append(toIndentedString(externalCode)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    middleInitial: ").append(toIndentedString(middleInitial)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    passwordDate: ").append(toIndentedString(passwordDate)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    countryOfCitizenship: ").append(toIndentedString(countryOfCitizenship)).append("\n");
    sb.append("    countryOfBirth: ").append(toIndentedString(countryOfBirth)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    motersMaidenName: ").append(toIndentedString(motersMaidenName)).append("\n");
    sb.append("    numberOfDependents: ").append(toIndentedString(numberOfDependents)).append("\n");
    sb.append("    securityDevice: ").append(toIndentedString(securityDevice)).append("\n");
    sb.append("    commercial: ").append(toIndentedString(commercial)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    residence: ").append(toIndentedString(residence)).append("\n");
    sb.append("    mailing: ").append(toIndentedString(mailing)).append("\n");
    sb.append("    associations: ").append(toIndentedString(associations)).append("\n");
    sb.append("    identityDocuments: ").append(toIndentedString(identityDocuments)).append("\n");
    sb.append("    employmentType: ").append(toIndentedString(employmentType)).append("\n");
    sb.append("    employmentDetails: ").append(toIndentedString(employmentDetails)).append("\n");
    sb.append("    subscribedServices: ").append(toIndentedString(subscribedServices)).append("\n");
    sb.append("    taxTreatyDetails: ").append(toIndentedString(taxTreatyDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entityId");
    openapiFields.add("externalCode");
    openapiFields.add("firstName");
    openapiFields.add("middleName");
    openapiFields.add("middleInitial");
    openapiFields.add("lastName");
    openapiFields.add("suffix");
    openapiFields.add("username");
    openapiFields.add("passwordDate");
    openapiFields.add("userStatus");
    openapiFields.add("lastLogin");
    openapiFields.add("gender");
    openapiFields.add("maritalStatus");
    openapiFields.add("salutation");
    openapiFields.add("email");
    openapiFields.add("countryOfCitizenship");
    openapiFields.add("countryOfBirth");
    openapiFields.add("dateOfBirth");
    openapiFields.add("motersMaidenName");
    openapiFields.add("numberOfDependents");
    openapiFields.add("securityDevice");
    openapiFields.add("commercial");
    openapiFields.add("phones");
    openapiFields.add("residence");
    openapiFields.add("mailing");
    openapiFields.add("associations");
    openapiFields.add("identityDocuments");
    openapiFields.add("employmentType");
    openapiFields.add("employmentDetails");
    openapiFields.add("subscribedServices");
    openapiFields.add("taxTreatyDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssociatedPerson
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssociatedPerson.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssociatedPerson is not found in the empty JSON string", AssociatedPerson.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssociatedPerson.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssociatedPerson` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("externalCode") != null && !jsonObj.get("externalCode").isJsonNull()) && !jsonObj.get("externalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalCode").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("middleInitial") != null && !jsonObj.get("middleInitial").isJsonNull()) && !jsonObj.get("middleInitial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleInitial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleInitial").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("passwordDate") != null && !jsonObj.get("passwordDate").isJsonNull()) && !jsonObj.get("passwordDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordDate").toString()));
      }
      if ((jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) && !jsonObj.get("userStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStatus").toString()));
      }
      if ((jsonObj.get("lastLogin") != null && !jsonObj.get("lastLogin").isJsonNull()) && !jsonObj.get("lastLogin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastLogin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastLogin").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("maritalStatus") != null && !jsonObj.get("maritalStatus").isJsonNull()) && !jsonObj.get("maritalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatus").toString()));
      }
      if ((jsonObj.get("salutation") != null && !jsonObj.get("salutation").isJsonNull()) && !jsonObj.get("salutation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salutation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salutation").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("countryOfCitizenship") != null && !jsonObj.get("countryOfCitizenship").isJsonNull()) && !jsonObj.get("countryOfCitizenship").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryOfCitizenship` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryOfCitizenship").toString()));
      }
      if ((jsonObj.get("countryOfBirth") != null && !jsonObj.get("countryOfBirth").isJsonNull()) && !jsonObj.get("countryOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryOfBirth").toString()));
      }
      if ((jsonObj.get("dateOfBirth") != null && !jsonObj.get("dateOfBirth").isJsonNull()) && !jsonObj.get("dateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOfBirth").toString()));
      }
      if ((jsonObj.get("motersMaidenName") != null && !jsonObj.get("motersMaidenName").isJsonNull()) && !jsonObj.get("motersMaidenName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `motersMaidenName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("motersMaidenName").toString()));
      }
      if ((jsonObj.get("securityDevice") != null && !jsonObj.get("securityDevice").isJsonNull()) && !jsonObj.get("securityDevice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityDevice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityDevice").toString()));
      }
      if ((jsonObj.get("commercial") != null && !jsonObj.get("commercial").isJsonNull()) && !jsonObj.get("commercial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercial").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("associations") != null && !jsonObj.get("associations").isJsonNull() && !jsonObj.get("associations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `associations` to be an array in the JSON string but got `%s`", jsonObj.get("associations").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("identityDocuments") != null && !jsonObj.get("identityDocuments").isJsonNull() && !jsonObj.get("identityDocuments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `identityDocuments` to be an array in the JSON string but got `%s`", jsonObj.get("identityDocuments").toString()));
      }
      if ((jsonObj.get("employmentType") != null && !jsonObj.get("employmentType").isJsonNull()) && !jsonObj.get("employmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("subscribedServices") != null && !jsonObj.get("subscribedServices").isJsonNull() && !jsonObj.get("subscribedServices").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscribedServices` to be an array in the JSON string but got `%s`", jsonObj.get("subscribedServices").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("taxTreatyDetails") != null && !jsonObj.get("taxTreatyDetails").isJsonNull() && !jsonObj.get("taxTreatyDetails").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxTreatyDetails` to be an array in the JSON string but got `%s`", jsonObj.get("taxTreatyDetails").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssociatedPerson.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssociatedPerson' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssociatedPerson> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssociatedPerson.class));

       return (TypeAdapter<T>) new TypeAdapter<AssociatedPerson>() {
           @Override
           public void write(JsonWriter out, AssociatedPerson value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssociatedPerson read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssociatedPerson given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssociatedPerson
   * @throws IOException if the JSON string is invalid with respect to AssociatedPerson
   */
  public static AssociatedPerson fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssociatedPerson.class);
  }

  /**
   * Convert an instance of AssociatedPerson to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

