/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IRAContingentBeneficiary;
import org.openapitools.client.model.IRAContingentBeneficiaryEntity;
import org.openapitools.client.model.IRAPrimaryBeneficiary;
import org.openapitools.client.model.IRAPrimaryBeneficiaryEntity;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IRABeneficiariesType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class IRABeneficiariesType {
  public static final String SERIALIZED_NAME_PRIMARY_BENEFICIARIES = "primaryBeneficiaries";
  @SerializedName(SERIALIZED_NAME_PRIMARY_BENEFICIARIES)
  @javax.annotation.Nullable
  private List<IRAPrimaryBeneficiary> primaryBeneficiaries = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRIMARY_BENEFICIARY_ENTITIES = "primaryBeneficiaryEntities";
  @SerializedName(SERIALIZED_NAME_PRIMARY_BENEFICIARY_ENTITIES)
  @javax.annotation.Nullable
  private List<IRAPrimaryBeneficiaryEntity> primaryBeneficiaryEntities = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTINGENT_BENEFICIARIES = "contingentBeneficiaries";
  @SerializedName(SERIALIZED_NAME_CONTINGENT_BENEFICIARIES)
  @javax.annotation.Nullable
  private List<IRAContingentBeneficiary> contingentBeneficiaries = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTINGENT_BENEFICIARY_ENTITIES = "contingentBeneficiaryEntities";
  @SerializedName(SERIALIZED_NAME_CONTINGENT_BENEFICIARY_ENTITIES)
  @javax.annotation.Nullable
  private List<IRAContingentBeneficiaryEntity> contingentBeneficiaryEntities = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPOUSE_PRIMARY_BENEFICARY = "spousePrimaryBeneficary";
  @SerializedName(SERIALIZED_NAME_SPOUSE_PRIMARY_BENEFICARY)
  @javax.annotation.Nullable
  private Boolean spousePrimaryBeneficary;

  public static final String SERIALIZED_NAME_SUCCESSOR = "successor";
  @SerializedName(SERIALIZED_NAME_SUCCESSOR)
  @javax.annotation.Nullable
  private Boolean successor;

  public IRABeneficiariesType() {
  }

  public IRABeneficiariesType primaryBeneficiaries(@javax.annotation.Nullable List<IRAPrimaryBeneficiary> primaryBeneficiaries) {
    this.primaryBeneficiaries = primaryBeneficiaries;
    return this;
  }

  public IRABeneficiariesType addPrimaryBeneficiariesItem(IRAPrimaryBeneficiary primaryBeneficiariesItem) {
    if (this.primaryBeneficiaries == null) {
      this.primaryBeneficiaries = new ArrayList<>();
    }
    this.primaryBeneficiaries.add(primaryBeneficiariesItem);
    return this;
  }

  /**
   * Get primaryBeneficiaries
   * @return primaryBeneficiaries
   */
  @javax.annotation.Nullable
  public List<IRAPrimaryBeneficiary> getPrimaryBeneficiaries() {
    return primaryBeneficiaries;
  }

  public void setPrimaryBeneficiaries(@javax.annotation.Nullable List<IRAPrimaryBeneficiary> primaryBeneficiaries) {
    this.primaryBeneficiaries = primaryBeneficiaries;
  }


  public IRABeneficiariesType primaryBeneficiaryEntities(@javax.annotation.Nullable List<IRAPrimaryBeneficiaryEntity> primaryBeneficiaryEntities) {
    this.primaryBeneficiaryEntities = primaryBeneficiaryEntities;
    return this;
  }

  public IRABeneficiariesType addPrimaryBeneficiaryEntitiesItem(IRAPrimaryBeneficiaryEntity primaryBeneficiaryEntitiesItem) {
    if (this.primaryBeneficiaryEntities == null) {
      this.primaryBeneficiaryEntities = new ArrayList<>();
    }
    this.primaryBeneficiaryEntities.add(primaryBeneficiaryEntitiesItem);
    return this;
  }

  /**
   * Get primaryBeneficiaryEntities
   * @return primaryBeneficiaryEntities
   */
  @javax.annotation.Nullable
  public List<IRAPrimaryBeneficiaryEntity> getPrimaryBeneficiaryEntities() {
    return primaryBeneficiaryEntities;
  }

  public void setPrimaryBeneficiaryEntities(@javax.annotation.Nullable List<IRAPrimaryBeneficiaryEntity> primaryBeneficiaryEntities) {
    this.primaryBeneficiaryEntities = primaryBeneficiaryEntities;
  }


  public IRABeneficiariesType contingentBeneficiaries(@javax.annotation.Nullable List<IRAContingentBeneficiary> contingentBeneficiaries) {
    this.contingentBeneficiaries = contingentBeneficiaries;
    return this;
  }

  public IRABeneficiariesType addContingentBeneficiariesItem(IRAContingentBeneficiary contingentBeneficiariesItem) {
    if (this.contingentBeneficiaries == null) {
      this.contingentBeneficiaries = new ArrayList<>();
    }
    this.contingentBeneficiaries.add(contingentBeneficiariesItem);
    return this;
  }

  /**
   * Get contingentBeneficiaries
   * @return contingentBeneficiaries
   */
  @javax.annotation.Nullable
  public List<IRAContingentBeneficiary> getContingentBeneficiaries() {
    return contingentBeneficiaries;
  }

  public void setContingentBeneficiaries(@javax.annotation.Nullable List<IRAContingentBeneficiary> contingentBeneficiaries) {
    this.contingentBeneficiaries = contingentBeneficiaries;
  }


  public IRABeneficiariesType contingentBeneficiaryEntities(@javax.annotation.Nullable List<IRAContingentBeneficiaryEntity> contingentBeneficiaryEntities) {
    this.contingentBeneficiaryEntities = contingentBeneficiaryEntities;
    return this;
  }

  public IRABeneficiariesType addContingentBeneficiaryEntitiesItem(IRAContingentBeneficiaryEntity contingentBeneficiaryEntitiesItem) {
    if (this.contingentBeneficiaryEntities == null) {
      this.contingentBeneficiaryEntities = new ArrayList<>();
    }
    this.contingentBeneficiaryEntities.add(contingentBeneficiaryEntitiesItem);
    return this;
  }

  /**
   * Get contingentBeneficiaryEntities
   * @return contingentBeneficiaryEntities
   */
  @javax.annotation.Nullable
  public List<IRAContingentBeneficiaryEntity> getContingentBeneficiaryEntities() {
    return contingentBeneficiaryEntities;
  }

  public void setContingentBeneficiaryEntities(@javax.annotation.Nullable List<IRAContingentBeneficiaryEntity> contingentBeneficiaryEntities) {
    this.contingentBeneficiaryEntities = contingentBeneficiaryEntities;
  }


  public IRABeneficiariesType spousePrimaryBeneficary(@javax.annotation.Nullable Boolean spousePrimaryBeneficary) {
    this.spousePrimaryBeneficary = spousePrimaryBeneficary;
    return this;
  }

  /**
   * Get spousePrimaryBeneficary
   * @return spousePrimaryBeneficary
   */
  @javax.annotation.Nullable
  public Boolean getSpousePrimaryBeneficary() {
    return spousePrimaryBeneficary;
  }

  public void setSpousePrimaryBeneficary(@javax.annotation.Nullable Boolean spousePrimaryBeneficary) {
    this.spousePrimaryBeneficary = spousePrimaryBeneficary;
  }


  public IRABeneficiariesType successor(@javax.annotation.Nullable Boolean successor) {
    this.successor = successor;
    return this;
  }

  /**
   * Get successor
   * @return successor
   */
  @javax.annotation.Nullable
  public Boolean getSuccessor() {
    return successor;
  }

  public void setSuccessor(@javax.annotation.Nullable Boolean successor) {
    this.successor = successor;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IRABeneficiariesType irABeneficiariesType = (IRABeneficiariesType) o;
    return Objects.equals(this.primaryBeneficiaries, irABeneficiariesType.primaryBeneficiaries) &&
        Objects.equals(this.primaryBeneficiaryEntities, irABeneficiariesType.primaryBeneficiaryEntities) &&
        Objects.equals(this.contingentBeneficiaries, irABeneficiariesType.contingentBeneficiaries) &&
        Objects.equals(this.contingentBeneficiaryEntities, irABeneficiariesType.contingentBeneficiaryEntities) &&
        Objects.equals(this.spousePrimaryBeneficary, irABeneficiariesType.spousePrimaryBeneficary) &&
        Objects.equals(this.successor, irABeneficiariesType.successor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primaryBeneficiaries, primaryBeneficiaryEntities, contingentBeneficiaries, contingentBeneficiaryEntities, spousePrimaryBeneficary, successor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IRABeneficiariesType {\n");
    sb.append("    primaryBeneficiaries: ").append(toIndentedString(primaryBeneficiaries)).append("\n");
    sb.append("    primaryBeneficiaryEntities: ").append(toIndentedString(primaryBeneficiaryEntities)).append("\n");
    sb.append("    contingentBeneficiaries: ").append(toIndentedString(contingentBeneficiaries)).append("\n");
    sb.append("    contingentBeneficiaryEntities: ").append(toIndentedString(contingentBeneficiaryEntities)).append("\n");
    sb.append("    spousePrimaryBeneficary: ").append(toIndentedString(spousePrimaryBeneficary)).append("\n");
    sb.append("    successor: ").append(toIndentedString(successor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("primaryBeneficiaries");
    openapiFields.add("primaryBeneficiaryEntities");
    openapiFields.add("contingentBeneficiaries");
    openapiFields.add("contingentBeneficiaryEntities");
    openapiFields.add("spousePrimaryBeneficary");
    openapiFields.add("successor");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IRABeneficiariesType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IRABeneficiariesType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IRABeneficiariesType is not found in the empty JSON string", IRABeneficiariesType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IRABeneficiariesType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IRABeneficiariesType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("primaryBeneficiaries") != null && !jsonObj.get("primaryBeneficiaries").isJsonNull()) {
        JsonArray jsonArrayprimaryBeneficiaries = jsonObj.getAsJsonArray("primaryBeneficiaries");
        if (jsonArrayprimaryBeneficiaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("primaryBeneficiaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `primaryBeneficiaries` to be an array in the JSON string but got `%s`", jsonObj.get("primaryBeneficiaries").toString()));
          }

          // validate the optional field `primaryBeneficiaries` (array)
          for (int i = 0; i < jsonArrayprimaryBeneficiaries.size(); i++) {
            IRAPrimaryBeneficiary.validateJsonElement(jsonArrayprimaryBeneficiaries.get(i));
          };
        }
      }
      if (jsonObj.get("primaryBeneficiaryEntities") != null && !jsonObj.get("primaryBeneficiaryEntities").isJsonNull()) {
        JsonArray jsonArrayprimaryBeneficiaryEntities = jsonObj.getAsJsonArray("primaryBeneficiaryEntities");
        if (jsonArrayprimaryBeneficiaryEntities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("primaryBeneficiaryEntities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `primaryBeneficiaryEntities` to be an array in the JSON string but got `%s`", jsonObj.get("primaryBeneficiaryEntities").toString()));
          }

          // validate the optional field `primaryBeneficiaryEntities` (array)
          for (int i = 0; i < jsonArrayprimaryBeneficiaryEntities.size(); i++) {
            IRAPrimaryBeneficiaryEntity.validateJsonElement(jsonArrayprimaryBeneficiaryEntities.get(i));
          };
        }
      }
      if (jsonObj.get("contingentBeneficiaries") != null && !jsonObj.get("contingentBeneficiaries").isJsonNull()) {
        JsonArray jsonArraycontingentBeneficiaries = jsonObj.getAsJsonArray("contingentBeneficiaries");
        if (jsonArraycontingentBeneficiaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contingentBeneficiaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contingentBeneficiaries` to be an array in the JSON string but got `%s`", jsonObj.get("contingentBeneficiaries").toString()));
          }

          // validate the optional field `contingentBeneficiaries` (array)
          for (int i = 0; i < jsonArraycontingentBeneficiaries.size(); i++) {
            IRAContingentBeneficiary.validateJsonElement(jsonArraycontingentBeneficiaries.get(i));
          };
        }
      }
      if (jsonObj.get("contingentBeneficiaryEntities") != null && !jsonObj.get("contingentBeneficiaryEntities").isJsonNull()) {
        JsonArray jsonArraycontingentBeneficiaryEntities = jsonObj.getAsJsonArray("contingentBeneficiaryEntities");
        if (jsonArraycontingentBeneficiaryEntities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("contingentBeneficiaryEntities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `contingentBeneficiaryEntities` to be an array in the JSON string but got `%s`", jsonObj.get("contingentBeneficiaryEntities").toString()));
          }

          // validate the optional field `contingentBeneficiaryEntities` (array)
          for (int i = 0; i < jsonArraycontingentBeneficiaryEntities.size(); i++) {
            IRAContingentBeneficiaryEntity.validateJsonElement(jsonArraycontingentBeneficiaryEntities.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IRABeneficiariesType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IRABeneficiariesType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IRABeneficiariesType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IRABeneficiariesType.class));

       return (TypeAdapter<T>) new TypeAdapter<IRABeneficiariesType>() {
           @Override
           public void write(JsonWriter out, IRABeneficiariesType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IRABeneficiariesType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IRABeneficiariesType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IRABeneficiariesType
   * @throws IOException if the JSON string is invalid with respect to IRABeneficiariesType
   */
  public static IRABeneficiariesType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IRABeneficiariesType.class);
  }

  /**
   * Convert an instance of IRABeneficiariesType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

