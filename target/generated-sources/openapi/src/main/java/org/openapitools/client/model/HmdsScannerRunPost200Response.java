/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.HmdsScannerRunPost200ResponseContracts;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * HmdsScannerRunPost200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class HmdsScannerRunPost200Response {
  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  @javax.annotation.Nullable
  private Integer total;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  @javax.annotation.Nullable
  private Integer size;

  public static final String SERIALIZED_NAME_OFFSET = "offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  @javax.annotation.Nullable
  private Integer offset;

  public static final String SERIALIZED_NAME_SCAN_TIME = "scanTime";
  @SerializedName(SERIALIZED_NAME_SCAN_TIME)
  @javax.annotation.Nullable
  private String scanTime;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  @javax.annotation.Nullable
  private String position;

  public static final String SERIALIZED_NAME_WARNING_TEXT = "warningText";
  @SerializedName(SERIALIZED_NAME_WARNING_TEXT)
  @javax.annotation.Nullable
  private String warningText;

  public static final String SERIALIZED_NAME_CONTRACTS = "Contracts";
  @SerializedName(SERIALIZED_NAME_CONTRACTS)
  @javax.annotation.Nullable
  private HmdsScannerRunPost200ResponseContracts contracts;

  public HmdsScannerRunPost200Response() {
  }

  public HmdsScannerRunPost200Response total(@javax.annotation.Nullable Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Returns the total number of bonds that match the indicated search.
   * @return total
   */
  @javax.annotation.Nullable
  public Integer getTotal() {
    return total;
  }

  public void setTotal(@javax.annotation.Nullable Integer total) {
    this.total = total;
  }


  public HmdsScannerRunPost200Response size(@javax.annotation.Nullable Integer size) {
    this.size = size;
    return this;
  }

  /**
   * Returns the total size of the return.
   * @return size
   */
  @javax.annotation.Nullable
  public Integer getSize() {
    return size;
  }

  public void setSize(@javax.annotation.Nullable Integer size) {
    this.size = size;
  }


  public HmdsScannerRunPost200Response offset(@javax.annotation.Nullable Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Returns the distance displaced from the starting 0 value.
   * @return offset
   */
  @javax.annotation.Nullable
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(@javax.annotation.Nullable Integer offset) {
    this.offset = offset;
  }


  public HmdsScannerRunPost200Response scanTime(@javax.annotation.Nullable String scanTime) {
    this.scanTime = scanTime;
    return this;
  }

  /**
   * Returns the UTC datetime value of when the request took place.
   * @return scanTime
   */
  @javax.annotation.Nullable
  public String getScanTime() {
    return scanTime;
  }

  public void setScanTime(@javax.annotation.Nullable String scanTime) {
    this.scanTime = scanTime;
  }


  public HmdsScannerRunPost200Response id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Returns the market scanner name. Automatically generates an incremental scanner name for each request formatted as \&quot;scanner{ N }\&quot;
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public HmdsScannerRunPost200Response position(@javax.annotation.Nullable String position) {
    this.position = position;
    return this;
  }

  /**
   * (Internal use only)
   * @return position
   */
  @javax.annotation.Nullable
  public String getPosition() {
    return position;
  }

  public void setPosition(@javax.annotation.Nullable String position) {
    this.position = position;
  }


  public HmdsScannerRunPost200Response warningText(@javax.annotation.Nullable String warningText) {
    this.warningText = warningText;
    return this;
  }

  /**
   * Returns the number of contracts returned out of total contracts that match.
   * @return warningText
   */
  @javax.annotation.Nullable
  public String getWarningText() {
    return warningText;
  }

  public void setWarningText(@javax.annotation.Nullable String warningText) {
    this.warningText = warningText;
  }


  public HmdsScannerRunPost200Response contracts(@javax.annotation.Nullable HmdsScannerRunPost200ResponseContracts contracts) {
    this.contracts = contracts;
    return this;
  }

  /**
   * Get contracts
   * @return contracts
   */
  @javax.annotation.Nullable
  public HmdsScannerRunPost200ResponseContracts getContracts() {
    return contracts;
  }

  public void setContracts(@javax.annotation.Nullable HmdsScannerRunPost200ResponseContracts contracts) {
    this.contracts = contracts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HmdsScannerRunPost200Response hmdsScannerRunPost200Response = (HmdsScannerRunPost200Response) o;
    return Objects.equals(this.total, hmdsScannerRunPost200Response.total) &&
        Objects.equals(this.size, hmdsScannerRunPost200Response.size) &&
        Objects.equals(this.offset, hmdsScannerRunPost200Response.offset) &&
        Objects.equals(this.scanTime, hmdsScannerRunPost200Response.scanTime) &&
        Objects.equals(this.id, hmdsScannerRunPost200Response.id) &&
        Objects.equals(this.position, hmdsScannerRunPost200Response.position) &&
        Objects.equals(this.warningText, hmdsScannerRunPost200Response.warningText) &&
        Objects.equals(this.contracts, hmdsScannerRunPost200Response.contracts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(total, size, offset, scanTime, id, position, warningText, contracts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HmdsScannerRunPost200Response {\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    scanTime: ").append(toIndentedString(scanTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    warningText: ").append(toIndentedString(warningText)).append("\n");
    sb.append("    contracts: ").append(toIndentedString(contracts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("total");
    openapiFields.add("size");
    openapiFields.add("offset");
    openapiFields.add("scanTime");
    openapiFields.add("id");
    openapiFields.add("position");
    openapiFields.add("warningText");
    openapiFields.add("Contracts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HmdsScannerRunPost200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HmdsScannerRunPost200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HmdsScannerRunPost200Response is not found in the empty JSON string", HmdsScannerRunPost200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HmdsScannerRunPost200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HmdsScannerRunPost200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("scanTime") != null && !jsonObj.get("scanTime").isJsonNull()) && !jsonObj.get("scanTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scanTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scanTime").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("position") != null && !jsonObj.get("position").isJsonNull()) && !jsonObj.get("position").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position").toString()));
      }
      if ((jsonObj.get("warningText") != null && !jsonObj.get("warningText").isJsonNull()) && !jsonObj.get("warningText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warningText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warningText").toString()));
      }
      // validate the optional field `Contracts`
      if (jsonObj.get("Contracts") != null && !jsonObj.get("Contracts").isJsonNull()) {
        HmdsScannerRunPost200ResponseContracts.validateJsonElement(jsonObj.get("Contracts"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HmdsScannerRunPost200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HmdsScannerRunPost200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HmdsScannerRunPost200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HmdsScannerRunPost200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<HmdsScannerRunPost200Response>() {
           @Override
           public void write(JsonWriter out, HmdsScannerRunPost200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HmdsScannerRunPost200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HmdsScannerRunPost200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HmdsScannerRunPost200Response
   * @throws IOException if the JSON string is invalid with respect to HmdsScannerRunPost200Response
   */
  public static HmdsScannerRunPost200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HmdsScannerRunPost200Response.class);
  }

  /**
   * Convert an instance of HmdsScannerRunPost200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

