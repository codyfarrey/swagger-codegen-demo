/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AlertCondition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * details of the specified alert
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class AlertDetails {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  @javax.annotation.Nullable
  private String account;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  @javax.annotation.Nullable
  private Integer orderId;

  public static final String SERIALIZED_NAME_ALERT_NAME = "alertName";
  @SerializedName(SERIALIZED_NAME_ALERT_NAME)
  @javax.annotation.Nullable
  private String alertName;

  public static final String SERIALIZED_NAME_TIF = "tif";
  @SerializedName(SERIALIZED_NAME_TIF)
  @javax.annotation.Nullable
  private String tif;

  public static final String SERIALIZED_NAME_EXPIRE_TIME = "expire_time";
  @SerializedName(SERIALIZED_NAME_EXPIRE_TIME)
  @javax.annotation.Nullable
  private String expireTime;

  public static final String SERIALIZED_NAME_ALERT_ACTIVE = "alert_active";
  @SerializedName(SERIALIZED_NAME_ALERT_ACTIVE)
  @javax.annotation.Nullable
  private Integer alertActive;

  public static final String SERIALIZED_NAME_ALERT_REPEATABLE = "alert_repeatable";
  @SerializedName(SERIALIZED_NAME_ALERT_REPEATABLE)
  @javax.annotation.Nullable
  private Integer alertRepeatable;

  public static final String SERIALIZED_NAME_ALERT_EMAIL = "alert_email";
  @SerializedName(SERIALIZED_NAME_ALERT_EMAIL)
  @javax.annotation.Nullable
  private String alertEmail;

  public static final String SERIALIZED_NAME_ALERT_SEND_MESSAGE = "alert_send_message";
  @SerializedName(SERIALIZED_NAME_ALERT_SEND_MESSAGE)
  @javax.annotation.Nullable
  private Integer alertSendMessage;

  public static final String SERIALIZED_NAME_ALERT_MESSAGE = "alert_message";
  @SerializedName(SERIALIZED_NAME_ALERT_MESSAGE)
  @javax.annotation.Nullable
  private String alertMessage;

  public static final String SERIALIZED_NAME_ALERT_SHOW_POPUP = "alert_show_popup";
  @SerializedName(SERIALIZED_NAME_ALERT_SHOW_POPUP)
  @javax.annotation.Nullable
  private Integer alertShowPopup;

  public static final String SERIALIZED_NAME_ALERT_PLAY_AUDIO = "alert_play_audio";
  @SerializedName(SERIALIZED_NAME_ALERT_PLAY_AUDIO)
  @javax.annotation.Nullable
  private Integer alertPlayAudio;

  /**
   * represent order statusAlways returns “Presubmitted”.
   */
  @JsonAdapter(OrderStatusEnum.Adapter.class)
  public enum OrderStatusEnum {
    PRESUBMITTED("Presubmitted"),
    
    SUBMITTED("Submitted");

    private String value;

    OrderStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderStatusEnum fromValue(String value) {
      for (OrderStatusEnum b : OrderStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrderStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrderStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OrderStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ORDER_STATUS = "order_status";
  @SerializedName(SERIALIZED_NAME_ORDER_STATUS)
  @javax.annotation.Nullable
  private OrderStatusEnum orderStatus;

  public static final String SERIALIZED_NAME_ALERT_TRIGGERED = "alert_triggered";
  @SerializedName(SERIALIZED_NAME_ALERT_TRIGGERED)
  @javax.annotation.Nullable
  private Integer alertTriggered;

  public static final String SERIALIZED_NAME_FG_COLOR = "fg_color";
  @SerializedName(SERIALIZED_NAME_FG_COLOR)
  @javax.annotation.Nullable
  private String fgColor;

  public static final String SERIALIZED_NAME_BG_COLOR = "bg_color";
  @SerializedName(SERIALIZED_NAME_BG_COLOR)
  @javax.annotation.Nullable
  private String bgColor;

  public static final String SERIALIZED_NAME_ORDER_NOT_EDITABLE = "order_not_editable";
  @SerializedName(SERIALIZED_NAME_ORDER_NOT_EDITABLE)
  @javax.annotation.Nullable
  private Boolean orderNotEditable;

  public static final String SERIALIZED_NAME_ITWS_ORDERS_ONLY = "itws_orders_only";
  @SerializedName(SERIALIZED_NAME_ITWS_ORDERS_ONLY)
  @javax.annotation.Nullable
  private Integer itwsOrdersOnly;

  public static final String SERIALIZED_NAME_ALERT_MTA_CURRENCY = "alert_mta_currency";
  @SerializedName(SERIALIZED_NAME_ALERT_MTA_CURRENCY)
  @javax.annotation.Nullable
  private String alertMtaCurrency;

  public static final String SERIALIZED_NAME_ALERT_MTA_DEFAULTS = "alert_mta_defaults";
  @SerializedName(SERIALIZED_NAME_ALERT_MTA_DEFAULTS)
  @javax.annotation.Nullable
  private String alertMtaDefaults;

  public static final String SERIALIZED_NAME_TOOL_ID = "tool_id";
  @SerializedName(SERIALIZED_NAME_TOOL_ID)
  @javax.annotation.Nullable
  private Integer toolId;

  public static final String SERIALIZED_NAME_TIME_ZONE = "time_zone";
  @SerializedName(SERIALIZED_NAME_TIME_ZONE)
  @javax.annotation.Nullable
  private String timeZone;

  public static final String SERIALIZED_NAME_ALERT_DEFAULT_TYPE = "alert_default_type";
  @SerializedName(SERIALIZED_NAME_ALERT_DEFAULT_TYPE)
  @javax.annotation.Nullable
  private Integer alertDefaultType;

  public static final String SERIALIZED_NAME_CONDITION_SIZE = "condition_size";
  @SerializedName(SERIALIZED_NAME_CONDITION_SIZE)
  @javax.annotation.Nullable
  private Integer conditionSize;

  public static final String SERIALIZED_NAME_CONDITION_OUTSIDE_RTH = "condition_outside_rth";
  @SerializedName(SERIALIZED_NAME_CONDITION_OUTSIDE_RTH)
  @javax.annotation.Nullable
  private Integer conditionOutsideRth;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  @javax.annotation.Nullable
  private List<AlertCondition> conditions = new ArrayList<>();

  public AlertDetails() {
  }

  public AlertDetails account(@javax.annotation.Nullable String account) {
    this.account = account;
    return this;
  }

  /**
   * Requestor’s account ID
   * @return account
   */
  @javax.annotation.Nullable
  public String getAccount() {
    return account;
  }

  public void setAccount(@javax.annotation.Nullable String account) {
    this.account = account;
  }


  public AlertDetails orderId(@javax.annotation.Nullable Integer orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Alert’s tracking ID. Can be used for modifying or deleting alerts.
   * @return orderId
   */
  @javax.annotation.Nullable
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(@javax.annotation.Nullable Integer orderId) {
    this.orderId = orderId;
  }


  public AlertDetails alertName(@javax.annotation.Nullable String alertName) {
    this.alertName = alertName;
    return this;
  }

  /**
   * Human readable name of the alert.
   * @return alertName
   */
  @javax.annotation.Nullable
  public String getAlertName() {
    return alertName;
  }

  public void setAlertName(@javax.annotation.Nullable String alertName) {
    this.alertName = alertName;
  }


  public AlertDetails tif(@javax.annotation.Nullable String tif) {
    this.tif = tif;
    return this;
  }

  /**
   * Time in Force effective for the Alert
   * @return tif
   */
  @javax.annotation.Nullable
  public String getTif() {
    return tif;
  }

  public void setTif(@javax.annotation.Nullable String tif) {
    this.tif = tif;
  }


  public AlertDetails expireTime(@javax.annotation.Nullable String expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * Returns the UTC formatted date used in GTD orders.
   * @return expireTime
   */
  @javax.annotation.Nullable
  public String getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(@javax.annotation.Nullable String expireTime) {
    this.expireTime = expireTime;
  }


  public AlertDetails alertActive(@javax.annotation.Nullable Integer alertActive) {
    this.alertActive = alertActive;
    return this;
  }

  /**
   * Returns if the alert is active [1] or disabled [0].
   * @return alertActive
   */
  @javax.annotation.Nullable
  public Integer getAlertActive() {
    return alertActive;
  }

  public void setAlertActive(@javax.annotation.Nullable Integer alertActive) {
    this.alertActive = alertActive;
  }


  public AlertDetails alertRepeatable(@javax.annotation.Nullable Integer alertRepeatable) {
    this.alertRepeatable = alertRepeatable;
    return this;
  }

  /**
   * Returns if the alert can be sent more than once.
   * @return alertRepeatable
   */
  @javax.annotation.Nullable
  public Integer getAlertRepeatable() {
    return alertRepeatable;
  }

  public void setAlertRepeatable(@javax.annotation.Nullable Integer alertRepeatable) {
    this.alertRepeatable = alertRepeatable;
  }


  public AlertDetails alertEmail(@javax.annotation.Nullable String alertEmail) {
    this.alertEmail = alertEmail;
    return this;
  }

  /**
   * Returns the designated email address for sendMessage functionality.
   * @return alertEmail
   */
  @javax.annotation.Nullable
  public String getAlertEmail() {
    return alertEmail;
  }

  public void setAlertEmail(@javax.annotation.Nullable String alertEmail) {
    this.alertEmail = alertEmail;
  }


  public AlertDetails alertSendMessage(@javax.annotation.Nullable Integer alertSendMessage) {
    this.alertSendMessage = alertSendMessage;
    return this;
  }

  /**
   * Returns whether or not the alert will send an email.
   * @return alertSendMessage
   */
  @javax.annotation.Nullable
  public Integer getAlertSendMessage() {
    return alertSendMessage;
  }

  public void setAlertSendMessage(@javax.annotation.Nullable Integer alertSendMessage) {
    this.alertSendMessage = alertSendMessage;
  }


  public AlertDetails alertMessage(@javax.annotation.Nullable String alertMessage) {
    this.alertMessage = alertMessage;
    return this;
  }

  /**
   * Returns the body content of what your alert will report once triggered
   * @return alertMessage
   */
  @javax.annotation.Nullable
  public String getAlertMessage() {
    return alertMessage;
  }

  public void setAlertMessage(@javax.annotation.Nullable String alertMessage) {
    this.alertMessage = alertMessage;
  }


  public AlertDetails alertShowPopup(@javax.annotation.Nullable Integer alertShowPopup) {
    this.alertShowPopup = alertShowPopup;
    return this;
  }

  /**
   * Returns whether or not the alert will trigger TWS Pop-up messages
   * @return alertShowPopup
   */
  @javax.annotation.Nullable
  public Integer getAlertShowPopup() {
    return alertShowPopup;
  }

  public void setAlertShowPopup(@javax.annotation.Nullable Integer alertShowPopup) {
    this.alertShowPopup = alertShowPopup;
  }


  public AlertDetails alertPlayAudio(@javax.annotation.Nullable Integer alertPlayAudio) {
    this.alertPlayAudio = alertPlayAudio;
    return this;
  }

  /**
   * Returns whether or not the alert will play audio
   * @return alertPlayAudio
   */
  @javax.annotation.Nullable
  public Integer getAlertPlayAudio() {
    return alertPlayAudio;
  }

  public void setAlertPlayAudio(@javax.annotation.Nullable Integer alertPlayAudio) {
    this.alertPlayAudio = alertPlayAudio;
  }


  public AlertDetails orderStatus(@javax.annotation.Nullable OrderStatusEnum orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

  /**
   * represent order statusAlways returns “Presubmitted”.
   * @return orderStatus
   */
  @javax.annotation.Nullable
  public OrderStatusEnum getOrderStatus() {
    return orderStatus;
  }

  public void setOrderStatus(@javax.annotation.Nullable OrderStatusEnum orderStatus) {
    this.orderStatus = orderStatus;
  }


  public AlertDetails alertTriggered(@javax.annotation.Nullable Integer alertTriggered) {
    this.alertTriggered = alertTriggered;
    return this;
  }

  /**
   * Returns whether or not the alert was triggered yet.
   * @return alertTriggered
   */
  @javax.annotation.Nullable
  public Integer getAlertTriggered() {
    return alertTriggered;
  }

  public void setAlertTriggered(@javax.annotation.Nullable Integer alertTriggered) {
    this.alertTriggered = alertTriggered;
  }


  public AlertDetails fgColor(@javax.annotation.Nullable String fgColor) {
    this.fgColor = fgColor;
    return this;
  }

  /**
   * Foreground color. Not applicable to API.
   * @return fgColor
   */
  @javax.annotation.Nullable
  public String getFgColor() {
    return fgColor;
  }

  public void setFgColor(@javax.annotation.Nullable String fgColor) {
    this.fgColor = fgColor;
  }


  public AlertDetails bgColor(@javax.annotation.Nullable String bgColor) {
    this.bgColor = bgColor;
    return this;
  }

  /**
   * Background color. Not applicable to API.
   * @return bgColor
   */
  @javax.annotation.Nullable
  public String getBgColor() {
    return bgColor;
  }

  public void setBgColor(@javax.annotation.Nullable String bgColor) {
    this.bgColor = bgColor;
  }


  public AlertDetails orderNotEditable(@javax.annotation.Nullable Boolean orderNotEditable) {
    this.orderNotEditable = orderNotEditable;
    return this;
  }

  /**
   * Returns if the order can be edited.
   * @return orderNotEditable
   */
  @javax.annotation.Nullable
  public Boolean getOrderNotEditable() {
    return orderNotEditable;
  }

  public void setOrderNotEditable(@javax.annotation.Nullable Boolean orderNotEditable) {
    this.orderNotEditable = orderNotEditable;
  }


  public AlertDetails itwsOrdersOnly(@javax.annotation.Nullable Integer itwsOrdersOnly) {
    this.itwsOrdersOnly = itwsOrdersOnly;
    return this;
  }

  /**
   * Returns whether or not the alert will trigger mobile notifications.
   * @return itwsOrdersOnly
   */
  @javax.annotation.Nullable
  public Integer getItwsOrdersOnly() {
    return itwsOrdersOnly;
  }

  public void setItwsOrdersOnly(@javax.annotation.Nullable Integer itwsOrdersOnly) {
    this.itwsOrdersOnly = itwsOrdersOnly;
  }


  public AlertDetails alertMtaCurrency(@javax.annotation.Nullable String alertMtaCurrency) {
    this.alertMtaCurrency = alertMtaCurrency;
    return this;
  }

  /**
   * Returns currency set for MTA alerts. Only valid for alert type 8 &amp; 9.
   * @return alertMtaCurrency
   */
  @javax.annotation.Nullable
  public String getAlertMtaCurrency() {
    return alertMtaCurrency;
  }

  public void setAlertMtaCurrency(@javax.annotation.Nullable String alertMtaCurrency) {
    this.alertMtaCurrency = alertMtaCurrency;
  }


  public AlertDetails alertMtaDefaults(@javax.annotation.Nullable String alertMtaDefaults) {
    this.alertMtaDefaults = alertMtaDefaults;
    return this;
  }

  /**
   * Returns current MTA default values.
   * @return alertMtaDefaults
   */
  @javax.annotation.Nullable
  public String getAlertMtaDefaults() {
    return alertMtaDefaults;
  }

  public void setAlertMtaDefaults(@javax.annotation.Nullable String alertMtaDefaults) {
    this.alertMtaDefaults = alertMtaDefaults;
  }


  public AlertDetails toolId(@javax.annotation.Nullable Integer toolId) {
    this.toolId = toolId;
    return this;
  }

  /**
   * Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.
   * @return toolId
   */
  @javax.annotation.Nullable
  public Integer getToolId() {
    return toolId;
  }

  public void setToolId(@javax.annotation.Nullable Integer toolId) {
    this.toolId = toolId;
  }


  public AlertDetails timeZone(@javax.annotation.Nullable String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

  /**
   * Returned for time-specific conditions.
   * @return timeZone
   */
  @javax.annotation.Nullable
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(@javax.annotation.Nullable String timeZone) {
    this.timeZone = timeZone;
  }


  public AlertDetails alertDefaultType(@javax.annotation.Nullable Integer alertDefaultType) {
    this.alertDefaultType = alertDefaultType;
    return this;
  }

  /**
   * Returns default type set for alerts. Configured in Client Portal.
   * @return alertDefaultType
   */
  @javax.annotation.Nullable
  public Integer getAlertDefaultType() {
    return alertDefaultType;
  }

  public void setAlertDefaultType(@javax.annotation.Nullable Integer alertDefaultType) {
    this.alertDefaultType = alertDefaultType;
  }


  public AlertDetails conditionSize(@javax.annotation.Nullable Integer conditionSize) {
    this.conditionSize = conditionSize;
    return this;
  }

  /**
   * Returns the total number of conditions in the alert.
   * @return conditionSize
   */
  @javax.annotation.Nullable
  public Integer getConditionSize() {
    return conditionSize;
  }

  public void setConditionSize(@javax.annotation.Nullable Integer conditionSize) {
    this.conditionSize = conditionSize;
  }


  public AlertDetails conditionOutsideRth(@javax.annotation.Nullable Integer conditionOutsideRth) {
    this.conditionOutsideRth = conditionOutsideRth;
    return this;
  }

  /**
   * Returns whether or not the alert will trigger outside of regular trading hours.
   * @return conditionOutsideRth
   */
  @javax.annotation.Nullable
  public Integer getConditionOutsideRth() {
    return conditionOutsideRth;
  }

  public void setConditionOutsideRth(@javax.annotation.Nullable Integer conditionOutsideRth) {
    this.conditionOutsideRth = conditionOutsideRth;
  }


  public AlertDetails conditions(@javax.annotation.Nullable List<AlertCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public AlertDetails addConditionsItem(AlertCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

  /**
   * Returns all conditions
   * @return conditions
   */
  @javax.annotation.Nullable
  public List<AlertCondition> getConditions() {
    return conditions;
  }

  public void setConditions(@javax.annotation.Nullable List<AlertCondition> conditions) {
    this.conditions = conditions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertDetails alertDetails = (AlertDetails) o;
    return Objects.equals(this.account, alertDetails.account) &&
        Objects.equals(this.orderId, alertDetails.orderId) &&
        Objects.equals(this.alertName, alertDetails.alertName) &&
        Objects.equals(this.tif, alertDetails.tif) &&
        Objects.equals(this.expireTime, alertDetails.expireTime) &&
        Objects.equals(this.alertActive, alertDetails.alertActive) &&
        Objects.equals(this.alertRepeatable, alertDetails.alertRepeatable) &&
        Objects.equals(this.alertEmail, alertDetails.alertEmail) &&
        Objects.equals(this.alertSendMessage, alertDetails.alertSendMessage) &&
        Objects.equals(this.alertMessage, alertDetails.alertMessage) &&
        Objects.equals(this.alertShowPopup, alertDetails.alertShowPopup) &&
        Objects.equals(this.alertPlayAudio, alertDetails.alertPlayAudio) &&
        Objects.equals(this.orderStatus, alertDetails.orderStatus) &&
        Objects.equals(this.alertTriggered, alertDetails.alertTriggered) &&
        Objects.equals(this.fgColor, alertDetails.fgColor) &&
        Objects.equals(this.bgColor, alertDetails.bgColor) &&
        Objects.equals(this.orderNotEditable, alertDetails.orderNotEditable) &&
        Objects.equals(this.itwsOrdersOnly, alertDetails.itwsOrdersOnly) &&
        Objects.equals(this.alertMtaCurrency, alertDetails.alertMtaCurrency) &&
        Objects.equals(this.alertMtaDefaults, alertDetails.alertMtaDefaults) &&
        Objects.equals(this.toolId, alertDetails.toolId) &&
        Objects.equals(this.timeZone, alertDetails.timeZone) &&
        Objects.equals(this.alertDefaultType, alertDetails.alertDefaultType) &&
        Objects.equals(this.conditionSize, alertDetails.conditionSize) &&
        Objects.equals(this.conditionOutsideRth, alertDetails.conditionOutsideRth) &&
        Objects.equals(this.conditions, alertDetails.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, orderId, alertName, tif, expireTime, alertActive, alertRepeatable, alertEmail, alertSendMessage, alertMessage, alertShowPopup, alertPlayAudio, orderStatus, alertTriggered, fgColor, bgColor, orderNotEditable, itwsOrdersOnly, alertMtaCurrency, alertMtaDefaults, toolId, timeZone, alertDefaultType, conditionSize, conditionOutsideRth, conditions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertDetails {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    alertName: ").append(toIndentedString(alertName)).append("\n");
    sb.append("    tif: ").append(toIndentedString(tif)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    alertActive: ").append(toIndentedString(alertActive)).append("\n");
    sb.append("    alertRepeatable: ").append(toIndentedString(alertRepeatable)).append("\n");
    sb.append("    alertEmail: ").append(toIndentedString(alertEmail)).append("\n");
    sb.append("    alertSendMessage: ").append(toIndentedString(alertSendMessage)).append("\n");
    sb.append("    alertMessage: ").append(toIndentedString(alertMessage)).append("\n");
    sb.append("    alertShowPopup: ").append(toIndentedString(alertShowPopup)).append("\n");
    sb.append("    alertPlayAudio: ").append(toIndentedString(alertPlayAudio)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    alertTriggered: ").append(toIndentedString(alertTriggered)).append("\n");
    sb.append("    fgColor: ").append(toIndentedString(fgColor)).append("\n");
    sb.append("    bgColor: ").append(toIndentedString(bgColor)).append("\n");
    sb.append("    orderNotEditable: ").append(toIndentedString(orderNotEditable)).append("\n");
    sb.append("    itwsOrdersOnly: ").append(toIndentedString(itwsOrdersOnly)).append("\n");
    sb.append("    alertMtaCurrency: ").append(toIndentedString(alertMtaCurrency)).append("\n");
    sb.append("    alertMtaDefaults: ").append(toIndentedString(alertMtaDefaults)).append("\n");
    sb.append("    toolId: ").append(toIndentedString(toolId)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    alertDefaultType: ").append(toIndentedString(alertDefaultType)).append("\n");
    sb.append("    conditionSize: ").append(toIndentedString(conditionSize)).append("\n");
    sb.append("    conditionOutsideRth: ").append(toIndentedString(conditionOutsideRth)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account");
    openapiFields.add("order_id");
    openapiFields.add("alertName");
    openapiFields.add("tif");
    openapiFields.add("expire_time");
    openapiFields.add("alert_active");
    openapiFields.add("alert_repeatable");
    openapiFields.add("alert_email");
    openapiFields.add("alert_send_message");
    openapiFields.add("alert_message");
    openapiFields.add("alert_show_popup");
    openapiFields.add("alert_play_audio");
    openapiFields.add("order_status");
    openapiFields.add("alert_triggered");
    openapiFields.add("fg_color");
    openapiFields.add("bg_color");
    openapiFields.add("order_not_editable");
    openapiFields.add("itws_orders_only");
    openapiFields.add("alert_mta_currency");
    openapiFields.add("alert_mta_defaults");
    openapiFields.add("tool_id");
    openapiFields.add("time_zone");
    openapiFields.add("alert_default_type");
    openapiFields.add("condition_size");
    openapiFields.add("condition_outside_rth");
    openapiFields.add("conditions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AlertDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AlertDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlertDetails is not found in the empty JSON string", AlertDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AlertDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlertDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("account") != null && !jsonObj.get("account").isJsonNull()) && !jsonObj.get("account").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account").toString()));
      }
      if ((jsonObj.get("alertName") != null && !jsonObj.get("alertName").isJsonNull()) && !jsonObj.get("alertName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alertName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alertName").toString()));
      }
      if ((jsonObj.get("tif") != null && !jsonObj.get("tif").isJsonNull()) && !jsonObj.get("tif").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tif` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tif").toString()));
      }
      if ((jsonObj.get("expire_time") != null && !jsonObj.get("expire_time").isJsonNull()) && !jsonObj.get("expire_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expire_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expire_time").toString()));
      }
      if ((jsonObj.get("alert_email") != null && !jsonObj.get("alert_email").isJsonNull()) && !jsonObj.get("alert_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_email").toString()));
      }
      if ((jsonObj.get("alert_message") != null && !jsonObj.get("alert_message").isJsonNull()) && !jsonObj.get("alert_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_message").toString()));
      }
      if ((jsonObj.get("order_status") != null && !jsonObj.get("order_status").isJsonNull()) && !jsonObj.get("order_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_status").toString()));
      }
      // validate the optional field `order_status`
      if (jsonObj.get("order_status") != null && !jsonObj.get("order_status").isJsonNull()) {
        OrderStatusEnum.validateJsonElement(jsonObj.get("order_status"));
      }
      if ((jsonObj.get("fg_color") != null && !jsonObj.get("fg_color").isJsonNull()) && !jsonObj.get("fg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fg_color").toString()));
      }
      if ((jsonObj.get("bg_color") != null && !jsonObj.get("bg_color").isJsonNull()) && !jsonObj.get("bg_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bg_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bg_color").toString()));
      }
      if ((jsonObj.get("alert_mta_currency") != null && !jsonObj.get("alert_mta_currency").isJsonNull()) && !jsonObj.get("alert_mta_currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_mta_currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_mta_currency").toString()));
      }
      if ((jsonObj.get("alert_mta_defaults") != null && !jsonObj.get("alert_mta_defaults").isJsonNull()) && !jsonObj.get("alert_mta_defaults").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_mta_defaults` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_mta_defaults").toString()));
      }
      if ((jsonObj.get("time_zone") != null && !jsonObj.get("time_zone").isJsonNull()) && !jsonObj.get("time_zone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_zone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_zone").toString()));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            AlertCondition.validateJsonElement(jsonArrayconditions.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlertDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlertDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlertDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlertDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<AlertDetails>() {
           @Override
           public void write(JsonWriter out, AlertDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlertDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AlertDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AlertDetails
   * @throws IOException if the JSON string is invalid with respect to AlertDetails
   */
  public static AlertDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlertDetails.class);
  }

  /**
   * Convert an instance of AlertDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

