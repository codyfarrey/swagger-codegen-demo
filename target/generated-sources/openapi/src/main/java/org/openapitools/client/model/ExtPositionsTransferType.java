/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PartialBondPosition;
import org.openapitools.client.model.PartialCashPosition;
import org.openapitools.client.model.PartialFundPosition;
import org.openapitools.client.model.PartialOptionPosition;
import org.openapitools.client.model.PartialStockPosition;
import org.openapitools.client.model.PartialWarrantPosition;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExtPositionsTransferType
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-03-18T20:44:00.611784800-05:00[America/Chicago]", comments = "Generator version: 7.12.0")
public class ExtPositionsTransferType {
  public static final String SERIALIZED_NAME_PARTIAL_STOCK_POSITIONS = "partialStockPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_STOCK_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialStockPosition> partialStockPositions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARTIAL_BOND_POSITIONS = "partialBondPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_BOND_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialBondPosition> partialBondPositions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARTIAL_OPTION_POSITIONS = "partialOptionPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_OPTION_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialOptionPosition> partialOptionPositions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARTIAL_WARRANT_POSITIONS = "partialWarrantPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_WARRANT_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialWarrantPosition> partialWarrantPositions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARTIAL_FUND_POSITIONS = "partialFundPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_FUND_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialFundPosition> partialFundPositions = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARTIAL_CASH_POSITIONS = "partialCashPositions";
  @SerializedName(SERIALIZED_NAME_PARTIAL_CASH_POSITIONS)
  @javax.annotation.Nullable
  private List<PartialCashPosition> partialCashPositions = new ArrayList<>();

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FULL("FULL"),
    
    PARTIAL("PARTIAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  @javax.annotation.Nullable
  private TypeEnum type;

  /**
   * Gets or Sets subType
   */
  @JsonAdapter(SubTypeEnum.Adapter.class)
  public enum SubTypeEnum {
    ACATS("ACATS"),
    
    ATON("ATON");

    private String value;

    SubTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SubTypeEnum fromValue(String value) {
      for (SubTypeEnum b : SubTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SubTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SubTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SubTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SubTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SubTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUB_TYPE = "subType";
  @SerializedName(SERIALIZED_NAME_SUB_TYPE)
  @javax.annotation.Nullable
  private SubTypeEnum subType;

  public static final String SERIALIZED_NAME_BROKER_ID = "brokerId";
  @SerializedName(SERIALIZED_NAME_BROKER_ID)
  @javax.annotation.Nullable
  private String brokerId;

  public static final String SERIALIZED_NAME_BROKER_NAME = "brokerName";
  @SerializedName(SERIALIZED_NAME_BROKER_NAME)
  @javax.annotation.Nullable
  private String brokerName;

  public static final String SERIALIZED_NAME_ACCOUNT_AT_BROKER = "accountAtBroker";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AT_BROKER)
  @javax.annotation.Nullable
  private String accountAtBroker;

  /**
   * Gets or Sets srcIRAType
   */
  @JsonAdapter(SrcIRATypeEnum.Adapter.class)
  public enum SrcIRATypeEnum {
    RI("RI"),
    
    RO("RO"),
    
    RT("RT"),
    
    SP("SP"),
    
    ED("ED"),
    
    TH("TH"),
    
    RH("RH"),
    
    SH("SH"),
    
    RRSP("RRSP"),
    
    SRRSP("SRRSP"),
    
    TFSA("TFSA"),
    
    SIMPLE("SIMPLE"),
    
    ISA("ISA");

    private String value;

    SrcIRATypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SrcIRATypeEnum fromValue(String value) {
      for (SrcIRATypeEnum b : SrcIRATypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SrcIRATypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SrcIRATypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SrcIRATypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SrcIRATypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SrcIRATypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SRC_I_R_A_TYPE = "srcIRAType";
  @SerializedName(SERIALIZED_NAME_SRC_I_R_A_TYPE)
  @javax.annotation.Nullable
  private SrcIRATypeEnum srcIRAType;

  public static final String SERIALIZED_NAME_MARGIN_LOAN = "marginLoan";
  @SerializedName(SERIALIZED_NAME_MARGIN_LOAN)
  @javax.annotation.Nullable
  private Boolean marginLoan;

  public static final String SERIALIZED_NAME_SHORT_POS = "shortPos";
  @SerializedName(SERIALIZED_NAME_SHORT_POS)
  @javax.annotation.Nullable
  private Boolean shortPos;

  public static final String SERIALIZED_NAME_OPTION_POS = "optionPos";
  @SerializedName(SERIALIZED_NAME_OPTION_POS)
  @javax.annotation.Nullable
  private Boolean optionPos;

  public static final String SERIALIZED_NAME_IB_ACCOUNT = "ibAccount";
  @SerializedName(SERIALIZED_NAME_IB_ACCOUNT)
  @javax.annotation.Nullable
  private String ibAccount;

  public static final String SERIALIZED_NAME_THIRD_PARTY_TYPE = "thirdPartyType";
  @SerializedName(SERIALIZED_NAME_THIRD_PARTY_TYPE)
  @javax.annotation.Nullable
  private String thirdPartyType;

  public static final String SERIALIZED_NAME_APPROXIMATE_ACCOUNT_VALUE = "approximateAccountValue";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_ACCOUNT_VALUE)
  @javax.annotation.Nullable
  private Integer approximateAccountValue;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  @javax.annotation.Nullable
  private String ssn;

  public static final String SERIALIZED_NAME_EIN = "ein";
  @SerializedName(SERIALIZED_NAME_EIN)
  @javax.annotation.Nullable
  private String ein;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  @javax.annotation.Nullable
  private String signature;

  public static final String SERIALIZED_NAME_AUTHORIZE_TO_REMOVE_FUND = "authorizeToRemoveFund";
  @SerializedName(SERIALIZED_NAME_AUTHORIZE_TO_REMOVE_FUND)
  @javax.annotation.Nullable
  private Boolean authorizeToRemoveFund;

  public ExtPositionsTransferType() {
  }

  public ExtPositionsTransferType partialStockPositions(@javax.annotation.Nullable List<PartialStockPosition> partialStockPositions) {
    this.partialStockPositions = partialStockPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialStockPositionsItem(PartialStockPosition partialStockPositionsItem) {
    if (this.partialStockPositions == null) {
      this.partialStockPositions = new ArrayList<>();
    }
    this.partialStockPositions.add(partialStockPositionsItem);
    return this;
  }

  /**
   * Get partialStockPositions
   * @return partialStockPositions
   */
  @javax.annotation.Nullable
  public List<PartialStockPosition> getPartialStockPositions() {
    return partialStockPositions;
  }

  public void setPartialStockPositions(@javax.annotation.Nullable List<PartialStockPosition> partialStockPositions) {
    this.partialStockPositions = partialStockPositions;
  }


  public ExtPositionsTransferType partialBondPositions(@javax.annotation.Nullable List<PartialBondPosition> partialBondPositions) {
    this.partialBondPositions = partialBondPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialBondPositionsItem(PartialBondPosition partialBondPositionsItem) {
    if (this.partialBondPositions == null) {
      this.partialBondPositions = new ArrayList<>();
    }
    this.partialBondPositions.add(partialBondPositionsItem);
    return this;
  }

  /**
   * Get partialBondPositions
   * @return partialBondPositions
   */
  @javax.annotation.Nullable
  public List<PartialBondPosition> getPartialBondPositions() {
    return partialBondPositions;
  }

  public void setPartialBondPositions(@javax.annotation.Nullable List<PartialBondPosition> partialBondPositions) {
    this.partialBondPositions = partialBondPositions;
  }


  public ExtPositionsTransferType partialOptionPositions(@javax.annotation.Nullable List<PartialOptionPosition> partialOptionPositions) {
    this.partialOptionPositions = partialOptionPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialOptionPositionsItem(PartialOptionPosition partialOptionPositionsItem) {
    if (this.partialOptionPositions == null) {
      this.partialOptionPositions = new ArrayList<>();
    }
    this.partialOptionPositions.add(partialOptionPositionsItem);
    return this;
  }

  /**
   * Get partialOptionPositions
   * @return partialOptionPositions
   */
  @javax.annotation.Nullable
  public List<PartialOptionPosition> getPartialOptionPositions() {
    return partialOptionPositions;
  }

  public void setPartialOptionPositions(@javax.annotation.Nullable List<PartialOptionPosition> partialOptionPositions) {
    this.partialOptionPositions = partialOptionPositions;
  }


  public ExtPositionsTransferType partialWarrantPositions(@javax.annotation.Nullable List<PartialWarrantPosition> partialWarrantPositions) {
    this.partialWarrantPositions = partialWarrantPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialWarrantPositionsItem(PartialWarrantPosition partialWarrantPositionsItem) {
    if (this.partialWarrantPositions == null) {
      this.partialWarrantPositions = new ArrayList<>();
    }
    this.partialWarrantPositions.add(partialWarrantPositionsItem);
    return this;
  }

  /**
   * Get partialWarrantPositions
   * @return partialWarrantPositions
   */
  @javax.annotation.Nullable
  public List<PartialWarrantPosition> getPartialWarrantPositions() {
    return partialWarrantPositions;
  }

  public void setPartialWarrantPositions(@javax.annotation.Nullable List<PartialWarrantPosition> partialWarrantPositions) {
    this.partialWarrantPositions = partialWarrantPositions;
  }


  public ExtPositionsTransferType partialFundPositions(@javax.annotation.Nullable List<PartialFundPosition> partialFundPositions) {
    this.partialFundPositions = partialFundPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialFundPositionsItem(PartialFundPosition partialFundPositionsItem) {
    if (this.partialFundPositions == null) {
      this.partialFundPositions = new ArrayList<>();
    }
    this.partialFundPositions.add(partialFundPositionsItem);
    return this;
  }

  /**
   * Get partialFundPositions
   * @return partialFundPositions
   */
  @javax.annotation.Nullable
  public List<PartialFundPosition> getPartialFundPositions() {
    return partialFundPositions;
  }

  public void setPartialFundPositions(@javax.annotation.Nullable List<PartialFundPosition> partialFundPositions) {
    this.partialFundPositions = partialFundPositions;
  }


  public ExtPositionsTransferType partialCashPositions(@javax.annotation.Nullable List<PartialCashPosition> partialCashPositions) {
    this.partialCashPositions = partialCashPositions;
    return this;
  }

  public ExtPositionsTransferType addPartialCashPositionsItem(PartialCashPosition partialCashPositionsItem) {
    if (this.partialCashPositions == null) {
      this.partialCashPositions = new ArrayList<>();
    }
    this.partialCashPositions.add(partialCashPositionsItem);
    return this;
  }

  /**
   * Get partialCashPositions
   * @return partialCashPositions
   */
  @javax.annotation.Nullable
  public List<PartialCashPosition> getPartialCashPositions() {
    return partialCashPositions;
  }

  public void setPartialCashPositions(@javax.annotation.Nullable List<PartialCashPosition> partialCashPositions) {
    this.partialCashPositions = partialCashPositions;
  }


  public ExtPositionsTransferType type(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(@javax.annotation.Nullable TypeEnum type) {
    this.type = type;
  }


  public ExtPositionsTransferType subType(@javax.annotation.Nullable SubTypeEnum subType) {
    this.subType = subType;
    return this;
  }

  /**
   * Get subType
   * @return subType
   */
  @javax.annotation.Nullable
  public SubTypeEnum getSubType() {
    return subType;
  }

  public void setSubType(@javax.annotation.Nullable SubTypeEnum subType) {
    this.subType = subType;
  }


  public ExtPositionsTransferType brokerId(@javax.annotation.Nullable String brokerId) {
    this.brokerId = brokerId;
    return this;
  }

  /**
   * Get brokerId
   * @return brokerId
   */
  @javax.annotation.Nullable
  public String getBrokerId() {
    return brokerId;
  }

  public void setBrokerId(@javax.annotation.Nullable String brokerId) {
    this.brokerId = brokerId;
  }


  public ExtPositionsTransferType brokerName(@javax.annotation.Nullable String brokerName) {
    this.brokerName = brokerName;
    return this;
  }

  /**
   * Get brokerName
   * @return brokerName
   */
  @javax.annotation.Nullable
  public String getBrokerName() {
    return brokerName;
  }

  public void setBrokerName(@javax.annotation.Nullable String brokerName) {
    this.brokerName = brokerName;
  }


  public ExtPositionsTransferType accountAtBroker(@javax.annotation.Nullable String accountAtBroker) {
    this.accountAtBroker = accountAtBroker;
    return this;
  }

  /**
   * Get accountAtBroker
   * @return accountAtBroker
   */
  @javax.annotation.Nullable
  public String getAccountAtBroker() {
    return accountAtBroker;
  }

  public void setAccountAtBroker(@javax.annotation.Nullable String accountAtBroker) {
    this.accountAtBroker = accountAtBroker;
  }


  public ExtPositionsTransferType srcIRAType(@javax.annotation.Nullable SrcIRATypeEnum srcIRAType) {
    this.srcIRAType = srcIRAType;
    return this;
  }

  /**
   * Get srcIRAType
   * @return srcIRAType
   */
  @javax.annotation.Nullable
  public SrcIRATypeEnum getSrcIRAType() {
    return srcIRAType;
  }

  public void setSrcIRAType(@javax.annotation.Nullable SrcIRATypeEnum srcIRAType) {
    this.srcIRAType = srcIRAType;
  }


  public ExtPositionsTransferType marginLoan(@javax.annotation.Nullable Boolean marginLoan) {
    this.marginLoan = marginLoan;
    return this;
  }

  /**
   * Get marginLoan
   * @return marginLoan
   */
  @javax.annotation.Nullable
  public Boolean getMarginLoan() {
    return marginLoan;
  }

  public void setMarginLoan(@javax.annotation.Nullable Boolean marginLoan) {
    this.marginLoan = marginLoan;
  }


  public ExtPositionsTransferType shortPos(@javax.annotation.Nullable Boolean shortPos) {
    this.shortPos = shortPos;
    return this;
  }

  /**
   * Get shortPos
   * @return shortPos
   */
  @javax.annotation.Nullable
  public Boolean getShortPos() {
    return shortPos;
  }

  public void setShortPos(@javax.annotation.Nullable Boolean shortPos) {
    this.shortPos = shortPos;
  }


  public ExtPositionsTransferType optionPos(@javax.annotation.Nullable Boolean optionPos) {
    this.optionPos = optionPos;
    return this;
  }

  /**
   * Get optionPos
   * @return optionPos
   */
  @javax.annotation.Nullable
  public Boolean getOptionPos() {
    return optionPos;
  }

  public void setOptionPos(@javax.annotation.Nullable Boolean optionPos) {
    this.optionPos = optionPos;
  }


  public ExtPositionsTransferType ibAccount(@javax.annotation.Nullable String ibAccount) {
    this.ibAccount = ibAccount;
    return this;
  }

  /**
   * Get ibAccount
   * @return ibAccount
   */
  @javax.annotation.Nullable
  public String getIbAccount() {
    return ibAccount;
  }

  public void setIbAccount(@javax.annotation.Nullable String ibAccount) {
    this.ibAccount = ibAccount;
  }


  public ExtPositionsTransferType thirdPartyType(@javax.annotation.Nullable String thirdPartyType) {
    this.thirdPartyType = thirdPartyType;
    return this;
  }

  /**
   * Get thirdPartyType
   * @return thirdPartyType
   */
  @javax.annotation.Nullable
  public String getThirdPartyType() {
    return thirdPartyType;
  }

  public void setThirdPartyType(@javax.annotation.Nullable String thirdPartyType) {
    this.thirdPartyType = thirdPartyType;
  }


  public ExtPositionsTransferType approximateAccountValue(@javax.annotation.Nullable Integer approximateAccountValue) {
    this.approximateAccountValue = approximateAccountValue;
    return this;
  }

  /**
   * Get approximateAccountValue
   * @return approximateAccountValue
   */
  @javax.annotation.Nullable
  public Integer getApproximateAccountValue() {
    return approximateAccountValue;
  }

  public void setApproximateAccountValue(@javax.annotation.Nullable Integer approximateAccountValue) {
    this.approximateAccountValue = approximateAccountValue;
  }


  public ExtPositionsTransferType ssn(@javax.annotation.Nullable String ssn) {
    this.ssn = ssn;
    return this;
  }

  /**
   * Get ssn
   * @return ssn
   */
  @javax.annotation.Nullable
  public String getSsn() {
    return ssn;
  }

  public void setSsn(@javax.annotation.Nullable String ssn) {
    this.ssn = ssn;
  }


  public ExtPositionsTransferType ein(@javax.annotation.Nullable String ein) {
    this.ein = ein;
    return this;
  }

  /**
   * Get ein
   * @return ein
   */
  @javax.annotation.Nullable
  public String getEin() {
    return ein;
  }

  public void setEin(@javax.annotation.Nullable String ein) {
    this.ein = ein;
  }


  public ExtPositionsTransferType signature(@javax.annotation.Nullable String signature) {
    this.signature = signature;
    return this;
  }

  /**
   * Get signature
   * @return signature
   */
  @javax.annotation.Nullable
  public String getSignature() {
    return signature;
  }

  public void setSignature(@javax.annotation.Nullable String signature) {
    this.signature = signature;
  }


  public ExtPositionsTransferType authorizeToRemoveFund(@javax.annotation.Nullable Boolean authorizeToRemoveFund) {
    this.authorizeToRemoveFund = authorizeToRemoveFund;
    return this;
  }

  /**
   * Get authorizeToRemoveFund
   * @return authorizeToRemoveFund
   */
  @javax.annotation.Nullable
  public Boolean getAuthorizeToRemoveFund() {
    return authorizeToRemoveFund;
  }

  public void setAuthorizeToRemoveFund(@javax.annotation.Nullable Boolean authorizeToRemoveFund) {
    this.authorizeToRemoveFund = authorizeToRemoveFund;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtPositionsTransferType extPositionsTransferType = (ExtPositionsTransferType) o;
    return Objects.equals(this.partialStockPositions, extPositionsTransferType.partialStockPositions) &&
        Objects.equals(this.partialBondPositions, extPositionsTransferType.partialBondPositions) &&
        Objects.equals(this.partialOptionPositions, extPositionsTransferType.partialOptionPositions) &&
        Objects.equals(this.partialWarrantPositions, extPositionsTransferType.partialWarrantPositions) &&
        Objects.equals(this.partialFundPositions, extPositionsTransferType.partialFundPositions) &&
        Objects.equals(this.partialCashPositions, extPositionsTransferType.partialCashPositions) &&
        Objects.equals(this.type, extPositionsTransferType.type) &&
        Objects.equals(this.subType, extPositionsTransferType.subType) &&
        Objects.equals(this.brokerId, extPositionsTransferType.brokerId) &&
        Objects.equals(this.brokerName, extPositionsTransferType.brokerName) &&
        Objects.equals(this.accountAtBroker, extPositionsTransferType.accountAtBroker) &&
        Objects.equals(this.srcIRAType, extPositionsTransferType.srcIRAType) &&
        Objects.equals(this.marginLoan, extPositionsTransferType.marginLoan) &&
        Objects.equals(this.shortPos, extPositionsTransferType.shortPos) &&
        Objects.equals(this.optionPos, extPositionsTransferType.optionPos) &&
        Objects.equals(this.ibAccount, extPositionsTransferType.ibAccount) &&
        Objects.equals(this.thirdPartyType, extPositionsTransferType.thirdPartyType) &&
        Objects.equals(this.approximateAccountValue, extPositionsTransferType.approximateAccountValue) &&
        Objects.equals(this.ssn, extPositionsTransferType.ssn) &&
        Objects.equals(this.ein, extPositionsTransferType.ein) &&
        Objects.equals(this.signature, extPositionsTransferType.signature) &&
        Objects.equals(this.authorizeToRemoveFund, extPositionsTransferType.authorizeToRemoveFund);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partialStockPositions, partialBondPositions, partialOptionPositions, partialWarrantPositions, partialFundPositions, partialCashPositions, type, subType, brokerId, brokerName, accountAtBroker, srcIRAType, marginLoan, shortPos, optionPos, ibAccount, thirdPartyType, approximateAccountValue, ssn, ein, signature, authorizeToRemoveFund);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtPositionsTransferType {\n");
    sb.append("    partialStockPositions: ").append(toIndentedString(partialStockPositions)).append("\n");
    sb.append("    partialBondPositions: ").append(toIndentedString(partialBondPositions)).append("\n");
    sb.append("    partialOptionPositions: ").append(toIndentedString(partialOptionPositions)).append("\n");
    sb.append("    partialWarrantPositions: ").append(toIndentedString(partialWarrantPositions)).append("\n");
    sb.append("    partialFundPositions: ").append(toIndentedString(partialFundPositions)).append("\n");
    sb.append("    partialCashPositions: ").append(toIndentedString(partialCashPositions)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    subType: ").append(toIndentedString(subType)).append("\n");
    sb.append("    brokerId: ").append(toIndentedString(brokerId)).append("\n");
    sb.append("    brokerName: ").append(toIndentedString(brokerName)).append("\n");
    sb.append("    accountAtBroker: ").append(toIndentedString(accountAtBroker)).append("\n");
    sb.append("    srcIRAType: ").append(toIndentedString(srcIRAType)).append("\n");
    sb.append("    marginLoan: ").append(toIndentedString(marginLoan)).append("\n");
    sb.append("    shortPos: ").append(toIndentedString(shortPos)).append("\n");
    sb.append("    optionPos: ").append(toIndentedString(optionPos)).append("\n");
    sb.append("    ibAccount: ").append(toIndentedString(ibAccount)).append("\n");
    sb.append("    thirdPartyType: ").append(toIndentedString(thirdPartyType)).append("\n");
    sb.append("    approximateAccountValue: ").append(toIndentedString(approximateAccountValue)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    ein: ").append(toIndentedString(ein)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    authorizeToRemoveFund: ").append(toIndentedString(authorizeToRemoveFund)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("partialStockPositions");
    openapiFields.add("partialBondPositions");
    openapiFields.add("partialOptionPositions");
    openapiFields.add("partialWarrantPositions");
    openapiFields.add("partialFundPositions");
    openapiFields.add("partialCashPositions");
    openapiFields.add("type");
    openapiFields.add("subType");
    openapiFields.add("brokerId");
    openapiFields.add("brokerName");
    openapiFields.add("accountAtBroker");
    openapiFields.add("srcIRAType");
    openapiFields.add("marginLoan");
    openapiFields.add("shortPos");
    openapiFields.add("optionPos");
    openapiFields.add("ibAccount");
    openapiFields.add("thirdPartyType");
    openapiFields.add("approximateAccountValue");
    openapiFields.add("ssn");
    openapiFields.add("ein");
    openapiFields.add("signature");
    openapiFields.add("authorizeToRemoveFund");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ExtPositionsTransferType
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExtPositionsTransferType.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExtPositionsTransferType is not found in the empty JSON string", ExtPositionsTransferType.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExtPositionsTransferType.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExtPositionsTransferType` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("partialStockPositions") != null && !jsonObj.get("partialStockPositions").isJsonNull()) {
        JsonArray jsonArraypartialStockPositions = jsonObj.getAsJsonArray("partialStockPositions");
        if (jsonArraypartialStockPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialStockPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialStockPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialStockPositions").toString()));
          }

          // validate the optional field `partialStockPositions` (array)
          for (int i = 0; i < jsonArraypartialStockPositions.size(); i++) {
            PartialStockPosition.validateJsonElement(jsonArraypartialStockPositions.get(i));
          };
        }
      }
      if (jsonObj.get("partialBondPositions") != null && !jsonObj.get("partialBondPositions").isJsonNull()) {
        JsonArray jsonArraypartialBondPositions = jsonObj.getAsJsonArray("partialBondPositions");
        if (jsonArraypartialBondPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialBondPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialBondPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialBondPositions").toString()));
          }

          // validate the optional field `partialBondPositions` (array)
          for (int i = 0; i < jsonArraypartialBondPositions.size(); i++) {
            PartialBondPosition.validateJsonElement(jsonArraypartialBondPositions.get(i));
          };
        }
      }
      if (jsonObj.get("partialOptionPositions") != null && !jsonObj.get("partialOptionPositions").isJsonNull()) {
        JsonArray jsonArraypartialOptionPositions = jsonObj.getAsJsonArray("partialOptionPositions");
        if (jsonArraypartialOptionPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialOptionPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialOptionPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialOptionPositions").toString()));
          }

          // validate the optional field `partialOptionPositions` (array)
          for (int i = 0; i < jsonArraypartialOptionPositions.size(); i++) {
            PartialOptionPosition.validateJsonElement(jsonArraypartialOptionPositions.get(i));
          };
        }
      }
      if (jsonObj.get("partialWarrantPositions") != null && !jsonObj.get("partialWarrantPositions").isJsonNull()) {
        JsonArray jsonArraypartialWarrantPositions = jsonObj.getAsJsonArray("partialWarrantPositions");
        if (jsonArraypartialWarrantPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialWarrantPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialWarrantPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialWarrantPositions").toString()));
          }

          // validate the optional field `partialWarrantPositions` (array)
          for (int i = 0; i < jsonArraypartialWarrantPositions.size(); i++) {
            PartialWarrantPosition.validateJsonElement(jsonArraypartialWarrantPositions.get(i));
          };
        }
      }
      if (jsonObj.get("partialFundPositions") != null && !jsonObj.get("partialFundPositions").isJsonNull()) {
        JsonArray jsonArraypartialFundPositions = jsonObj.getAsJsonArray("partialFundPositions");
        if (jsonArraypartialFundPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialFundPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialFundPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialFundPositions").toString()));
          }

          // validate the optional field `partialFundPositions` (array)
          for (int i = 0; i < jsonArraypartialFundPositions.size(); i++) {
            PartialFundPosition.validateJsonElement(jsonArraypartialFundPositions.get(i));
          };
        }
      }
      if (jsonObj.get("partialCashPositions") != null && !jsonObj.get("partialCashPositions").isJsonNull()) {
        JsonArray jsonArraypartialCashPositions = jsonObj.getAsJsonArray("partialCashPositions");
        if (jsonArraypartialCashPositions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("partialCashPositions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `partialCashPositions` to be an array in the JSON string but got `%s`", jsonObj.get("partialCashPositions").toString()));
          }

          // validate the optional field `partialCashPositions` (array)
          for (int i = 0; i < jsonArraypartialCashPositions.size(); i++) {
            PartialCashPosition.validateJsonElement(jsonArraypartialCashPositions.get(i));
          };
        }
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      if ((jsonObj.get("subType") != null && !jsonObj.get("subType").isJsonNull()) && !jsonObj.get("subType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subType").toString()));
      }
      // validate the optional field `subType`
      if (jsonObj.get("subType") != null && !jsonObj.get("subType").isJsonNull()) {
        SubTypeEnum.validateJsonElement(jsonObj.get("subType"));
      }
      if ((jsonObj.get("brokerId") != null && !jsonObj.get("brokerId").isJsonNull()) && !jsonObj.get("brokerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brokerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brokerId").toString()));
      }
      if ((jsonObj.get("brokerName") != null && !jsonObj.get("brokerName").isJsonNull()) && !jsonObj.get("brokerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brokerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brokerName").toString()));
      }
      if ((jsonObj.get("accountAtBroker") != null && !jsonObj.get("accountAtBroker").isJsonNull()) && !jsonObj.get("accountAtBroker").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountAtBroker` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountAtBroker").toString()));
      }
      if ((jsonObj.get("srcIRAType") != null && !jsonObj.get("srcIRAType").isJsonNull()) && !jsonObj.get("srcIRAType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `srcIRAType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("srcIRAType").toString()));
      }
      // validate the optional field `srcIRAType`
      if (jsonObj.get("srcIRAType") != null && !jsonObj.get("srcIRAType").isJsonNull()) {
        SrcIRATypeEnum.validateJsonElement(jsonObj.get("srcIRAType"));
      }
      if ((jsonObj.get("ibAccount") != null && !jsonObj.get("ibAccount").isJsonNull()) && !jsonObj.get("ibAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ibAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ibAccount").toString()));
      }
      if ((jsonObj.get("thirdPartyType") != null && !jsonObj.get("thirdPartyType").isJsonNull()) && !jsonObj.get("thirdPartyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thirdPartyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thirdPartyType").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("ein") != null && !jsonObj.get("ein").isJsonNull()) && !jsonObj.get("ein").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ein` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ein").toString()));
      }
      if ((jsonObj.get("signature") != null && !jsonObj.get("signature").isJsonNull()) && !jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExtPositionsTransferType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExtPositionsTransferType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExtPositionsTransferType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExtPositionsTransferType.class));

       return (TypeAdapter<T>) new TypeAdapter<ExtPositionsTransferType>() {
           @Override
           public void write(JsonWriter out, ExtPositionsTransferType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExtPositionsTransferType read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ExtPositionsTransferType given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ExtPositionsTransferType
   * @throws IOException if the JSON string is invalid with respect to ExtPositionsTransferType
   */
  public static ExtPositionsTransferType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExtPositionsTransferType.class);
  }

  /**
   * Convert an instance of ExtPositionsTransferType to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

