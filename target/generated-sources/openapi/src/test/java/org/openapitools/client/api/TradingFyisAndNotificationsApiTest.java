/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeliveryOptions;
import org.openapitools.client.model.DisclaimerInfo;
import org.openapitools.client.model.ErrorOnlyResponse;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.FyiEnableDeviceOption;
import org.openapitools.client.model.FyiSettingsInner;
import org.openapitools.client.model.FyiSettingsTypecodePostRequest;
import org.openapitools.client.model.FyiUnreadnumberGet200Response;
import org.openapitools.client.model.FyiUnreadnumberGet423Response;
import org.openapitools.client.model.FyiVT;
import org.openapitools.client.model.NotificationReadAcknowledge;
import org.openapitools.client.model.NotificationsInner;
import org.openapitools.client.model.Typecodes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TradingFyisAndNotificationsApi
 */
@Disabled
public class TradingFyisAndNotificationsApiTest {

    private final TradingFyisAndNotificationsApi api = new TradingFyisAndNotificationsApi();

    /**
     * Delete A Device
     *
     * Delete a specific device from our saved list of notification devices.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsDeviceIdDeleteTest() throws ApiException {
        Object deviceId = null;
        api.fyiDeliveryoptionsDeviceIdDelete(deviceId);
        // TODO: test validations
    }

    /**
     * Enable/Disable Device Option
     *
     * Choose whether a particular device is enabled or disabled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsDevicePostTest() throws ApiException {
        FyiEnableDeviceOption fyiEnableDeviceOption = null;
        FyiVT response = api.fyiDeliveryoptionsDevicePost(fyiEnableDeviceOption);
        // TODO: test validations
    }

    /**
     * Enable/Disable Email Option
     *
     * Enable or disable your accountâ€™s primary email to receive notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsEmailPutTest() throws ApiException {
        Object enabled = null;
        FyiVT response = api.fyiDeliveryoptionsEmailPut(enabled);
        // TODO: test validations
    }

    /**
     * Get Delivery OptionsCopy Location
     *
     * Options for sending fyis to email and other devices.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDeliveryoptionsGetTest() throws ApiException {
        DeliveryOptions response = api.fyiDeliveryoptionsGet();
        // TODO: test validations
    }

    /**
     * Get Disclaimer For A Certain Kind Of Fyi
     *
     * Receive additional disclaimers based on the specified typecode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDisclaimerTypecodeGetTest() throws ApiException {
        Typecodes typecode = null;
        DisclaimerInfo response = api.fyiDisclaimerTypecodeGet(typecode);
        // TODO: test validations
    }

    /**
     * Mark Disclaimer Read
     *
     * Mark a specific disclaimer message as read.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiDisclaimerTypecodePutTest() throws ApiException {
        Typecodes typecode = null;
        FyiVT response = api.fyiDisclaimerTypecodePut(typecode);
        // TODO: test validations
    }

    /**
     * Get A List Of Notifications
     *
     * Get a list of available notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiNotificationsGetTest() throws ApiException {
        String max = null;
        Object include = null;
        Object exclude = null;
        Object id = null;
        List<NotificationsInner> response = api.fyiNotificationsGet(max, include, exclude, id);
        // TODO: test validations
    }

    /**
     * Mark Notification Read
     *
     * Mark a particular notification message as read or unread.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiNotificationsNotificationIDPutTest() throws ApiException {
        Object notificationId = null;
        NotificationReadAcknowledge response = api.fyiNotificationsNotificationIDPut(notificationId);
        // TODO: test validations
    }

    /**
     * Get Notification Settings
     *
     * Return the current choices of subscriptions for notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiSettingsGetTest() throws ApiException {
        List<FyiSettingsInner> response = api.fyiSettingsGet();
        // TODO: test validations
    }

    /**
     * Modify FYI Notifications
     *
     * Enable or disable group of notifications by the specific typecode.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiSettingsTypecodePostTest() throws ApiException {
        Typecodes typecode = null;
        FyiSettingsTypecodePostRequest fyiSettingsTypecodePostRequest = null;
        FyiVT response = api.fyiSettingsTypecodePost(typecode, fyiSettingsTypecodePostRequest);
        // TODO: test validations
    }

    /**
     * Unread Bulletins
     *
     * Returns the total number of unread notifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fyiUnreadnumberGetTest() throws ApiException {
        FyiUnreadnumberGet200Response response = api.fyiUnreadnumberGet();
        // TODO: test validations
    }

}
