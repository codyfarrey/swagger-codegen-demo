/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BusinessRejectResponse;
import org.openapitools.client.model.EnumerationResponse;
import org.openapitools.client.model.ForbiddenRequestResponse;
import org.openapitools.client.model.FormFileResponse;
import org.openapitools.client.model.GetBrokerListResponse;
import org.openapitools.client.model.GetParticipatingListResponse;
import org.openapitools.client.model.GwApiV1FeeTemplatesPostRequest;
import org.openapitools.client.model.GwApiV1FeeTemplatesQueryPostRequest;
import org.openapitools.client.model.GwApiV1RequestsRequestIdStatusGet200Response;
import org.openapitools.client.model.InstructionResponse;
import org.openapitools.client.model.InternalServerErrorResponse;
import org.openapitools.client.model.MissingRequiredParameterResponse;
import org.openapitools.client.model.NoSuchInstructionResponse;
import org.openapitools.client.model.ProblemDetailResponse;
import org.openapitools.client.model.QueryFeeTemplateResult;
import org.openapitools.client.model.RequestDetailsRequest;
import org.openapitools.client.model.RequestDetailsResponse;
import org.openapitools.client.model.UserNameAvailableResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountManagementUtilitiesApi
 */
@Disabled
public class AccountManagementUtilitiesApiTest {

    private final AccountManagementUtilitiesApi api = new AccountManagementUtilitiesApi();

    /**
     * Get A List Of Participating Brokers For The Given Asset Type
     *
     * Get list of brokers supported for given asset transfer type&lt;br&gt;&lt;br&gt;**Scope**: &#x60;enumerations.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1EnumerationsComplexAssetTransferGetTest() throws ApiException {
        String clientId = null;
        Object instructionType = null;
        GetBrokerListResponse response = api.gwApiV1EnumerationsComplexAssetTransferGet(clientId, instructionType);
        // TODO: test validations
    }

    /**
     * Get Enumerations For Trading Permission, Employment Detail, Affiliation Detail, Financial Range Information, ACATS And So On
     *
     * Get enumerations&lt;br&gt;&lt;br&gt;**Scope**: &#x60;accounts.read&#x60; OR &#x60;enumerations.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1EnumerationsEnumerationTypeGetTest() throws ApiException {
        String type = null;
        String currency = null;
        String ibEntity = null;
        String mdStatusNonPro = null;
        String formNumber = null;
        String language = null;
        EnumerationResponse response = api.gwApiV1EnumerationsEnumerationTypeGet(type, currency, ibEntity, mdStatusNonPro, formNumber, language);
        // TODO: test validations
    }

    /**
     * Set Fees For Account
     *
     * Apply predefined fee template to existing account.&lt;br&gt;&lt;br&gt;**Scope**: &#x60;fee-templates.write&#x60;&lt;br&gt;**Security Policy**: &#x60;Signed JWT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1FeeTemplatesPostTest() throws ApiException {
        String clientId = null;
        GwApiV1FeeTemplatesPostRequest gwApiV1FeeTemplatesPostRequest = null;
        InstructionResponse response = api.gwApiV1FeeTemplatesPost(clientId, gwApiV1FeeTemplatesPostRequest);
        // TODO: test validations
    }

    /**
     * View Fee Template For Account
     *
     * View fee template applied to an existing account.&lt;br&gt;&lt;br&gt;**Scope**: &#x60;fee-templates.read&#x60;&lt;br&gt;**Security Policy**: &#x60;Signed JWT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1FeeTemplatesQueryPostTest() throws ApiException {
        String clientId = null;
        GwApiV1FeeTemplatesQueryPostRequest gwApiV1FeeTemplatesQueryPostRequest = null;
        QueryFeeTemplateResult response = api.gwApiV1FeeTemplatesQueryPost(clientId, gwApiV1FeeTemplatesQueryPostRequest);
        // TODO: test validations
    }

    /**
     * Get Forms
     *
     * Get forms&lt;br&gt;&lt;br&gt;**Scope**: &#x60;accounts.read&#x60; OR &#x60;forms.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1FormsGetTest() throws ApiException {
        List<Integer> formNo = null;
        String getDocs = null;
        String fromDate = null;
        String toDate = null;
        String language = null;
        String projection = null;
        FormFileResponse response = api.gwApiV1FormsGet(formNo, getDocs, fromDate, toDate, language, projection);
        // TODO: test validations
    }

    /**
     * Get Participating Banks
     *
     * Get list of banks which support banking connection with Interactive Brokers.&lt;br&gt;&lt;br&gt;**Scope**: &#x60;enumerations.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1ParticipatingBanksGetTest() throws ApiException {
        String clientId = null;
        String type = null;
        GetParticipatingListResponse response = api.gwApiV1ParticipatingBanksGet(clientId, type);
        // TODO: test validations
    }

    /**
     * Get Requests&#39; Details By Timeframe
     *
     * Fetch Requests&#39; Details By Timeframe&lt;br&gt;&lt;br&gt;**Scope**: &#x60;accounts.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1RequestsGetTest() throws ApiException {
        RequestDetailsRequest requestDetails = null;
        RequestDetailsResponse response = api.gwApiV1RequestsGet(requestDetails);
        // TODO: test validations
    }

    /**
     * Get Status Of A Request
     *
     * Returns status for account management request&lt;br&gt;&lt;br&gt;**Scope**: &#x60;accounts.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1RequestsRequestIdStatusGetTest() throws ApiException {
        Integer requestId = null;
        String type = null;
        GwApiV1RequestsRequestIdStatusGet200Response response = api.gwApiV1RequestsRequestIdStatusGet(requestId, type);
        // TODO: test validations
    }

    /**
     * Verify User Availability
     *
     * Verify whether user is valid and available&lt;br&gt;&lt;br&gt;**Scope**: &#x60;accounts.read&#x60; OR &#x60;validations.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1ValidationsUsernamesUsernameGetTest() throws ApiException {
        String username = null;
        UserNameAvailableResponse response = api.gwApiV1ValidationsUsernamesUsernameGet(username);
        // TODO: test validations
    }

}
