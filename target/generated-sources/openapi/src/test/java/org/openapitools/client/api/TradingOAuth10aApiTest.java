/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.OauthAccessTokenPost200Response;
import org.openapitools.client.model.OauthLiveSessionTokenPost200Response;
import org.openapitools.client.model.OauthRequestTokenPost200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TradingOAuth10aApi
 */
@Disabled
public class TradingOAuth10aApiTest {

    private final TradingOAuth10aApi api = new TradingOAuth10aApi();

    /**
     * Request An Access Token For The IB Username That Has Granted Authorization To The Consumer.
     *
     * Request an access token for the IB username that has granted authorization to the consumer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthAccessTokenPostTest() throws ApiException {
        String authorization = null;
        OauthAccessTokenPost200Response response = api.oauthAccessTokenPost(authorization);
        // TODO: test validations
    }

    /**
     * Generate A Live Session Token Shared Secret And Gain Access To Web API.
     *
     * Generate a Live Session Token shared secret and gain access to Web API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthLiveSessionTokenPostTest() throws ApiException {
        String authorization = null;
        OauthLiveSessionTokenPost200Response response = api.oauthLiveSessionTokenPost(authorization);
        // TODO: test validations
    }

    /**
     * Request A Temporary Token As A Third Party To Begin The OAuth 1.0a Authorization Workflow.
     *
     * Request a temporary token as a third party to begin the OAuth 1.0a authorization workflow.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthRequestTokenPostTest() throws ApiException {
        String authorization = null;
        OauthRequestTokenPost200Response response = api.oauthRequestTokenPost(authorization);
        // TODO: test validations
    }

}
