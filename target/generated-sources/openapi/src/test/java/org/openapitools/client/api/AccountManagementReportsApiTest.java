/*
 * IB REST API
 * The IB REST API reference documentation
 *
 * The version of the OpenAPI document: 2.13.0
 * Contact: api@interactivebrokers.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.GetAvailableStmtDatesResponse;
import org.openapitools.client.model.GetAvailableTaxFormsResponse;
import org.openapitools.client.model.GetStatementsResponse;
import org.openapitools.client.model.InsufficientScopeResponse;
import org.openapitools.client.model.InternalServerErrorResponse;
import org.openapitools.client.model.InvalidAccessTokenResponse;
import org.openapitools.client.model.MissingRequiredParameterResponse;
import org.openapitools.client.model.StmtRequest;
import org.openapitools.client.model.TaxFormRequest;
import org.openapitools.client.model.TaxFormResponse;
import org.openapitools.client.model.UnauthorizedAccessResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccountManagementReportsApi
 */
@Disabled
public class AccountManagementReportsApiTest {

    private final AccountManagementReportsApi api = new AccountManagementReportsApi();

    /**
     * Fetch Available Daily, Monthly, And Annual Report Dates For An Account Id
     *
     * &lt;br&gt;**Scope**: &#x60;statements.read&#x60; OR &#x60;reports.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1StatementsAvailableGetTest() throws ApiException {
        String authorization = null;
        String accountId = null;
        GetAvailableStmtDatesResponse response = api.gwApiV1StatementsAvailableGet(authorization, accountId);
        // TODO: test validations
    }

    /**
     * Generates Statements In Supported Formats Based On Request Parameters.
     *
     * &lt;br&gt;**Scope**: &#x60;statements.read&#x60; OR &#x60;statements.write&#x60; OR &#x60;reports.write&#x60;&lt;br&gt;**Security Policy**: &#x60;Signed JWT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1StatementsPostTest() throws ApiException {
        String authorization = null;
        StmtRequest stmtRequest = null;
        GetStatementsResponse response = api.gwApiV1StatementsPost(authorization, stmtRequest);
        // TODO: test validations
    }

    /**
     * Fetch List Of Available Tax Reports/forms/documents For A Specified Account And Tax Year
     *
     * &lt;br&gt;**Scope**: &#x60;statements.read&#x60; OR &#x60;reports.read&#x60;&lt;br&gt;**Security Policy**: &#x60;HTTPS&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1TaxDocumentsAvailableGetTest() throws ApiException {
        String authorization = null;
        String accountId = null;
        Integer year = null;
        GetAvailableTaxFormsResponse response = api.gwApiV1TaxDocumentsAvailableGet(authorization, accountId, year);
        // TODO: test validations
    }

    /**
     * Fetch Tax Forms In Supported Formats Based On Request Parameters.
     *
     * &lt;br&gt;**Scope**: &#x60;statements.write&#x60; OR &#x60;reports.write&#x60;&lt;br&gt;**Security Policy**: &#x60;Signed JWT&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void gwApiV1TaxDocumentsPostTest() throws ApiException {
        String authorization = null;
        TaxFormRequest taxFormRequest = null;
        TaxFormResponse response = api.gwApiV1TaxDocumentsPost(authorization, taxFormRequest);
        // TODO: test validations
    }

}
